import{S as If,i as Hf,s as Pf,k as t,q as l,a as r,l as p,m as e,r as c,h as a,c as i,n as k,b as u,E as n,B as Ou}from"./index-2e2fe841.js";function Cf(Kk){let I,Xs,Se,sp,B,Ws,Le,ap,H,Ja,Ae,Ie,F,He,np,Zs,sn,Pe,tp,m,Js,an,Ce,Ne,xe,sa,nn,Me,Ge,Be,aa,tn,Fe,Ue,ze,U,pn,Ye,Ve,z,Ke,Qe,na,en,je,Xe,pp,Y,ta,We,ep,pa,P,on,Ze,Je,ln,so,ao,op,C,cn,_,un,no,to,rn,po,eo,kn,oo,lo,fn,co,uo,dn,ro,io,$,b,vn,ko,fo,hn,En,vo,ho,mn,_n,Eo,mo,bn,_o,bo,gn,go,yo,g,yn,To,wo,Tn,wn,$o,Oo,$n,On,qo,Do,qn,Ro,So,Dn,Lo,Ao,y,Rn,Io,Ho,Sn,Ln,Po,Co,An,In,No,xo,Hn,Mo,Go,lp,Bo,T,Pn,Fo,Uo,Cn,Nn,zo,Yo,xn,Mn,Vo,Ko,Gn,Qo,jo,cp,up,ea,N,Xo,Bn,Wo,Zo,Fn,Jo,rp,V,oa,sl,ip,K,Qk=`<code class="language-php">   <span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
   	<span class="token variable">$age</span> <span class="token operator">=</span> <span class="token number">18</span><span class="token punctuation">;</span>
   	<span class="token function">var_dump</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// => int(18)</span>
   	<span class="token keyword">echo</span> <span class="token function">gettype</span><span class="token punctuation">(</span><span class="token variable">$age</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// => integer</span>

   	<span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"MAX"</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   	<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'he is '</span><span class="token operator">.</span><span class="token variable">$age</span><span class="token operator">.</span><span class="token string single-quoted-string">'years old'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   	<span class="token variable">$input</span> <span class="token operator">=</span> <span class="token function">trim</span><span class="token punctuation">(</span><span class="token function">fgets</span><span class="token punctuation">(</span><span class="token constant">STDIN</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code>`,kp,Q,la,al,fp,j,ca,nl,dp,X,jk=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>Condition<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// Action</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>Condition<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// Action</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">elseif</span> <span class="token punctuation">(</span>Condition<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// Action</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// Action</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">if</span><span class="token punctuation">(</span>Condition<span class="token punctuation">)</span>
  <span class="token comment">// Action</span>

<span class="token punctuation">(</span><span class="token variable">$a</span> <span class="token operator">==</span> <span class="token variable">$b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// test equality of value ($a === $b); // test</span>
equality of value <span class="token keyword">AND</span> type</span></code>`,vp,W,ua,tl,hp,Z,Xk=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">switch</span> <span class="token punctuation">(</span>variable<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token keyword">case</span> <span class="token number">1</span><span class="token punctuation">:</span> <span class="token comment">// Action</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>

  <span class="token keyword">case</span> <span class="token number">2</span><span class="token punctuation">:</span> <span class="token comment">// Action</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>

  <span class="token keyword">case</span> <span class="token number">3</span><span class="token punctuation">:</span> <span class="token comment">// Action</span>
    <span class="token keyword">break</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></span></code>`,Ep,J,ra,pl,mp,ss,Wk=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span> <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// Action</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">do</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// Action</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$i</span> <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// Action</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$items</span> <span class="token keyword">as</span> <span class="token variable">$item</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// Action</span>
<span class="token punctuation">&#125;</span></span></code>`,_p,ia,as,el,Un,ol,ll,bp,ns,ka,cl,gp,ts,Zk=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"MIN"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">define</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"MAX"</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$alea</span> <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token constant">MIN</span><span class="token punctuation">,</span><span class="token constant">MAX</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// alias of mt_rand(MIN,MAX) since PHP</span></span></code>`,yp,ps,fa,ul,Tp,es,Jk=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$table</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"E1"</span><span class="token operator">=></span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"E2"</span><span class="token operator">=></span><span class="token number">6</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"E3"</span><span class="token operator">=></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token variable">$table</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'E1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token variable">$table</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'E2'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">13</span><span class="token punctuation">;</span>
<span class="token variable">$table</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'V1'</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>

<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'E1'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 10</span>

<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$table</span> <span class="token keyword">as</span> <span class="token variable">$key</span> <span class="token operator">=></span> <span class="token variable">$value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

<span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token string double-quoted-string">"<span class="token interpolation"><span class="token variable">$key</span></span> : <span class="token interpolation"><span class="token variable">$value</span></span> n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">&#125;</span>

<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token variable">$i</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token variable">$i</span><span class="token operator">&lt;</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">$i</span><span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

<span class="token keyword">echo</span> <span class="token variable">$test</span><span class="token punctuation">[</span><span class="token variable">$i</span><span class="token punctuation">;</span><span class="token punctuation">]</span>

<span class="token punctuation">&#125;</span>

<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$table</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* Array ( [E1] => 10 [E2] => 13 [E3] => 5 [V1] => 5 ) */</span>

<span class="token variable">$test</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token variable">$test</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 3</span></span></code>`,wp,os,da,rl,$p,ls,sf=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$array_a</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$array_b</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token operator">...</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token variable">$array_a</span> <span class="token operator">+</span> <span class="token variable">$array_b</span> <span class="token comment">// union of a and b</span>
<span class="token function">array_merge</span><span class="token punctuation">(</span><span class="token variable">$array_a</span><span class="token punctuation">,</span> $<span class="token punctuation">[</span><span class="token keyword type-declaration">array</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// addition of items</span>
<span class="token function">array_intersect</span><span class="token punctuation">(</span><span class="token variable">$array_a</span><span class="token punctuation">,</span> $<span class="token punctuation">[</span><span class="token keyword type-declaration">array</span><span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// intersection of items</span>

<span class="token function">min</span><span class="token punctuation">(</span><span class="token variable">$array_a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return the min elem</span>
<span class="token function">max</span><span class="token punctuation">(</span><span class="token variable">$array_a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return the max elem</span>
<span class="token function">array_sum</span><span class="token punctuation">(</span><span class="token variable">$array_a</span><span class="token punctuation">,</span> <span class="token variable">$array_b</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return the sum of elem</span>
<span class="token function">in_array</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test"</span><span class="token punctuation">,</span> <span class="token variable">$array_a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// search and return true/false</span>
<span class="token function">array_search</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"test"</span><span class="token punctuation">,</span> <span class="token variable">$array_a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// search and return the position</span>
<span class="token function">array_shift</span><span class="token punctuation">(</span><span class="token variable">$array_a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// extract the first value </span>
<span class="token function">array_pop</span><span class="token punctuation">(</span><span class="token variable">$array_a</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// extract the last value</span>

<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">6.1234</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 6.12 echo(pow(5,2)); // 25</span>

<span class="token function">array_slice</span><span class="token punctuation">(</span><span class="token variable">$array</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code>`,Op,cs,va,il,qp,us,af=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$string</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'my String'</span><span class="token punctuation">;</span> <span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'length: '</span> <span class="token operator">.</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// length: 9</span>

<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'substr 0 7: '</span> <span class="token operator">.</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// substr 0 7: my Stri</span>

<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'substr 1 1: '</span> <span class="token operator">.</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// substr 1 1: y </span>
<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'substr 1: '</span> <span class="token operator">.</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// substr 1: y String</span>
<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'strpos S: '</span> <span class="token operator">.</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"S"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// strpos S: 3 (First occurence)</span>
<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'strpos s: '</span> <span class="token operator">.</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"s"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// strpos s: false (Case sensitive)</span>
<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'stripos s: '</span> <span class="token operator">.</span> <span class="token function">stripos</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"s"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// stripos s: 3 (Not case sensitive)</span>
<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'strrpos s: '</span> <span class="token operator">.</span> <span class="token function">strrpos</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">,</span> <span class="token string double-quoted-string">"s"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// strrpos s: 3 (Last occurence)</span>

<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'lower: '</span> <span class="token operator">.</span> <span class="token function">strtolower</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// lower: my string</span>
<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'upper: '</span> <span class="token operator">.</span> <span class="token function">strtoupper</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// upper: MY STRING</span>

<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'first maj: '</span> <span class="token operator">.</span> <span class="token function">ucfirst</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// first maj: My String</span>
<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'first min: '</span> <span class="token operator">.</span> <span class="token function">lcfirst</span><span class="token punctuation">(</span><span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// first min: my string</span>

<span class="token function">explode</span><span class="token punctuation">(</span><span class="token string double-quoted-string">" "</span><span class="token punctuation">,</span> <span class="token variable">$chain</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code>`,Dp,rs,ha,kl,Rp,is,nf=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token function">filter_var</span><span class="token punctuation">(</span><span class="token variable">$mail</span><span class="token punctuation">,</span> <span class="token constant">FILTER_VALIDATE_EMAIL</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token variable">$verification</span> <span class="token operator">=</span>
<span class="token function">preg_match</span><span class="token punctuation">(</span><span class="token variable">$pattern</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code>`,Sp,Ea,fl,Lp,ma,E,ks,zn,Yn,dl,vl,Vn,hl,El,fs,Kn,Qn,ml,_l,jn,bl,gl,ds,Xn,Wn,yl,Tl,Zn,wl,$l,vs,Jn,st,qu=1+"",Ol,ql,at,Dl,Rl,hs,nt,tt,Sl,Ll,pt,Al,Il,Es,et,ot,Hl,Pl,lt,Cl,Ap,ms,_a,Nl,Ip,_s,tf=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$handle</span> <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"file.txt"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// pointer or false if</span>
<span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> 
  <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token variable">$buffer</span> <span class="token operator">=</span> <span class="token function">fgets</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token constant boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
  <span class="token comment">// return the line of a defined size </span>
  <span class="token keyword">echo</span> <span class="token variable">$buffer</span><span class="token punctuation">;</span> 
  <span class="token punctuation">&#125;</span> 
<span class="token punctuation">&#125;</span>

<span class="token function">fwrite</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">,</span> <span class="token variable">$string</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token function">fclose</span><span class="token punctuation">(</span><span class="token variable">$handle</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token function">file</span><span class="token punctuation">(</span><span class="token variable">$filename</span> <span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token constant">FILE_IGNORE_NEW_LINES</span> <span class="token operator">/</span>
<span class="token constant">FILE_SKIP_EMPTY_LINES</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// return file in array</span></span></code>`,Hp,ba,xl,Pp,ga,O,bs,ct,ut,Ml,Gl,rt,Bl,Fl,gs,it,kt,Ul,zl,ft,Yl,Vl,ys,dt,vt,Kl,Ql,ht,jl,Xl,Ts,Et,mt,Wl,Zl,_t,Jl,Cp,ws,ya,sc,Np,$s,pf=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token function">date_default_timezone_set</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Europe/Paris'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'Y'</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'m'</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span></code>`,xp,Os,Ta,ac,Mp,qs,ef=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">function</span> <span class="token function-definition function">say</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">[</span><span class="token punctuation">,</span> <span class="token variable">$language</span><span class="token operator">=</span><span class="token string double-quoted-string">"EN"</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

<span class="token keyword">echo</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token variable">$language</span><span class="token punctuation">;</span>

<span class="token punctuation">&#125;</span></span></code>`,Gp,Ds,wa,nc,Bp,Rs,$a,tc,Fp,Ss,Oa,pc,Up,Ls,of=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>form</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inscription<span class="token punctuation">"</span></span> <span class="token attr-name">method</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>post<span class="token punctuation">"</span></span> <span class="token attr-name">action</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>form.php<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>label</span> <span class="token attr-name">for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Name:<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>label</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>
<span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>name<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>submit<span class="token punctuation">"</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>validate<span class="token punctuation">"</span></span>
<span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>validate<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Send<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>form</span><span class="token punctuation">></span></span></code>`,zp,qa,bt,ec,Yp,As,Da,oc,Vp,d,Ra,gt,lc,cc,uc,Sa,yt,rc,ic,kc,La,Tt,fc,dc,vc,Aa,wt,hc,Ec,mc,Ia,$t,_c,bc,gc,Ha,Ot,yc,Tc,wc,Pa,qt,$c,Oc,qc,Ca,Dt,Dc,Rc,Kp,Is,Na,Sc,Qp,Hs,lf=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>area<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>area<span class="token punctuation">"</span></span> <span class="token attr-name">rows</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span> <span class="token attr-name">cols</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>10<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

default text

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">></span></span></code>`,jp,Ps,xa,Lc,Xp,x,Ma,Rt,Ac,Ic,Hc,Ga,St,Pc,Cc,Wp,Cs,Ba,Nc,Zp,Fa,Lt,xc,Jp,Ns,Ua,Mc,se,xs,cf=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>select</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>departement<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>departement<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>choice A<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Choice A<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span>
<span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>choice B<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Choice B<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>option</span>
<span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>choice C<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Choice C<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>option</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>select</span><span class="token punctuation">></span></span></code>`,ae,Ms,za,Gc,ne,f,At,It,Bc,Fc,Ht,Pt,Uc,zc,Ct,Nt,Yc,Vc,xt,Mt,Kc,Qc,Gt,Bt,jc,Xc,Ft,Ut,Wc,Zc,zt,Yt,Jc,su,Vt,Kt,au,nu,Qt,jt,tu,te,Gs,Ya,pu,pe,Bs,uf=`<code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fieldset</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>legend</span><span class="token punctuation">></span></span> Legend <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>legend</span><span class="token punctuation">></span></span>

<span class="token comment">&lt;!-- FORM --></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fieldset</span><span class="token punctuation">></span></span></code>`,ee,Fs,Va,eu,oe,Us,rf=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token function">print_r</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">echo</span> <span class="token punctuation">(</span><span class="token string double-quoted-string">"Hello "</span><span class="token operator">.</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"name"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">isset</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"sports"</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$sport</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

<span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;ul>"</span><span class="token punctuation">;</span> <span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token string double-quoted-string">"sports"</span><span class="token punctuation">]</span> <span class="token keyword">as</span> <span class="token variable">$sport</span><span class="token punctuation">)</span>
<span class="token punctuation">&#123;</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;li> <span class="token interpolation"><span class="token variable">$sport</span></span> &lt;/li>"</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token keyword">echo</span> <span class="token string double-quoted-string">"&lt;/ul>"</span><span class="token punctuation">;</span>

<span class="token punctuation">&#125;</span></span></code>`,le,zs,Ka,ou,ce,Ys,kf=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

<span class="token keyword">include_once</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"file.php"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">&#125;</span></span></code>`,ue,Vs,Qa,lu,re,Ks,ff=`<code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>

<span class="token variable">$names</span> <span class="token operator">=</span> <span class="token keyword">array</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'name'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'surname'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">foreach</span> <span class="token punctuation">(</span><span class="token variable">$names</span> <span class="token keyword">as</span> <span class="token variable">$name</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

<span class="token variable">$$name</span> <span class="token operator">=</span> <span class="token variable">$_POST</span><span class="token punctuation">[</span><span class="token variable">$name</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token punctuation">&#125;</span>

<span class="token keyword">echo</span> <span class="token variable">$name</span><span class="token punctuation">;</span> <span class="token comment">// instead of echo $_POST["name"]; echo</span>
<span class="token variable">$surname</span><span class="token punctuation">;</span></span></code>`,ie,Qs,ja,cu,ke,Xa,Xt,uu,fe,js,Wa,ru,de,Za,Wt,iu;return{c(){I=t("h2"),Xs=t("a"),Se=l("Cheat Sheets"),sp=r(),B=t("h3"),Ws=t("a"),Le=l("Usefull Informations"),ap=r(),H=t("p"),Ja=t("strong"),Ae=l("Official Documentation"),Ie=l(": "),F=t("a"),He=l("https://www.php.net/docs.php"),np=r(),Zs=t("p"),sn=t("strong"),Pe=l("About PHP"),tp=r(),m=t("ul"),Js=t("li"),an=t("strong"),Ce=l("Type of Language:"),Ne=l(" Imperative, Object-Oriented"),xe=r(),sa=t("li"),nn=t("strong"),Me=l("Born in:"),Ge=l(" 1994"),Be=r(),aa=t("li"),tn=t("strong"),Fe=l("Caracteristics:"),Ue=l(" Simple, permissive, html imbedded"),ze=r(),U=t("li"),pn=t("strong"),Ye=l("Popularity:"),Ve=l(" 5.85% (5th) "),z=t("a"),Ke=l("src"),Qe=r(),na=t("li"),en=t("strong"),je=l("Usefull for:"),Xe=l(" website backend, database linking"),pp=r(),Y=t("h3"),ta=t("a"),We=l("Types and Variables"),ep=r(),pa=t("blockquote"),P=t("p"),on=t("code"),Ze=l("variable typing"),Je=l(" is "),ln=t("strong"),so=l("automatic"),ao=l(" in PHP"),op=r(),C=t("table"),cn=t("thead"),_=t("tr"),un=t("th"),no=l("Name"),to=r(),rn=t("th"),po=l("Expression"),eo=r(),kn=t("th"),oo=l("Size"),lo=r(),fn=t("th"),co=l("Min"),uo=r(),dn=t("th"),ro=l("Max"),io=r(),$=t("tbody"),b=t("tr"),vn=t("td"),ko=l("Boolean"),fo=r(),hn=t("td"),En=t("code"),vo=l("$foo = true;"),ho=r(),mn=t("td"),_n=t("code"),Eo=l("1 bits"),mo=r(),bn=t("td"),_o=l("0 (false)"),bo=r(),gn=t("td"),go=l("1 (true)"),yo=r(),g=t("tr"),yn=t("td"),To=l("Int"),wo=r(),Tn=t("td"),wn=t("code"),$o=l("$foo = 1234;"),Oo=r(),$n=t("td"),On=t("code"),qo=l("32+ bits"),Do=r(),qn=t("td"),Ro=l("-9.223e+15"),So=r(),Dn=t("td"),Lo=l("9.223e+15"),Ao=r(),y=t("tr"),Rn=t("td"),Io=l("Float/Double"),Ho=r(),Sn=t("td"),Ln=t("code"),Po=l("$foo = 1.24;"),Co=r(),An=t("td"),In=t("code"),No=l("32+ bits"),xo=r(),Hn=t("td"),Mo=l("accuracy 1.11e-16"),Go=r(),lp=t("td"),Bo=r(),T=t("tr"),Pn=t("td"),Fo=l("String"),Uo=r(),Cn=t("td"),Nn=t("code"),zo=l("echo 'test';"),Yo=r(),xn=t("td"),Mn=t("code"),Vo=l("32+ bits"),Ko=r(),Gn=t("td"),Qo=l(`64-bits => no restriction, else
1.6e+10`),jo=r(),cp=t("td"),up=r(),ea=t("blockquote"),N=t("p"),Xo=l("It’s also possible do define the type like "),Bn=t("code"),Wo=l("$foo = (double)4;"),Zo=l(` or like
`),Fn=t("code"),Jo=l("settype($foo,'double');"),rp=r(),V=t("h3"),oa=t("a"),sl=l("Input Output"),ip=r(),K=t("pre"),kp=r(),Q=t("h3"),la=t("a"),al=l("Variables, Tests and Loops"),fp=r(),j=t("h5"),ca=t("a"),nl=l("TESTS"),dp=r(),X=t("pre"),vp=r(),W=t("h5"),ua=t("a"),tl=l("SWITCH"),hp=r(),Z=t("pre"),Ep=r(),J=t("h5"),ra=t("a"),pl=l("LOOPS"),mp=r(),ss=t("pre"),_p=r(),ia=t("blockquote"),as=t("p"),el=l("You can use "),Un=t("code"),ol=l("break;"),ll=l(" to stop a loop."),bp=r(),ns=t("h3"),ka=t("a"),cl=l("Random numbers"),gp=r(),ts=t("pre"),yp=r(),ps=t("h3"),fa=t("a"),ul=l("Arrays"),Tp=r(),es=t("pre"),wp=r(),os=t("h5"),da=t("a"),rl=l("ARRAYS OPERATORS"),$p=r(),ls=t("pre"),Op=r(),cs=t("h5"),va=t("a"),il=l("STRINGS"),qp=r(),us=t("pre"),Dp=r(),rs=t("h5"),ha=t("a"),kl=l("FILTER"),Rp=r(),is=t("pre"),Sp=r(),Ea=t("p"),fl=l("filter table:"),Lp=r(),ma=t("table"),E=t("tbody"),ks=t("tr"),zn=t("td"),Yn=t("code"),dl=l("$"),vl=r(),Vn=t("td"),hl=l("end chain"),El=r(),fs=t("tr"),Kn=t("td"),Qn=t("code"),ml=l("^"),_l=r(),jn=t("td"),bl=l("begin chain"),gl=r(),ds=t("tr"),Xn=t("td"),Wn=t("code"),yl=l("."),Tl=r(),Zn=t("td"),wl=l("anything"),$l=r(),vs=t("tr"),Jn=t("td"),st=t("code"),Ol=l(qu),ql=r(),at=t("td"),Dl=l("exact number"),Rl=r(),hs=t("tr"),nt=t("td"),tt=t("code"),Sl=l("[a-z]"),Ll=r(),pt=t("td"),Al=l("chars"),Il=r(),Es=t("tr"),et=t("td"),ot=t("code"),Hl=l("[^b]"),Pl=r(),lt=t("td"),Cl=l("not char"),Ap=r(),ms=t("h5"),_a=t("a"),Nl=l("FOLDERS"),Ip=r(),_s=t("pre"),Hp=r(),ba=t("p"),xl=l("options:"),Pp=r(),ga=t("table"),O=t("tbody"),bs=t("tr"),ct=t("td"),ut=t("code"),Ml=l("r"),Gl=r(),rt=t("td"),Bl=l("read from beggining"),Fl=r(),gs=t("tr"),it=t("td"),kt=t("code"),Ul=l("r+"),zl=r(),ft=t("td"),Yl=l("writing from end"),Vl=r(),ys=t("tr"),dt=t("td"),vt=t("code"),Kl=l("w"),Ql=r(),ht=t("td"),jl=l("reset and write"),Xl=r(),Ts=t("tr"),Et=t("td"),mt=t("code"),Wl=l("a"),Zl=r(),_t=t("td"),Jl=l("reate or write from end"),Cp=r(),ws=t("h5"),ya=t("a"),sc=l("DATE"),Np=r(),$s=t("pre"),xp=r(),Os=t("h3"),Ta=t("a"),ac=l("Functions"),Mp=r(),qs=t("pre"),Gp=r(),Ds=t("h2"),wa=t("a"),nc=l("Embedded PHP"),Bp=r(),Rs=t("h3"),$a=t("a"),tc=l("Post/Get"),Fp=r(),Ss=t("h5"),Oa=t("a"),pc=l("FORM"),Up=r(),Ls=t("pre"),zp=r(),qa=t("blockquote"),bt=t("p"),ec=l("TODO"),Yp=r(),As=t("h5"),Da=t("a"),oc=l("Text Input"),Vp=r(),d=t("ul"),Ra=t("li"),gt=t("strong"),lc=l("value:"),cc=l(" displayed value"),uc=r(),Sa=t("li"),yt=t("strong"),rc=l("size:"),ic=l(" handler size"),kc=r(),La=t("li"),Tt=t("strong"),fc=l("name:"),dc=l(" datas in php"),vc=r(),Aa=t("li"),wt=t("strong"),hc=l("placeholder:"),Ec=l(" information"),mc=r(),Ia=t("li"),$t=t("strong"),_c=l("maxlength:"),bc=l(" max enabled"),gc=r(),Ha=t("li"),Ot=t("strong"),yc=l("title:"),Tc=l(" hovering info"),wc=r(),Pa=t("li"),qt=t("strong"),$c=l("required:"),Oc=l(" needed to validate"),qc=r(),Ca=t("li"),Dt=t("strong"),Dc=l("pattern"),Rc=l(" =“^[A-Za-z]+$”"),Kp=r(),Is=t("h5"),Na=t("a"),Sc=l("TextArea Input"),Qp=r(),Hs=t("pre"),jp=r(),Ps=t("h5"),xa=t("a"),Lc=l("Radio Input"),Xp=r(),x=t("ul"),Ma=t("li"),Rt=t("strong"),Ac=l("value:"),Ic=l(" 0 or 1"),Hc=r(),Ga=t("li"),St=t("strong"),Pc=l("checked:"),Cc=l(" default"),Wp=r(),Cs=t("h5"),Ba=t("a"),Nc=l("Checkbox Input"),Zp=r(),Fa=t("ul"),Lt=t("li"),xc=l("name=“array[]”"),Jp=r(),Ns=t("h5"),Ua=t("a"),Mc=l("Select Input"),se=r(),xs=t("pre"),ae=r(),Ms=t("h5"),za=t("a"),Gc=l("Special Inputs"),ne=r(),f=t("ul"),At=t("li"),It=t("strong"),Bc=l("url"),Fc=r(),Ht=t("li"),Pt=t("strong"),Uc=l("email"),zc=r(),Ct=t("li"),Nt=t("strong"),Yc=l("number"),Vc=r(),xt=t("li"),Mt=t("strong"),Kc=l("tel"),Qc=r(),Gt=t("li"),Bt=t("strong"),jc=l("date"),Xc=r(),Ft=t("li"),Ut=t("strong"),Wc=l("time"),Zc=r(),zt=t("li"),Yt=t("strong"),Jc=l("search"),su=r(),Vt=t("li"),Kt=t("strong"),au=l("color"),nu=r(),Qt=t("li"),jt=t("strong"),tu=l("range"),te=r(),Gs=t("h5"),Ya=t("a"),pu=l("FieldSet"),pe=r(),Bs=t("pre"),ee=r(),Fs=t("h5"),Va=t("a"),eu=l("Datas"),oe=r(),Us=t("pre"),le=r(),zs=t("h5"),Ka=t("a"),ou=l("Include in same page"),ce=r(),Ys=t("pre"),ue=r(),Vs=t("h5"),Qa=t("a"),lu=l("Dynamic variable"),re=r(),Ks=t("pre"),ie=r(),Qs=t("h2"),ja=t("a"),cu=l("MVC"),ke=r(),Xa=t("blockquote"),Xt=t("p"),uu=l("TODO"),fe=r(),js=t("h2"),Wa=t("a"),ru=l("Laravel"),de=r(),Za=t("blockquote"),Wt=t("p"),iu=l("TODO"),this.h()},l(s){I=p(s,"H2",{id:!0});var o=e(I);Xs=p(o,"A",{href:!0});var Du=e(Xs);Se=c(Du,"Cheat Sheets"),Du.forEach(a),o.forEach(a),sp=i(s),B=p(s,"H3",{id:!0});var Ru=e(B);Ws=p(Ru,"A",{href:!0});var Su=e(Ws);Le=c(Su,"Usefull Informations"),Su.forEach(a),Ru.forEach(a),ap=i(s),H=p(s,"P",{});var ve=e(H);Ja=p(ve,"STRONG",{});var Lu=e(Ja);Ae=c(Lu,"Official Documentation"),Lu.forEach(a),Ie=c(ve,": "),F=p(ve,"A",{href:!0,rel:!0});var Au=e(F);He=c(Au,"https://www.php.net/docs.php"),Au.forEach(a),ve.forEach(a),np=i(s),Zs=p(s,"P",{});var Iu=e(Zs);sn=p(Iu,"STRONG",{});var Hu=e(sn);Pe=c(Hu,"About PHP"),Hu.forEach(a),Iu.forEach(a),tp=i(s),m=p(s,"UL",{});var q=e(m);Js=p(q,"LI",{});var ku=e(Js);an=p(ku,"STRONG",{});var Pu=e(an);Ce=c(Pu,"Type of Language:"),Pu.forEach(a),Ne=c(ku," Imperative, Object-Oriented"),ku.forEach(a),xe=i(q),sa=p(q,"LI",{});var fu=e(sa);nn=p(fu,"STRONG",{});var Cu=e(nn);Me=c(Cu,"Born in:"),Cu.forEach(a),Ge=c(fu," 1994"),fu.forEach(a),Be=i(q),aa=p(q,"LI",{});var du=e(aa);tn=p(du,"STRONG",{});var Nu=e(tn);Fe=c(Nu,"Caracteristics:"),Nu.forEach(a),Ue=c(du," Simple, permissive, html imbedded"),du.forEach(a),ze=i(q),U=p(q,"LI",{});var he=e(U);pn=p(he,"STRONG",{});var xu=e(pn);Ye=c(xu,"Popularity:"),xu.forEach(a),Ve=c(he," 5.85% (5th) "),z=p(he,"A",{href:!0,rel:!0});var Mu=e(z);Ke=c(Mu,"src"),Mu.forEach(a),he.forEach(a),Qe=i(q),na=p(q,"LI",{});var vu=e(na);en=p(vu,"STRONG",{});var Gu=e(en);je=c(Gu,"Usefull for:"),Gu.forEach(a),Xe=c(vu," website backend, database linking"),vu.forEach(a),q.forEach(a),pp=i(s),Y=p(s,"H3",{id:!0});var Bu=e(Y);ta=p(Bu,"A",{href:!0});var Fu=e(ta);We=c(Fu,"Types and Variables"),Fu.forEach(a),Bu.forEach(a),ep=i(s),pa=p(s,"BLOCKQUOTE",{});var Uu=e(pa);P=p(Uu,"P",{});var Zt=e(P);on=p(Zt,"CODE",{});var zu=e(on);Ze=c(zu,"variable typing"),zu.forEach(a),Je=c(Zt," is "),ln=p(Zt,"STRONG",{});var Yu=e(ln);so=c(Yu,"automatic"),Yu.forEach(a),ao=c(Zt," in PHP"),Zt.forEach(a),Uu.forEach(a),op=i(s),C=p(s,"TABLE",{});var Ee=e(C);cn=p(Ee,"THEAD",{});var Vu=e(cn);_=p(Vu,"TR",{class:!0});var D=e(_);un=p(D,"TH",{});var Ku=e(un);no=c(Ku,"Name"),Ku.forEach(a),to=i(D),rn=p(D,"TH",{});var Qu=e(rn);po=c(Qu,"Expression"),Qu.forEach(a),eo=i(D),kn=p(D,"TH",{});var ju=e(kn);oo=c(ju,"Size"),ju.forEach(a),lo=i(D),fn=p(D,"TH",{});var Xu=e(fn);co=c(Xu,"Min"),Xu.forEach(a),uo=i(D),dn=p(D,"TH",{});var Wu=e(dn);ro=c(Wu,"Max"),Wu.forEach(a),D.forEach(a),Vu.forEach(a),io=i(Ee),$=p(Ee,"TBODY",{});var M=e($);b=p(M,"TR",{});var R=e(b);vn=p(R,"TD",{});var Zu=e(vn);ko=c(Zu,"Boolean"),Zu.forEach(a),fo=i(R),hn=p(R,"TD",{});var Ju=e(hn);En=p(Ju,"CODE",{});var sr=e(En);vo=c(sr,"$foo = true;"),sr.forEach(a),Ju.forEach(a),ho=i(R),mn=p(R,"TD",{});var ar=e(mn);_n=p(ar,"CODE",{});var nr=e(_n);Eo=c(nr,"1 bits"),nr.forEach(a),ar.forEach(a),mo=i(R),bn=p(R,"TD",{});var tr=e(bn);_o=c(tr,"0 (false)"),tr.forEach(a),bo=i(R),gn=p(R,"TD",{});var pr=e(gn);go=c(pr,"1 (true)"),pr.forEach(a),R.forEach(a),yo=i(M),g=p(M,"TR",{});var S=e(g);yn=p(S,"TD",{});var er=e(yn);To=c(er,"Int"),er.forEach(a),wo=i(S),Tn=p(S,"TD",{});var or=e(Tn);wn=p(or,"CODE",{});var lr=e(wn);$o=c(lr,"$foo = 1234;"),lr.forEach(a),or.forEach(a),Oo=i(S),$n=p(S,"TD",{});var cr=e($n);On=p(cr,"CODE",{});var ur=e(On);qo=c(ur,"32+ bits"),ur.forEach(a),cr.forEach(a),Do=i(S),qn=p(S,"TD",{});var rr=e(qn);Ro=c(rr,"-9.223e+15"),rr.forEach(a),So=i(S),Dn=p(S,"TD",{});var ir=e(Dn);Lo=c(ir,"9.223e+15"),ir.forEach(a),S.forEach(a),Ao=i(M),y=p(M,"TR",{});var L=e(y);Rn=p(L,"TD",{});var kr=e(Rn);Io=c(kr,"Float/Double"),kr.forEach(a),Ho=i(L),Sn=p(L,"TD",{});var fr=e(Sn);Ln=p(fr,"CODE",{});var dr=e(Ln);Po=c(dr,"$foo = 1.24;"),dr.forEach(a),fr.forEach(a),Co=i(L),An=p(L,"TD",{});var vr=e(An);In=p(vr,"CODE",{});var hr=e(In);No=c(hr,"32+ bits"),hr.forEach(a),vr.forEach(a),xo=i(L),Hn=p(L,"TD",{});var Er=e(Hn);Mo=c(Er,"accuracy 1.11e-16"),Er.forEach(a),Go=i(L),lp=p(L,"TD",{}),e(lp).forEach(a),L.forEach(a),Bo=i(M),T=p(M,"TR",{});var A=e(T);Pn=p(A,"TD",{});var mr=e(Pn);Fo=c(mr,"String"),mr.forEach(a),Uo=i(A),Cn=p(A,"TD",{});var _r=e(Cn);Nn=p(_r,"CODE",{});var br=e(Nn);zo=c(br,"echo 'test';"),br.forEach(a),_r.forEach(a),Yo=i(A),xn=p(A,"TD",{});var gr=e(xn);Mn=p(gr,"CODE",{});var yr=e(Mn);Vo=c(yr,"32+ bits"),yr.forEach(a),gr.forEach(a),Ko=i(A),Gn=p(A,"TD",{});var Tr=e(Gn);Qo=c(Tr,`64-bits => no restriction, else
1.6e+10`),Tr.forEach(a),jo=i(A),cp=p(A,"TD",{}),e(cp).forEach(a),A.forEach(a),M.forEach(a),Ee.forEach(a),up=i(s),ea=p(s,"BLOCKQUOTE",{});var wr=e(ea);N=p(wr,"P",{});var Jt=e(N);Xo=c(Jt,"It’s also possible do define the type like "),Bn=p(Jt,"CODE",{});var $r=e(Bn);Wo=c($r,"$foo = (double)4;"),$r.forEach(a),Zo=c(Jt,` or like
`),Fn=p(Jt,"CODE",{});var Or=e(Fn);Jo=c(Or,"settype($foo,'double');"),Or.forEach(a),Jt.forEach(a),wr.forEach(a),rp=i(s),V=p(s,"H3",{id:!0});var qr=e(V);oa=p(qr,"A",{href:!0});var Dr=e(oa);sl=c(Dr,"Input Output"),Dr.forEach(a),qr.forEach(a),ip=i(s),K=p(s,"PRE",{class:!0});var df=e(K);df.forEach(a),kp=i(s),Q=p(s,"H3",{id:!0});var Rr=e(Q);la=p(Rr,"A",{href:!0});var Sr=e(la);al=c(Sr,"Variables, Tests and Loops"),Sr.forEach(a),Rr.forEach(a),fp=i(s),j=p(s,"H5",{id:!0});var Lr=e(j);ca=p(Lr,"A",{href:!0});var Ar=e(ca);nl=c(Ar,"TESTS"),Ar.forEach(a),Lr.forEach(a),dp=i(s),X=p(s,"PRE",{class:!0});var vf=e(X);vf.forEach(a),vp=i(s),W=p(s,"H5",{id:!0});var Ir=e(W);ua=p(Ir,"A",{href:!0});var Hr=e(ua);tl=c(Hr,"SWITCH"),Hr.forEach(a),Ir.forEach(a),hp=i(s),Z=p(s,"PRE",{class:!0});var hf=e(Z);hf.forEach(a),Ep=i(s),J=p(s,"H5",{id:!0});var Pr=e(J);ra=p(Pr,"A",{href:!0});var Cr=e(ra);pl=c(Cr,"LOOPS"),Cr.forEach(a),Pr.forEach(a),mp=i(s),ss=p(s,"PRE",{class:!0});var Ef=e(ss);Ef.forEach(a),_p=i(s),ia=p(s,"BLOCKQUOTE",{});var Nr=e(ia);as=p(Nr,"P",{});var me=e(as);el=c(me,"You can use "),Un=p(me,"CODE",{});var xr=e(Un);ol=c(xr,"break;"),xr.forEach(a),ll=c(me," to stop a loop."),me.forEach(a),Nr.forEach(a),bp=i(s),ns=p(s,"H3",{id:!0});var Mr=e(ns);ka=p(Mr,"A",{href:!0});var Gr=e(ka);cl=c(Gr,"Random numbers"),Gr.forEach(a),Mr.forEach(a),gp=i(s),ts=p(s,"PRE",{class:!0});var mf=e(ts);mf.forEach(a),yp=i(s),ps=p(s,"H3",{id:!0});var Br=e(ps);fa=p(Br,"A",{href:!0});var Fr=e(fa);ul=c(Fr,"Arrays"),Fr.forEach(a),Br.forEach(a),Tp=i(s),es=p(s,"PRE",{class:!0});var _f=e(es);_f.forEach(a),wp=i(s),os=p(s,"H5",{id:!0});var Ur=e(os);da=p(Ur,"A",{href:!0});var zr=e(da);rl=c(zr,"ARRAYS OPERATORS"),zr.forEach(a),Ur.forEach(a),$p=i(s),ls=p(s,"PRE",{class:!0});var bf=e(ls);bf.forEach(a),Op=i(s),cs=p(s,"H5",{id:!0});var Yr=e(cs);va=p(Yr,"A",{href:!0});var Vr=e(va);il=c(Vr,"STRINGS"),Vr.forEach(a),Yr.forEach(a),qp=i(s),us=p(s,"PRE",{class:!0});var gf=e(us);gf.forEach(a),Dp=i(s),rs=p(s,"H5",{id:!0});var Kr=e(rs);ha=p(Kr,"A",{href:!0});var Qr=e(ha);kl=c(Qr,"FILTER"),Qr.forEach(a),Kr.forEach(a),Rp=i(s),is=p(s,"PRE",{class:!0});var yf=e(is);yf.forEach(a),Sp=i(s),Ea=p(s,"P",{});var jr=e(Ea);fl=c(jr,"filter table:"),jr.forEach(a),Lp=i(s),ma=p(s,"TABLE",{});var Xr=e(ma);E=p(Xr,"TBODY",{});var w=e(E);ks=p(w,"TR",{});var _e=e(ks);zn=p(_e,"TD",{});var Wr=e(zn);Yn=p(Wr,"CODE",{});var Zr=e(Yn);dl=c(Zr,"$"),Zr.forEach(a),Wr.forEach(a),vl=i(_e),Vn=p(_e,"TD",{});var Jr=e(Vn);hl=c(Jr,"end chain"),Jr.forEach(a),_e.forEach(a),El=i(w),fs=p(w,"TR",{});var be=e(fs);Kn=p(be,"TD",{});var si=e(Kn);Qn=p(si,"CODE",{});var ai=e(Qn);ml=c(ai,"^"),ai.forEach(a),si.forEach(a),_l=i(be),jn=p(be,"TD",{});var ni=e(jn);bl=c(ni,"begin chain"),ni.forEach(a),be.forEach(a),gl=i(w),ds=p(w,"TR",{});var ge=e(ds);Xn=p(ge,"TD",{});var ti=e(Xn);Wn=p(ti,"CODE",{});var pi=e(Wn);yl=c(pi,"."),pi.forEach(a),ti.forEach(a),Tl=i(ge),Zn=p(ge,"TD",{});var ei=e(Zn);wl=c(ei,"anything"),ei.forEach(a),ge.forEach(a),$l=i(w),vs=p(w,"TR",{});var ye=e(vs);Jn=p(ye,"TD",{});var oi=e(Jn);st=p(oi,"CODE",{});var li=e(st);Ol=c(li,qu),li.forEach(a),oi.forEach(a),ql=i(ye),at=p(ye,"TD",{});var ci=e(at);Dl=c(ci,"exact number"),ci.forEach(a),ye.forEach(a),Rl=i(w),hs=p(w,"TR",{});var Te=e(hs);nt=p(Te,"TD",{});var ui=e(nt);tt=p(ui,"CODE",{});var ri=e(tt);Sl=c(ri,"[a-z]"),ri.forEach(a),ui.forEach(a),Ll=i(Te),pt=p(Te,"TD",{});var ii=e(pt);Al=c(ii,"chars"),ii.forEach(a),Te.forEach(a),Il=i(w),Es=p(w,"TR",{});var we=e(Es);et=p(we,"TD",{});var ki=e(et);ot=p(ki,"CODE",{});var fi=e(ot);Hl=c(fi,"[^b]"),fi.forEach(a),ki.forEach(a),Pl=i(we),lt=p(we,"TD",{});var di=e(lt);Cl=c(di,"not char"),di.forEach(a),we.forEach(a),w.forEach(a),Xr.forEach(a),Ap=i(s),ms=p(s,"H5",{id:!0});var vi=e(ms);_a=p(vi,"A",{href:!0});var hi=e(_a);Nl=c(hi,"FOLDERS"),hi.forEach(a),vi.forEach(a),Ip=i(s),_s=p(s,"PRE",{class:!0});var Tf=e(_s);Tf.forEach(a),Hp=i(s),ba=p(s,"P",{});var Ei=e(ba);xl=c(Ei,"options:"),Ei.forEach(a),Pp=i(s),ga=p(s,"TABLE",{});var mi=e(ga);O=p(mi,"TBODY",{});var G=e(O);bs=p(G,"TR",{});var $e=e(bs);ct=p($e,"TD",{});var _i=e(ct);ut=p(_i,"CODE",{});var bi=e(ut);Ml=c(bi,"r"),bi.forEach(a),_i.forEach(a),Gl=i($e),rt=p($e,"TD",{});var gi=e(rt);Bl=c(gi,"read from beggining"),gi.forEach(a),$e.forEach(a),Fl=i(G),gs=p(G,"TR",{});var Oe=e(gs);it=p(Oe,"TD",{});var yi=e(it);kt=p(yi,"CODE",{});var Ti=e(kt);Ul=c(Ti,"r+"),Ti.forEach(a),yi.forEach(a),zl=i(Oe),ft=p(Oe,"TD",{});var wi=e(ft);Yl=c(wi,"writing from end"),wi.forEach(a),Oe.forEach(a),Vl=i(G),ys=p(G,"TR",{});var qe=e(ys);dt=p(qe,"TD",{});var $i=e(dt);vt=p($i,"CODE",{});var Oi=e(vt);Kl=c(Oi,"w"),Oi.forEach(a),$i.forEach(a),Ql=i(qe),ht=p(qe,"TD",{});var qi=e(ht);jl=c(qi,"reset and write"),qi.forEach(a),qe.forEach(a),Xl=i(G),Ts=p(G,"TR",{});var De=e(Ts);Et=p(De,"TD",{});var Di=e(Et);mt=p(Di,"CODE",{});var Ri=e(mt);Wl=c(Ri,"a"),Ri.forEach(a),Di.forEach(a),Zl=i(De),_t=p(De,"TD",{});var Si=e(_t);Jl=c(Si,"reate or write from end"),Si.forEach(a),De.forEach(a),G.forEach(a),mi.forEach(a),Cp=i(s),ws=p(s,"H5",{id:!0});var Li=e(ws);ya=p(Li,"A",{href:!0});var Ai=e(ya);sc=c(Ai,"DATE"),Ai.forEach(a),Li.forEach(a),Np=i(s),$s=p(s,"PRE",{class:!0});var wf=e($s);wf.forEach(a),xp=i(s),Os=p(s,"H3",{id:!0});var Ii=e(Os);Ta=p(Ii,"A",{href:!0});var Hi=e(Ta);ac=c(Hi,"Functions"),Hi.forEach(a),Ii.forEach(a),Mp=i(s),qs=p(s,"PRE",{class:!0});var $f=e(qs);$f.forEach(a),Gp=i(s),Ds=p(s,"H2",{id:!0});var Pi=e(Ds);wa=p(Pi,"A",{href:!0});var Ci=e(wa);nc=c(Ci,"Embedded PHP"),Ci.forEach(a),Pi.forEach(a),Bp=i(s),Rs=p(s,"H3",{id:!0});var Ni=e(Rs);$a=p(Ni,"A",{href:!0});var xi=e($a);tc=c(xi,"Post/Get"),xi.forEach(a),Ni.forEach(a),Fp=i(s),Ss=p(s,"H5",{id:!0});var Mi=e(Ss);Oa=p(Mi,"A",{href:!0});var Gi=e(Oa);pc=c(Gi,"FORM"),Gi.forEach(a),Mi.forEach(a),Up=i(s),Ls=p(s,"PRE",{class:!0});var Of=e(Ls);Of.forEach(a),zp=i(s),qa=p(s,"BLOCKQUOTE",{});var Bi=e(qa);bt=p(Bi,"P",{});var Fi=e(bt);ec=c(Fi,"TODO"),Fi.forEach(a),Bi.forEach(a),Yp=i(s),As=p(s,"H5",{id:!0});var Ui=e(As);Da=p(Ui,"A",{href:!0});var zi=e(Da);oc=c(zi,"Text Input"),zi.forEach(a),Ui.forEach(a),Vp=i(s),d=p(s,"UL",{});var h=e(d);Ra=p(h,"LI",{});var hu=e(Ra);gt=p(hu,"STRONG",{});var Yi=e(gt);lc=c(Yi,"value:"),Yi.forEach(a),cc=c(hu," displayed value"),hu.forEach(a),uc=i(h),Sa=p(h,"LI",{});var Eu=e(Sa);yt=p(Eu,"STRONG",{});var Vi=e(yt);rc=c(Vi,"size:"),Vi.forEach(a),ic=c(Eu," handler size"),Eu.forEach(a),kc=i(h),La=p(h,"LI",{});var mu=e(La);Tt=p(mu,"STRONG",{});var Ki=e(Tt);fc=c(Ki,"name:"),Ki.forEach(a),dc=c(mu," datas in php"),mu.forEach(a),vc=i(h),Aa=p(h,"LI",{});var _u=e(Aa);wt=p(_u,"STRONG",{});var Qi=e(wt);hc=c(Qi,"placeholder:"),Qi.forEach(a),Ec=c(_u," information"),_u.forEach(a),mc=i(h),Ia=p(h,"LI",{});var bu=e(Ia);$t=p(bu,"STRONG",{});var ji=e($t);_c=c(ji,"maxlength:"),ji.forEach(a),bc=c(bu," max enabled"),bu.forEach(a),gc=i(h),Ha=p(h,"LI",{});var gu=e(Ha);Ot=p(gu,"STRONG",{});var Xi=e(Ot);yc=c(Xi,"title:"),Xi.forEach(a),Tc=c(gu," hovering info"),gu.forEach(a),wc=i(h),Pa=p(h,"LI",{});var yu=e(Pa);qt=p(yu,"STRONG",{});var Wi=e(qt);$c=c(Wi,"required:"),Wi.forEach(a),Oc=c(yu," needed to validate"),yu.forEach(a),qc=i(h),Ca=p(h,"LI",{});var Tu=e(Ca);Dt=p(Tu,"STRONG",{});var Zi=e(Dt);Dc=c(Zi,"pattern"),Zi.forEach(a),Rc=c(Tu," =“^[A-Za-z]+$”"),Tu.forEach(a),h.forEach(a),Kp=i(s),Is=p(s,"H5",{id:!0});var Ji=e(Is);Na=p(Ji,"A",{href:!0});var sk=e(Na);Sc=c(sk,"TextArea Input"),sk.forEach(a),Ji.forEach(a),Qp=i(s),Hs=p(s,"PRE",{class:!0});var qf=e(Hs);qf.forEach(a),jp=i(s),Ps=p(s,"H5",{id:!0});var ak=e(Ps);xa=p(ak,"A",{href:!0});var nk=e(xa);Lc=c(nk,"Radio Input"),nk.forEach(a),ak.forEach(a),Xp=i(s),x=p(s,"UL",{});var Re=e(x);Ma=p(Re,"LI",{});var wu=e(Ma);Rt=p(wu,"STRONG",{});var tk=e(Rt);Ac=c(tk,"value:"),tk.forEach(a),Ic=c(wu," 0 or 1"),wu.forEach(a),Hc=i(Re),Ga=p(Re,"LI",{});var $u=e(Ga);St=p($u,"STRONG",{});var pk=e(St);Pc=c(pk,"checked:"),pk.forEach(a),Cc=c($u," default"),$u.forEach(a),Re.forEach(a),Wp=i(s),Cs=p(s,"H5",{id:!0});var ek=e(Cs);Ba=p(ek,"A",{href:!0});var ok=e(Ba);Nc=c(ok,"Checkbox Input"),ok.forEach(a),ek.forEach(a),Zp=i(s),Fa=p(s,"UL",{});var lk=e(Fa);Lt=p(lk,"LI",{});var ck=e(Lt);xc=c(ck,"name=“array[]”"),ck.forEach(a),lk.forEach(a),Jp=i(s),Ns=p(s,"H5",{id:!0});var uk=e(Ns);Ua=p(uk,"A",{href:!0});var rk=e(Ua);Mc=c(rk,"Select Input"),rk.forEach(a),uk.forEach(a),se=i(s),xs=p(s,"PRE",{class:!0});var Df=e(xs);Df.forEach(a),ae=i(s),Ms=p(s,"H5",{id:!0});var ik=e(Ms);za=p(ik,"A",{href:!0});var kk=e(za);Gc=c(kk,"Special Inputs"),kk.forEach(a),ik.forEach(a),ne=i(s),f=p(s,"UL",{});var v=e(f);At=p(v,"LI",{});var fk=e(At);It=p(fk,"STRONG",{});var dk=e(It);Bc=c(dk,"url"),dk.forEach(a),fk.forEach(a),Fc=i(v),Ht=p(v,"LI",{});var vk=e(Ht);Pt=p(vk,"STRONG",{});var hk=e(Pt);Uc=c(hk,"email"),hk.forEach(a),vk.forEach(a),zc=i(v),Ct=p(v,"LI",{});var Ek=e(Ct);Nt=p(Ek,"STRONG",{});var mk=e(Nt);Yc=c(mk,"number"),mk.forEach(a),Ek.forEach(a),Vc=i(v),xt=p(v,"LI",{});var _k=e(xt);Mt=p(_k,"STRONG",{});var bk=e(Mt);Kc=c(bk,"tel"),bk.forEach(a),_k.forEach(a),Qc=i(v),Gt=p(v,"LI",{});var gk=e(Gt);Bt=p(gk,"STRONG",{});var yk=e(Bt);jc=c(yk,"date"),yk.forEach(a),gk.forEach(a),Xc=i(v),Ft=p(v,"LI",{});var Tk=e(Ft);Ut=p(Tk,"STRONG",{});var wk=e(Ut);Wc=c(wk,"time"),wk.forEach(a),Tk.forEach(a),Zc=i(v),zt=p(v,"LI",{});var $k=e(zt);Yt=p($k,"STRONG",{});var Ok=e(Yt);Jc=c(Ok,"search"),Ok.forEach(a),$k.forEach(a),su=i(v),Vt=p(v,"LI",{});var qk=e(Vt);Kt=p(qk,"STRONG",{});var Dk=e(Kt);au=c(Dk,"color"),Dk.forEach(a),qk.forEach(a),nu=i(v),Qt=p(v,"LI",{});var Rk=e(Qt);jt=p(Rk,"STRONG",{});var Sk=e(jt);tu=c(Sk,"range"),Sk.forEach(a),Rk.forEach(a),v.forEach(a),te=i(s),Gs=p(s,"H5",{id:!0});var Lk=e(Gs);Ya=p(Lk,"A",{href:!0});var Ak=e(Ya);pu=c(Ak,"FieldSet"),Ak.forEach(a),Lk.forEach(a),pe=i(s),Bs=p(s,"PRE",{class:!0});var Rf=e(Bs);Rf.forEach(a),ee=i(s),Fs=p(s,"H5",{id:!0});var Ik=e(Fs);Va=p(Ik,"A",{href:!0});var Hk=e(Va);eu=c(Hk,"Datas"),Hk.forEach(a),Ik.forEach(a),oe=i(s),Us=p(s,"PRE",{class:!0});var Sf=e(Us);Sf.forEach(a),le=i(s),zs=p(s,"H5",{id:!0});var Pk=e(zs);Ka=p(Pk,"A",{href:!0});var Ck=e(Ka);ou=c(Ck,"Include in same page"),Ck.forEach(a),Pk.forEach(a),ce=i(s),Ys=p(s,"PRE",{class:!0});var Lf=e(Ys);Lf.forEach(a),ue=i(s),Vs=p(s,"H5",{id:!0});var Nk=e(Vs);Qa=p(Nk,"A",{href:!0});var xk=e(Qa);lu=c(xk,"Dynamic variable"),xk.forEach(a),Nk.forEach(a),re=i(s),Ks=p(s,"PRE",{class:!0});var Af=e(Ks);Af.forEach(a),ie=i(s),Qs=p(s,"H2",{id:!0});var Mk=e(Qs);ja=p(Mk,"A",{href:!0});var Gk=e(ja);cu=c(Gk,"MVC"),Gk.forEach(a),Mk.forEach(a),ke=i(s),Xa=p(s,"BLOCKQUOTE",{});var Bk=e(Xa);Xt=p(Bk,"P",{});var Fk=e(Xt);uu=c(Fk,"TODO"),Fk.forEach(a),Bk.forEach(a),fe=i(s),js=p(s,"H2",{id:!0});var Uk=e(js);Wa=p(Uk,"A",{href:!0});var zk=e(Wa);ru=c(zk,"Laravel"),zk.forEach(a),Uk.forEach(a),de=i(s),Za=p(s,"BLOCKQUOTE",{});var Yk=e(Za);Wt=p(Yk,"P",{});var Vk=e(Wt);iu=c(Vk,"TODO"),Vk.forEach(a),Yk.forEach(a),this.h()},h(){k(Xs,"href","#cheat-sheets"),k(I,"id","cheat-sheets"),k(Ws,"href","#usefull-informations"),k(B,"id","usefull-informations"),k(F,"href","https://www.php.net/docs.php"),k(F,"rel","nofollow"),k(z,"href","http://pypl.github.io/PYPL.html"),k(z,"rel","nofollow"),k(ta,"href","#types-and-variables"),k(Y,"id","types-and-variables"),k(_,"class","header"),k(oa,"href","#input-output"),k(V,"id","input-output"),k(K,"class","language-php"),k(la,"href","#variables-tests-and-loops"),k(Q,"id","variables-tests-and-loops"),k(ca,"href","#tests"),k(j,"id","tests"),k(X,"class","language-php"),k(ua,"href","#switch"),k(W,"id","switch"),k(Z,"class","language-php"),k(ra,"href","#loops"),k(J,"id","loops"),k(ss,"class","language-php"),k(ka,"href","#random-numbers"),k(ns,"id","random-numbers"),k(ts,"class","language-php"),k(fa,"href","#arrays"),k(ps,"id","arrays"),k(es,"class","language-php"),k(da,"href","#arrays-operators"),k(os,"id","arrays-operators"),k(ls,"class","language-php"),k(va,"href","#strings"),k(cs,"id","strings"),k(us,"class","language-php"),k(ha,"href","#filter"),k(rs,"id","filter"),k(is,"class","language-php"),k(_a,"href","#folders"),k(ms,"id","folders"),k(_s,"class","language-php"),k(ya,"href","#date"),k(ws,"id","date"),k($s,"class","language-php"),k(Ta,"href","#functions"),k(Os,"id","functions"),k(qs,"class","language-php"),k(wa,"href","#embedded-php"),k(Ds,"id","embedded-php"),k($a,"href","#postget"),k(Rs,"id","postget"),k(Oa,"href","#form"),k(Ss,"id","form"),k(Ls,"class","language-html"),k(Da,"href","#text-input"),k(As,"id","text-input"),k(Na,"href","#textarea-input"),k(Is,"id","textarea-input"),k(Hs,"class","language-html"),k(xa,"href","#radio-input"),k(Ps,"id","radio-input"),k(Ba,"href","#checkbox-input"),k(Cs,"id","checkbox-input"),k(Ua,"href","#select-input"),k(Ns,"id","select-input"),k(xs,"class","language-html"),k(za,"href","#special-inputs"),k(Ms,"id","special-inputs"),k(Ya,"href","#fieldset"),k(Gs,"id","fieldset"),k(Bs,"class","language-html"),k(Va,"href","#datas"),k(Fs,"id","datas"),k(Us,"class","language-php"),k(Ka,"href","#include-in-same-page"),k(zs,"id","include-in-same-page"),k(Ys,"class","language-php"),k(Qa,"href","#dynamic-variable"),k(Vs,"id","dynamic-variable"),k(Ks,"class","language-php"),k(ja,"href","#mvc"),k(Qs,"id","mvc"),k(Wa,"href","#laravel"),k(js,"id","laravel")},m(s,o){u(s,I,o),n(I,Xs),n(Xs,Se),u(s,sp,o),u(s,B,o),n(B,Ws),n(Ws,Le),u(s,ap,o),u(s,H,o),n(H,Ja),n(Ja,Ae),n(H,Ie),n(H,F),n(F,He),u(s,np,o),u(s,Zs,o),n(Zs,sn),n(sn,Pe),u(s,tp,o),u(s,m,o),n(m,Js),n(Js,an),n(an,Ce),n(Js,Ne),n(m,xe),n(m,sa),n(sa,nn),n(nn,Me),n(sa,Ge),n(m,Be),n(m,aa),n(aa,tn),n(tn,Fe),n(aa,Ue),n(m,ze),n(m,U),n(U,pn),n(pn,Ye),n(U,Ve),n(U,z),n(z,Ke),n(m,Qe),n(m,na),n(na,en),n(en,je),n(na,Xe),u(s,pp,o),u(s,Y,o),n(Y,ta),n(ta,We),u(s,ep,o),u(s,pa,o),n(pa,P),n(P,on),n(on,Ze),n(P,Je),n(P,ln),n(ln,so),n(P,ao),u(s,op,o),u(s,C,o),n(C,cn),n(cn,_),n(_,un),n(un,no),n(_,to),n(_,rn),n(rn,po),n(_,eo),n(_,kn),n(kn,oo),n(_,lo),n(_,fn),n(fn,co),n(_,uo),n(_,dn),n(dn,ro),n(C,io),n(C,$),n($,b),n(b,vn),n(vn,ko),n(b,fo),n(b,hn),n(hn,En),n(En,vo),n(b,ho),n(b,mn),n(mn,_n),n(_n,Eo),n(b,mo),n(b,bn),n(bn,_o),n(b,bo),n(b,gn),n(gn,go),n($,yo),n($,g),n(g,yn),n(yn,To),n(g,wo),n(g,Tn),n(Tn,wn),n(wn,$o),n(g,Oo),n(g,$n),n($n,On),n(On,qo),n(g,Do),n(g,qn),n(qn,Ro),n(g,So),n(g,Dn),n(Dn,Lo),n($,Ao),n($,y),n(y,Rn),n(Rn,Io),n(y,Ho),n(y,Sn),n(Sn,Ln),n(Ln,Po),n(y,Co),n(y,An),n(An,In),n(In,No),n(y,xo),n(y,Hn),n(Hn,Mo),n(y,Go),n(y,lp),n($,Bo),n($,T),n(T,Pn),n(Pn,Fo),n(T,Uo),n(T,Cn),n(Cn,Nn),n(Nn,zo),n(T,Yo),n(T,xn),n(xn,Mn),n(Mn,Vo),n(T,Ko),n(T,Gn),n(Gn,Qo),n(T,jo),n(T,cp),u(s,up,o),u(s,ea,o),n(ea,N),n(N,Xo),n(N,Bn),n(Bn,Wo),n(N,Zo),n(N,Fn),n(Fn,Jo),u(s,rp,o),u(s,V,o),n(V,oa),n(oa,sl),u(s,ip,o),u(s,K,o),K.innerHTML=Qk,u(s,kp,o),u(s,Q,o),n(Q,la),n(la,al),u(s,fp,o),u(s,j,o),n(j,ca),n(ca,nl),u(s,dp,o),u(s,X,o),X.innerHTML=jk,u(s,vp,o),u(s,W,o),n(W,ua),n(ua,tl),u(s,hp,o),u(s,Z,o),Z.innerHTML=Xk,u(s,Ep,o),u(s,J,o),n(J,ra),n(ra,pl),u(s,mp,o),u(s,ss,o),ss.innerHTML=Wk,u(s,_p,o),u(s,ia,o),n(ia,as),n(as,el),n(as,Un),n(Un,ol),n(as,ll),u(s,bp,o),u(s,ns,o),n(ns,ka),n(ka,cl),u(s,gp,o),u(s,ts,o),ts.innerHTML=Zk,u(s,yp,o),u(s,ps,o),n(ps,fa),n(fa,ul),u(s,Tp,o),u(s,es,o),es.innerHTML=Jk,u(s,wp,o),u(s,os,o),n(os,da),n(da,rl),u(s,$p,o),u(s,ls,o),ls.innerHTML=sf,u(s,Op,o),u(s,cs,o),n(cs,va),n(va,il),u(s,qp,o),u(s,us,o),us.innerHTML=af,u(s,Dp,o),u(s,rs,o),n(rs,ha),n(ha,kl),u(s,Rp,o),u(s,is,o),is.innerHTML=nf,u(s,Sp,o),u(s,Ea,o),n(Ea,fl),u(s,Lp,o),u(s,ma,o),n(ma,E),n(E,ks),n(ks,zn),n(zn,Yn),n(Yn,dl),n(ks,vl),n(ks,Vn),n(Vn,hl),n(E,El),n(E,fs),n(fs,Kn),n(Kn,Qn),n(Qn,ml),n(fs,_l),n(fs,jn),n(jn,bl),n(E,gl),n(E,ds),n(ds,Xn),n(Xn,Wn),n(Wn,yl),n(ds,Tl),n(ds,Zn),n(Zn,wl),n(E,$l),n(E,vs),n(vs,Jn),n(Jn,st),n(st,Ol),n(vs,ql),n(vs,at),n(at,Dl),n(E,Rl),n(E,hs),n(hs,nt),n(nt,tt),n(tt,Sl),n(hs,Ll),n(hs,pt),n(pt,Al),n(E,Il),n(E,Es),n(Es,et),n(et,ot),n(ot,Hl),n(Es,Pl),n(Es,lt),n(lt,Cl),u(s,Ap,o),u(s,ms,o),n(ms,_a),n(_a,Nl),u(s,Ip,o),u(s,_s,o),_s.innerHTML=tf,u(s,Hp,o),u(s,ba,o),n(ba,xl),u(s,Pp,o),u(s,ga,o),n(ga,O),n(O,bs),n(bs,ct),n(ct,ut),n(ut,Ml),n(bs,Gl),n(bs,rt),n(rt,Bl),n(O,Fl),n(O,gs),n(gs,it),n(it,kt),n(kt,Ul),n(gs,zl),n(gs,ft),n(ft,Yl),n(O,Vl),n(O,ys),n(ys,dt),n(dt,vt),n(vt,Kl),n(ys,Ql),n(ys,ht),n(ht,jl),n(O,Xl),n(O,Ts),n(Ts,Et),n(Et,mt),n(mt,Wl),n(Ts,Zl),n(Ts,_t),n(_t,Jl),u(s,Cp,o),u(s,ws,o),n(ws,ya),n(ya,sc),u(s,Np,o),u(s,$s,o),$s.innerHTML=pf,u(s,xp,o),u(s,Os,o),n(Os,Ta),n(Ta,ac),u(s,Mp,o),u(s,qs,o),qs.innerHTML=ef,u(s,Gp,o),u(s,Ds,o),n(Ds,wa),n(wa,nc),u(s,Bp,o),u(s,Rs,o),n(Rs,$a),n($a,tc),u(s,Fp,o),u(s,Ss,o),n(Ss,Oa),n(Oa,pc),u(s,Up,o),u(s,Ls,o),Ls.innerHTML=of,u(s,zp,o),u(s,qa,o),n(qa,bt),n(bt,ec),u(s,Yp,o),u(s,As,o),n(As,Da),n(Da,oc),u(s,Vp,o),u(s,d,o),n(d,Ra),n(Ra,gt),n(gt,lc),n(Ra,cc),n(d,uc),n(d,Sa),n(Sa,yt),n(yt,rc),n(Sa,ic),n(d,kc),n(d,La),n(La,Tt),n(Tt,fc),n(La,dc),n(d,vc),n(d,Aa),n(Aa,wt),n(wt,hc),n(Aa,Ec),n(d,mc),n(d,Ia),n(Ia,$t),n($t,_c),n(Ia,bc),n(d,gc),n(d,Ha),n(Ha,Ot),n(Ot,yc),n(Ha,Tc),n(d,wc),n(d,Pa),n(Pa,qt),n(qt,$c),n(Pa,Oc),n(d,qc),n(d,Ca),n(Ca,Dt),n(Dt,Dc),n(Ca,Rc),u(s,Kp,o),u(s,Is,o),n(Is,Na),n(Na,Sc),u(s,Qp,o),u(s,Hs,o),Hs.innerHTML=lf,u(s,jp,o),u(s,Ps,o),n(Ps,xa),n(xa,Lc),u(s,Xp,o),u(s,x,o),n(x,Ma),n(Ma,Rt),n(Rt,Ac),n(Ma,Ic),n(x,Hc),n(x,Ga),n(Ga,St),n(St,Pc),n(Ga,Cc),u(s,Wp,o),u(s,Cs,o),n(Cs,Ba),n(Ba,Nc),u(s,Zp,o),u(s,Fa,o),n(Fa,Lt),n(Lt,xc),u(s,Jp,o),u(s,Ns,o),n(Ns,Ua),n(Ua,Mc),u(s,se,o),u(s,xs,o),xs.innerHTML=cf,u(s,ae,o),u(s,Ms,o),n(Ms,za),n(za,Gc),u(s,ne,o),u(s,f,o),n(f,At),n(At,It),n(It,Bc),n(f,Fc),n(f,Ht),n(Ht,Pt),n(Pt,Uc),n(f,zc),n(f,Ct),n(Ct,Nt),n(Nt,Yc),n(f,Vc),n(f,xt),n(xt,Mt),n(Mt,Kc),n(f,Qc),n(f,Gt),n(Gt,Bt),n(Bt,jc),n(f,Xc),n(f,Ft),n(Ft,Ut),n(Ut,Wc),n(f,Zc),n(f,zt),n(zt,Yt),n(Yt,Jc),n(f,su),n(f,Vt),n(Vt,Kt),n(Kt,au),n(f,nu),n(f,Qt),n(Qt,jt),n(jt,tu),u(s,te,o),u(s,Gs,o),n(Gs,Ya),n(Ya,pu),u(s,pe,o),u(s,Bs,o),Bs.innerHTML=uf,u(s,ee,o),u(s,Fs,o),n(Fs,Va),n(Va,eu),u(s,oe,o),u(s,Us,o),Us.innerHTML=rf,u(s,le,o),u(s,zs,o),n(zs,Ka),n(Ka,ou),u(s,ce,o),u(s,Ys,o),Ys.innerHTML=kf,u(s,ue,o),u(s,Vs,o),n(Vs,Qa),n(Qa,lu),u(s,re,o),u(s,Ks,o),Ks.innerHTML=ff,u(s,ie,o),u(s,Qs,o),n(Qs,ja),n(ja,cu),u(s,ke,o),u(s,Xa,o),n(Xa,Xt),n(Xt,uu),u(s,fe,o),u(s,js,o),n(js,Wa),n(Wa,ru),u(s,de,o),u(s,Za,o),n(Za,Wt),n(Wt,iu)},p:Ou,i:Ou,o:Ou,d(s){s&&a(I),s&&a(sp),s&&a(B),s&&a(ap),s&&a(H),s&&a(np),s&&a(Zs),s&&a(tp),s&&a(m),s&&a(pp),s&&a(Y),s&&a(ep),s&&a(pa),s&&a(op),s&&a(C),s&&a(up),s&&a(ea),s&&a(rp),s&&a(V),s&&a(ip),s&&a(K),s&&a(kp),s&&a(Q),s&&a(fp),s&&a(j),s&&a(dp),s&&a(X),s&&a(vp),s&&a(W),s&&a(hp),s&&a(Z),s&&a(Ep),s&&a(J),s&&a(mp),s&&a(ss),s&&a(_p),s&&a(ia),s&&a(bp),s&&a(ns),s&&a(gp),s&&a(ts),s&&a(yp),s&&a(ps),s&&a(Tp),s&&a(es),s&&a(wp),s&&a(os),s&&a($p),s&&a(ls),s&&a(Op),s&&a(cs),s&&a(qp),s&&a(us),s&&a(Dp),s&&a(rs),s&&a(Rp),s&&a(is),s&&a(Sp),s&&a(Ea),s&&a(Lp),s&&a(ma),s&&a(Ap),s&&a(ms),s&&a(Ip),s&&a(_s),s&&a(Hp),s&&a(ba),s&&a(Pp),s&&a(ga),s&&a(Cp),s&&a(ws),s&&a(Np),s&&a($s),s&&a(xp),s&&a(Os),s&&a(Mp),s&&a(qs),s&&a(Gp),s&&a(Ds),s&&a(Bp),s&&a(Rs),s&&a(Fp),s&&a(Ss),s&&a(Up),s&&a(Ls),s&&a(zp),s&&a(qa),s&&a(Yp),s&&a(As),s&&a(Vp),s&&a(d),s&&a(Kp),s&&a(Is),s&&a(Qp),s&&a(Hs),s&&a(jp),s&&a(Ps),s&&a(Xp),s&&a(x),s&&a(Wp),s&&a(Cs),s&&a(Zp),s&&a(Fa),s&&a(Jp),s&&a(Ns),s&&a(se),s&&a(xs),s&&a(ae),s&&a(Ms),s&&a(ne),s&&a(f),s&&a(te),s&&a(Gs),s&&a(pe),s&&a(Bs),s&&a(ee),s&&a(Fs),s&&a(oe),s&&a(Us),s&&a(le),s&&a(zs),s&&a(ce),s&&a(Ys),s&&a(ue),s&&a(Vs),s&&a(re),s&&a(Ks),s&&a(ie),s&&a(Qs),s&&a(ke),s&&a(Xa),s&&a(fe),s&&a(js),s&&a(de),s&&a(Za)}}}const xf={title:"PHP",short:""};class Mf extends If{constructor(I){super(),Hf(this,I,null,Cf,Pf,{})}}export{Mf as default,xf as metadata};
