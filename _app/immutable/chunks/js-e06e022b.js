import{S as G0,i as W0,s as z0,k as t,q as p,a as c,l as e,m as o,r as l,h as a,c as r,n as k,D as Lw,b as i,E as n,B as LE}from"./index-46686b93.js";function V0(Aw){let as,za,ak,lr,Bs,Va,tk,cr,Rs,gw=`<code class="language-html"><span class="token doctype"><span class="token punctuation">&lt;!</span><span class="token doctype-tag">DOCTYPE</span> <span class="token name">html</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Space Invader<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>style.css<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">
    <span class="token comment">/*
        We must wait that the web page is fully loaded before beggining
        to access and edit it's components (We wait DOMContentLoaded)
    */</span>
    document<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">"DOMContentLoaded"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

        <span class="token comment">/* 
            We can read the elements in the page with selectors.
            We store it into a variable with: let v = ...  
        */</span>
        <span class="token keyword">let</span> body <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span>

        <span class="token comment">/*
            You can use console.log(...) to display text or objects 
            in the web browser console (Ctrl + Shift + J for Chrome)
        */</span>
        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Document loaded"</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css">
    <span class="token selector">*</span> <span class="token punctuation">&#123;</span>
        <span class="token property">padding</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
        <span class="token property">margin</span><span class="token punctuation">:</span> 0px<span class="token punctuation">;</span>
    <span class="token punctuation">&#125;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span></code>`,rr,Ys,Ka,ek,ur,Qa,ok,ir,Xa,pk,kr,Js,Pw=`<code class="language-js"><span class="token comment">/* Declare with LET */</span>
<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token string">'A'</span> <span class="token comment">/* This is my default declaration for the variables */</span>
<span class="token keyword">let</span> b <span class="token comment">/* You can also declare a variable without assigning it a value */</span>
<span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token number">15</span> <span class="token comment">/* The variable type is automaticly computed... */</span>
c <span class="token operator">=</span> <span class="token string">'test'</span> <span class="token comment">/* ...but no problem for assigning it everithing, no parse needed*/</span>

<span class="token comment">/* 
    Let is a local definition, you can only access it in the current bloc.
    To create global variables, just declare them outside the main bloc. 
*/</span>
<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> 
    <span class="token keyword">let</span> d <span class="token operator">=</span> <span class="token string">'my local variable'</span> 
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token comment">/* 'my local variable' : we are inside the bloc */</span> 
<span class="token punctuation">&#125;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span> <span class="token comment">/* undefined : we are outside the bloc were d is defined */</span>

<span class="token comment">/* Declare with VAR */</span>

<span class="token comment">/* 
    Var is the same as Let but it's permit to declare variables in the Global 
    condext: it attach the var to the 'window' object instead of the bloc
*/</span>
<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> 
    <span class="token keyword">var</span> e <span class="token operator">=</span> <span class="token string">'my global variable'</span> 
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token comment">/* 'my global variable' */</span> 
<span class="token punctuation">&#125;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token comment">/* 'my global variable' */</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>e<span class="token punctuation">)</span> <span class="token comment">/* 'my global variable' */</span>

<span class="token comment">/* Declare with CONST */</span>
<span class="token keyword">const</span> <span class="token constant">NUMBER</span> <span class="token operator">=</span> <span class="token number">1</span> <span class="token comment">/* const must be defined when declarated and cannot be edited */</span></code>`,fr,Fs,Za,lk,dr,$a,ck,mr,Us,Sw=`<code class="language-js"><span class="token comment">/* Text */</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'test here'</span><span class="token punctuation">)</span> 

<span class="token comment">/* Array */</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'A'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'B'</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">'C'</span><span class="token punctuation">&#125;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span>…<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>…<span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>…<span class="token punctuation">&#125;</span><span class="token punctuation">]</span>
    <span class="token operator">></span> <span class="token number">0</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"A"</span><span class="token punctuation">&#125;</span>
    <span class="token operator">></span> <span class="token number">1</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"B"</span><span class="token punctuation">&#125;</span>
    <span class="token operator">></span> <span class="token number">2</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">"C"</span><span class="token punctuation">&#125;</span>
    <span class="token literal-property property">length</span><span class="token operator">:</span> <span class="token number">3</span>
    <span class="token operator">></span> __proto__<span class="token operator">:</span> <span class="token function">Array</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>

<span class="token comment">/* Text */</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'Insert %s here'</span><span class="token punctuation">,</span><span class="token string">'text'</span><span class="token punctuation">)</span>
<span class="token comment">/*
    You can interpolate values with flags:
    %s (string)
    %d (decimal)
    %j (json)
    %O (object with depth of 4)
    %o (object with depth of 2)
*/</span>

console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">/* For errors */</span>
console<span class="token punctuation">.</span><span class="token function">dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">/* For directories */</span>
<span class="token keyword">class</span> <span class="token class-name">Console</span> <span class="token comment">/* Create a console object */</span></code>`,hr,Gs,st,rk,vr,Ws,Cw=`<code class="language-js"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token comment">/* Condition */</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">/* Code */</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token comment">/* Condition */</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">/* Code */</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">/* Code */</span>
<span class="token punctuation">&#125;</span></code>`,Er,zs,nt,uk,_r,Vs,Iw=`<code class="language-js"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">/* 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 */</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">do</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">/* Code */</span>
<span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token comment">/* Condition */</span><span class="token punctuation">)</span>

<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token comment">/* Condition */</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token comment">/* Code */</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">let</span> items <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">]</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">in</span> items<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">/* 0, 1, 2 */</span>
    items<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token comment">/* A, B, C */</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token keyword">of</span> items<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token comment">/* A, B, C */</span>
<span class="token punctuation">&#125;</span></code>`,br,Ks,at,ik,yr,Qs,Hw=`<code class="language-js"><span class="token comment">/* Parameters with default values become optionnal */</span>
<span class="token keyword">function</span> <span class="token function">print</span><span class="token punctuation">(</span><span class="token parameter">parameter <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>parameter<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span> <span class="token comment">/* You can choose to return something or not */</span>
<span class="token punctuation">&#125;</span>

<span class="token function">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">/* 0 */</span>
<span class="token function">print</span><span class="token punctuation">(</span><span class="token string">'test'</span><span class="token punctuation">)</span> <span class="token comment">/* 'test' */</span>

<span class="token comment">/* You can also declare functions like this */</span>
<span class="token keyword">let</span> <span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token string">'test'</span> <span class="token comment">/* this function just return 'test' */</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">/* 'test' */</span>

<span class="token keyword">let</span> <span class="token function-variable function">func</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">parameterA<span class="token punctuation">,</span> parameterB <span class="token operator">...</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token comment">/* Code */</span>
<span class="token punctuation">&#125;</span></code>`,wr,Xs,tt,kk,Tr,Zs,Nw=`<code class="language-js">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>document<span class="token punctuation">)</span> <span class="token comment">/* reference all the informations on the current page */</span>

<span class="token comment">/* Get elements with querySelector */</span>
<span class="token keyword">let</span> body <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"body"</span><span class="token punctuation">)</span> <span class="token comment">/* We select the html element body */</span> 
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">"#idObject"</span><span class="token punctuation">)</span> <span class="token comment">/* We cans select object like in css, with the id... */</span>
document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">".classObject"</span><span class="token punctuation">)</span> <span class="token comment">/* ... and the class, but it only return the first */</span>
document<span class="token punctuation">.</span><span class="token function">querySelectorAll</span><span class="token punctuation">(</span><span class="token string">".classObject"</span><span class="token punctuation">)</span> <span class="token comment">/* To get all items in an array, we use querySelectorAll */</span>

<span class="token comment">/* Get elements with getElementById */</span>
document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'idObject'</span><span class="token punctuation">)</span> <span class="token comment">/* We can get the first*/</span>

<span class="token comment">/* Get elements with getElementByClassName */</span>
document<span class="token punctuation">.</span><span class="token function">getElementByClassName</span><span class="token punctuation">(</span><span class="token string">'classA classB ...'</span><span class="token punctuation">)</span> <span class="token comment">/* We get the array of all elements that have both classes */</span>
document<span class="token punctuation">.</span><span class="token function">getElementByClassName</span><span class="token punctuation">(</span><span class="token string">'class'</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token comment">/* ... to get the first element of the list */</span></code>`,jr,$s,et,fk,Dr,sn,Ow=`<code class="language-js"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* Code */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span> <span class="token comment">/* After 5000ms */</span>
<span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* Code */</span> <span class="token punctuation">&#125;</span> <span class="token number">3000</span><span class="token punctuation">)</span> <span class="token comment">/* Every 3000ms */</span>

element<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">'click'</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">event</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* Code */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* Code */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* Code */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

<span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">asynchrone</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> 
    <span class="token keyword">let</span> value <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* Code */</span> <span class="token punctuation">&#125;</span>
    <span class="token keyword">return</span> value
<span class="token punctuation">&#125;</span>

<span class="token keyword">try</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* Code */</span> <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">/* Code */</span> <span class="token punctuation">&#125;</span></code>`,xr,nn,ot,dk,qr,pt,oo,mk,Lr,an,lt,hk,Ar,tn,Mw=`<code class="language-js"><span class="token keyword">function</span> <span class="token function">Send</span><span class="token punctuation">(</span><span class="token parameter">url<span class="token punctuation">,</span> params<span class="token punctuation">,</span> callback</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">let</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">"POST"</span><span class="token punctuation">,</span> url<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    xhr<span class="token punctuation">.</span>responseType <span class="token operator">=</span> <span class="token string">"json"</span><span class="token punctuation">;</span>
    xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">"Content-type"</span><span class="token punctuation">,</span> <span class="token string">"application/x-www-form-urlencoded"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    xhr<span class="token punctuation">.</span><span class="token function-variable function">onreadystatechange</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">===</span> XMLHttpRequest<span class="token punctuation">.</span><span class="token constant">DONE</span> <span class="token operator">&amp;&amp;</span> xhr<span class="token punctuation">.</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
            <span class="token function">callback</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span>
    <span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> attr <span class="token keyword">in</span> params<span class="token punctuation">)</span> s <span class="token operator">+=</span> attr <span class="token operator">+</span> <span class="token string">"="</span> <span class="token operator">+</span> params<span class="token punctuation">[</span>attr<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"&amp;"</span><span class="token punctuation">;</span>
    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">function</span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">let</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'GET'</span><span class="token punctuation">,</span> url<span class="token punctuation">)</span><span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

            <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
            <span class="token comment">//console.log(data[0]);</span>
        <span class="token punctuation">&#125;</span>
        xhr<span class="token punctuation">.</span>onerror <span class="token operator">=</span> reject<span class="token punctuation">;</span>
        xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>		
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`,gr,en,ct,vk,Pr,rt,po,Ek,Sr,on,ut,_k,Cr,it,lo,bk,Ir,pn,yk,ln,wk,Hr,cn,Bw=`<code class="language-sh"><span class="token function">node</span> <span class="token parameter variable">--version</span>

<span class="token function">node</span>
<span class="token operator">></span> <span class="token number">2</span> + <span class="token number">2</span>
<span class="token number">4</span>
<span class="token operator">></span> .help
<span class="token operator">></span> .exit

<span class="token function">node</span> file.js</code>`,Nr,kt,Tk,Or,rn,Rw=`<code class="language-sh"><span class="token function">npm</span> <span class="token function">install</span> package
<span class="token function">npm</span> view package
<span class="token function">npm</span> search package
<span class="token function">npm</span> <span class="token builtin class-name">help</span>
<span class="token function">npm</span> version
<span class="token function">npm</span> list
<span class="token function">npm</span> update /* update all packages */
<span class="token function">npm</span> init /* Tool to initialize package.js */

<span class="token function">npm</span> <span class="token builtin class-name">test</span>
<span class="token function">npm</span> start
<span class="token function">npm</span> run serve</code>`,Mr,ft,jk,Br,un,Yw=`<code class="language-js"><span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'src'</span> <span class="token operator">+</span> path<span class="token punctuation">.</span>sep <span class="token operator">+</span> <span class="token string">'file'</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'src'</span><span class="token punctuation">,</span><span class="token string">'file'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

path<span class="token punctuation">.</span><span class="token function">basename</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token comment">/* file name */</span>
path<span class="token punctuation">.</span><span class="token function">dirname</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token comment">/* folder name */</span>
path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token comment">/* file extention */</span>
path<span class="token punctuation">.</span><span class="token function">isAbsolute</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token comment">/* false if relative */</span>
path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>pathA<span class="token punctuation">,</span> pathB<span class="token punctuation">)</span> <span class="token comment">/* return relative path to go from A to B */</span>
path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">,</span>step<span class="token punctuation">,</span>step<span class="token punctuation">,</span><span class="token operator">...</span><span class="token punctuation">)</span> <span class="token comment">/* return the absolute path after completing the steps */</span></code>`,Rr,dt,Dk,Yr,kn,Jw=`<code class="language-js"><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'fs'</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'path'</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> filename <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> 'file"<span class="token punctuation">)</span> 
<span class="token comment">/*
    __dirname: current repertory
    __filename: current file
*/</span>

fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>filename<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">String</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">readDir</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span> <span class="token comment">/* files and subfolders */</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

fs<span class="token punctuation">.</span><span class="token function">mkdir</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment">/* make folder */</span>
fs<span class="token punctuation">.</span><span class="token function">copyFile</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> path<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment">/* copy file */</span>
fs<span class="token punctuation">.</span><span class="token function">rename</span><span class="token punctuation">(</span>file<span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment">/* rename file/folder */</span>
fs<span class="token punctuation">.</span><span class="token function">rmdir</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token comment">/* remove folder if empty */</span>
fs<span class="token punctuation">.</span><span class="token function">unlink</span><span class="token punctuation">(</span>path<span class="token punctuation">,</span> <span class="token keyword">new</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment">/* remove file*/</span></code>`,Jr,mt,xk,Fr,fn,Fw=`<code class="language-js"><span class="token keyword">const</span> http <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'http'</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> server <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">createServer</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
server<span class="token punctuation">.</span><span class="token function">listen</span><span class="token punctuation">(</span><span class="token number">4000</span><span class="token punctuation">,</span> <span class="token string">'localhost'</span><span class="token punctuation">)</span>

server<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">'request'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">req<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    res<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">,</span> <span class="token string">'text/html; charset=utf-8'</span><span class="token punctuation">)</span>

    res<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">'Hello world'</span><span class="token punctuation">)</span>
    res<span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,Ur,dn,ht,qk,Gr,vt,Lk,Wr,mn,Uw=`<code class="language-sh"><span class="token function">npm</span> <span class="token function">install</span> jest --save-dev

<span class="token function">mkdir</span> src/utils/__tests__
<span class="token builtin class-name">cd</span> src/utils/__tests__
echo.<span class="token operator">></span>Element.spec.js

/* Run tests */
<span class="token function">npm</span> <span class="token builtin class-name">test</span> <span class="token parameter variable">--coverage</span> </code>`,zr,hn,Gw=`<code class="language-sh">package.json

<span class="token string">"scripts"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"test"</span><span class="token builtin class-name">:</span> <span class="token string">"jest"</span>
<span class="token punctuation">&#125;</span>,
<span class="token string">"jest"</span><span class="token builtin class-name">:</span> <span class="token punctuation">&#123;</span>
    <span class="token string">"collectCoverage"</span><span class="token builtin class-name">:</span> true,
<span class="token punctuation">&#125;</span></code>`,Vr,vn,Ww=`<code class="language-sh">src
└───test
    ├───smoke
    └───unit
        ├───coverage
        └───specs // <span class="token function">units</span> tests here</code>`,Kr,En,zw=`<code class="language-js"><span class="token keyword">import</span> Element <span class="token keyword">from</span> <span class="token string">'src/element'</span> <span class="token comment">/* With Babel*/</span>
<span class="token keyword">const</span> Element <span class="token operator">=</span> <span class="token function">required</span><span class="token punctuation">(</span><span class="token string">'src/element'</span><span class="token punctuation">)</span> <span class="token comment">/* Without Babel*/</span>

jest<span class="token punctuation">.</span><span class="token function">mock</span><span class="token punctuation">(</span><span class="token string">'library'</span><span class="token punctuation">)</span> <span class="token comment">/* if the element use an external library */</span>

<span class="token comment">/* Describle contain one or more related tests */</span>
<span class="token function">describle</span><span class="token punctuation">(</span><span class="token string">'description string'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>

    <span class="token comment">/* Before each test */</span>
    <span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        <span class="token comment">/* Environment setup */</span>
        process<span class="token punctuation">.</span>env <span class="token operator">=</span> <span class="token punctuation">&#123;</span>
            <span class="token comment">/* Environment variables setup */</span>
        <span class="token punctuation">&#125;</span>       
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

    <span class="token comment">/* After each test */</span>
    <span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        <span class="token comment">/* Clean things */</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

    <span class="token comment">/* You then describle your tests with: test or it (alias) */</span>
    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">'test description'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        <span class="token comment">/* Variables Setup */</span>
        <span class="token keyword">const</span> input <span class="token operator">=</span> <span class="token punctuation">[</span>
            <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'A'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> 
            <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'B'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span> 
            <span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'C'</span> <span class="token punctuation">&#125;</span> 
        <span class="token punctuation">]</span>
        <span class="token keyword">const</span> output <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">&#123;</span> <span class="token literal-property property">id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">name</span><span class="token operator">:</span><span class="token string">'B'</span> <span class="token punctuation">&#125;</span><span class="token punctuation">]</span>
        <span class="token keyword">const</span> spy <span class="token operator">=</span> jest<span class="token punctuation">.</span><span class="token function">spyOn</span><span class="token punctuation">(</span>object<span class="token punctuation">,</span> <span class="token string">'function'</span><span class="token punctuation">)</span>

        <span class="token comment">/* Function Test */</span>
        <span class="token comment">// [...]</span>

        <span class="token comment">/* Assertions */</span>
        <span class="token function">expect</span><span class="token punctuation">(</span><span class="token comment">/*...*/</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toEquals</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span> <span class="token comment">/* Result */</span>
        <span class="token function">expect</span><span class="token punctuation">(</span>spy<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHaveBeenCalledTimes</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">/* Spy */</span>
        <span class="token function">expect</span><span class="token punctuation">(</span><span class="token comment">/*...*/</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toMatch</span><span class="token punctuation">(</span>'Error"<span class="token punctuation">)</span> <span class="token comment">/* Errors */</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">'async test description'</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
        <span class="token comment">/* Here we test with an async function */</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`,Qr,_n,Et,Ak,Xr,_t,gk,Zr,bn,Vw=`<code class="language-js">install global cypress<span class="token operator">:</span> npm install <span class="token operator">-</span>g cypress

cypress run <span class="token operator">-</span><span class="token constant">P</span> <span class="token punctuation">.</span> <span class="token operator">--</span>config video<span class="token operator">=</span><span class="token boolean">false</span> <span class="token operator">--</span>spec <span class="token string">'**/integration/test.spec.js'</span> <span class="token operator">-</span>b chrome
cypress open <span class="token operator">-</span><span class="token constant">P</span> <span class="token punctuation">.</span></code>`,$r,yn,Kw=`<code class="language-sh">src
└───cypress
    ├───support
    <span class="token operator">|</span>   ├───index.js
    <span class="token operator">|</span>   └───commands.js
    └───tests
        ├───smoke
        └───integration
            └───test.spec.js // integration tests here</code>`,su,wn,Qw=`<code class="language-js">support<span class="token operator">/</span>index<span class="token punctuation">.</span>js

Cypress<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">"window:before:load"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">window</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>
    <span class="token keyword">const</span> original <span class="token operator">=</span> window<span class="token punctuation">.</span><span class="token class-name">EventTarget</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>addEventListener

    window<span class="token punctuation">.</span><span class="token class-name">EventTarget</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">addEventListener</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>argument <span class="token operator">&amp;&amp;</span> argument<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">"beforeunload"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token keyword">return</span> <span class="token punctuation">&#125;</span>
        <span class="token keyword">return</span> <span class="token function">original</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> arguments<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>

    Objet<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token string">"beforeunload"</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>
        <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>
        <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,nu,Tn,Xw=`<code class="language-js">support<span class="token operator">/</span>commands<span class="token punctuation">.</span>js

<span class="token comment">//&lt;button type="button" data-test="mybutton">Button&lt;/button></span>

Cypress<span class="token punctuation">.</span>Commands<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"SelectMyButton"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">return</span> cy<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">'[data-test="mybutton"]'</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

Cypress<span class="token punctuation">.</span>Commands<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"ClickMyButton"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>
    cy<span class="token punctuation">.</span><span class="token function">SelectMyButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,au,jn,Zw=`<code class="language-js">integration<span class="token operator">/</span>test<span class="token punctuation">.</span>spec<span class="token punctuation">.</span>js

<span class="token function">describle</span><span class="token punctuation">(</span><span class="token string">"Tests description"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>

    <span class="token keyword">const</span> <span class="token constant">BUTTON_CLICKED</span> <span class="token operator">=</span> <span class="token string">"clicked"</span>

    <span class="token function">beforeEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token comment">/* ... */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
    <span class="token function">afterEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span> <span class="token comment">/* ... */</span> <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

    <span class="token function">it</span><span class="token punctuation">(</span><span class="token string">"Test description"</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>
        cy<span class="token punctuation">.</span><span class="token function">ClickMyButton</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
        cy<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token constant">BUTTON_CLICKED</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>

    <span class="token comment">/* ... */</span>
<span class="token punctuation">&#125;</span><span class="token punctuation">)</span></code>`,tu,Dn,bt,Pk,eu,xn,yt,Sk,ou,qn,wt,Ck,pu,js,co,T,ro,Ik,Hk,uo,Nk,Ok,io,Mk,Bk,ko,Rk,Yk,fo,Jk,Fk,j,D,mo,Ln,Uk,Gk,ho,Wk,zk,vo,Vk,Kk,Eo,Qk,Xk,_o,An,Zk,$k,x,bo,gn,sf,nf,yo,af,tf,wo,ef,of,To,pf,lf,jo,Pn,cf,rf,q,Do,Sn,uf,kf,xo,ff,df,qo,mf,hf,Lo,vf,Ef,Ao,Cn,_f,bf,L,go,In,yf,wf,Po,Tf,jf,So,Df,xf,Co,qf,Lf,lu,Af,A,Io,Hn,gf,Pf,Ho,Sf,Cf,No,If,Hf,Oo,Nf,Of,cu,ru,Nn,Tt,Mf,uu,Ds,Mo,g,Bo,Bf,Rf,Ro,Yf,Jf,Yo,Ff,Uf,Jo,Gf,Wf,Fo,zf,Vf,B,P,Uo,On,Kf,Qf,Go,Xf,Zf,Wo,$f,sd,zo,nd,ad,Vo,Mn,td,ed,S,Ko,Bn,od,pd,Qo,ld,cd,Xo,rd,ud,Zo,id,kd,iu,fd,C,$o,Rn,dd,md,sp,hd,vd,np,Ed,_d,ap,bd,yd,ku,wd,I,tp,Yn,Td,jd,ep,Dd,xd,op,qd,Ld,pp,Ad,gd,fu,du,Jn,jt,Pd,mu,v,lp,cp,rp,Sd,Cd,up,Dt,ip,Id,Hd,kp,xt,fp,Nd,Od,dp,qt,mp,Md,Bd,hp,Lt,vp,Rd,Yd,Ep,At,_p,Jd,hu,gt,Pt,Fd,Fn,Ud,vu,St,bp,Gd,Eu,Ct,Wd,_u,E,Un,zd,Gn,Vd,Kd,Qd,yp,Xd,Zd,wp,$d,sm,Wn,nm,zn,am,tm,em,It,om,Tp,pm,lm,xs,cm,jp,rm,um,Dp,im,bu,Vn,Ht,km,yu,b,fm,xp,dm,mm,qp,hm,vm,Lp,Em,_m,Ap,bm,ym,wu,R,wm,gp,Tm,jm,Pp,Dm,xm,Nt,qm,Kn,Lm,Tu,Qn,Ot,Am,ju,qs,Sp,Xn,gm,Pm,Cp,Zn,Sm,Du,Mt,Cm,xu,Ls,Ip,Hp,Im,Hm,Np,Op,Nm,qu,$n,Bt,Om,Lu,As,Mm,Mp,Bm,Rm,Au,sa,$w='<code class="language-undefined">pkg -o dist/panorama.exe src/index.js --debug &gt; build_log.txt</code>',gu,gs,Ym,Bp,na,Jm,Fm,Pu,aa,Rp,Um,Gm,Su,ta,s0=`<code class="language-undefined">[debug] Content of /home/user/Documents/Projects/panorama/node_modules/nodemon/package.json is added to queue.
It was required from /home/user/Documents/Projects/panorama/src/index.js

[debug] Bytecode of /home/user/Documents/Projects/panorama/node_modules/nodemon/lib/nodemon.js is added to queue.
It was required from /home/user/Documents/Projects/panorama/src/index.js
...</code>`,Cu,ea,Yp,Wm,zm,Iu,oa,n0=`<code class="language-undefined">[debug] Path.resolve(&#39;.&#39;) is ambiguous
/home/user/Documents/Projects/panorama/src/system.js
It resolves relatively to &#39;process.cwd&#39; by default, however
you may want to use &#39;path.dirname(require.main.filename)&#39;</code>`,Hu,pa,Jp,Vm,Km,Nu,la,a0='<code class="language-undefined">[debug] Directory /home/user/Documents/Projects/panorama/node_modules/jsdom/lib/jsdom/living is added to queue.</code>',Ou,ca,Fp,Qm,Xm,Mu,ra,t0=`<code class="language-undefined">[debug] The file was included as bytecode (no sources)
/home/user/Documents/Projects/panorama/src/index.js

The file was included as DISCLOSED code (with sources) 
/home/user/Documents/Projects/panorama/node_modules/nodemon/package.json</code>`,Bu,ua,Zm,Rt,$m,ia,sh,Ru,ka,Up,nh,ah,Yu,fa,e0=`<code class="language-undefined">&gt; [debug] files &amp; folders deduped = 
  index.js
  inputs.js
  system.js
  parsing.js</code>`,Ju,Yt,Gp,th,Fu,da,o0=`<code class="language-undefined">[debug] Targets:
  [
  &#123;
    &quot;nodeRange&quot;: &quot;node16&quot;,
    &quot;platform&quot;: &quot;linux&quot;,
    &quot;arch&quot;: &quot;x64&quot;,
    &quot;output&quot;: &quot;/home/user/Documents/Projects/panorama/dist/panorama.exe&quot;,
    &quot;forceBuild&quot;: false,
    &quot;fabricator&quot;: &#123;
      &quot;nodeRange&quot;: &quot;node16&quot;,
      &quot;platform&quot;: &quot;linux&quot;,
      &quot;arch&quot;: &quot;x64&quot;,
      &quot;binaryPath&quot;: &quot;/home/user/.pkg-cache/v3.4/fetched-v16.16.0-linux-x64&quot;
    &#125;,
    &quot;binaryPath&quot;: &quot;/home/user/.pkg-cache/v3.4/fetched-v16.16.0-linux-x64&quot;
  &#125;
]</code>`,Uu,Jt,Wp,eh,Gu,Ft,zp,oh,Wu,Ps,ph,Vp,ma,lh,ch,zu,ha,p0=`<code class="language-undefined">------------------------------- virtual file system
/snapshot
  panorama                                 8993610 
    src                                      10864 
      index.js                                1607 
      inputs.js                               1992 
      system.js                               2778 
      parsing.js                              4487 
    node_modules                           8993610 
      nodemon                               125479 
        package.json                          2189 
        lib                                  85174 
          nodemon.js                          8777 
          version.js                          2465 
          spawn.js                            1893 
          monitor                            43382 
            index.js                            82 
            run.js                           16493 </code>`,Vu,Ut,Kp,rh,Ku,va,l0=`<code class="language-undefined">...
--public             speed up and disclose the sources of top-level project
--no-bytecode        skip bytecode generation and include source files as plain js
...</code>`,Qu,ts,uh,Qp,ih,kh,Gt,fh,Ea,dh,Xu,_a,Wt,mh,Zu,zt,Xp,hh,$u,ba,c0=`<code class="language-undefined">function main() &#123;
    console.log(&quot;Hello world&quot;)
&#125;

main()</code>`,si,Vt,Zp,vh,ni,ya,r0=`<code class="language-undefined">&#123;
  &quot;name&quot;: &quot;decompiled&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;description&quot;: &quot;&quot;,
  &quot;main&quot;: &quot;index.js&quot;,
  &quot;scripts&quot;: &#123;
    &quot;test&quot;: &quot;node index.js&quot;,
    &quot;build&quot;: &quot;pkg --public --no-bytecode index.js --debug -o dist/decompiled&quot;
  &#125;,
  &quot;author&quot;: &quot;&quot;,
  &quot;license&quot;: &quot;ISC&quot;,
  &quot;dependencies&quot;: &#123;
    &quot;pkg&quot;: &quot;^5.8.0&quot;
  &#125;
&#125;</code>`,ai,Y,Ss,Eh,$p,_h,bh,sl,yh,wh,nl,Th,jh,Kt,Dh,wa,xh,ti,Qt,qh,ei,Xt,Zt,AE,oi,Ta,$t,Lh,pi,se,ne,gE,li,ae,Ah,ci,Cs,al,ja,gh,Ph,tl,Da,Sh,ri,Is,el,_,ol,Ch,Ih,pl,Hh,Nh,ll,Oh,Mh,cl,Bh,Rh,rl,Yh,Jh,ul,Fh,Uh,ui,ii,xa,te,Gh,ki,m,il,kl,fl,Wh,zh,dl,ee,ml,Vh,Kh,hl,oe,vl,Qh,Xh,El,pe,_l,Zh,$h,bl,le,yl,sv,nv,wl,ce,Tl,av,tv,jl,re,Dl,ev,fi,ue,ov,di,ie,qa,pv,mi,ke,xl,lv,hi,fe,cv,vi,Hs,ql,rv,uv,Ll,iv,Ei,de,kv,_i,h,Al,fv,dv,gl,mv,hv,Pl,vv,Ev,Sl,_v,bv,Cl,yv,wv,Il,Tv,jv,Hl,Dv,bi,La,me,xv,yi,he,Aa,qv,wi,H,Nl,Ol,Lv,Av,Ml,Bl,gv,Pv,Rl,Yl,Sv,Cv,Jl,Fl,Iv,Ti,ga,ve,Hv,ji,Ee,Pa,Nv,Di,Sa,_e,Ov,xi,be,Ca,Mv,qi,ye,Ia,Bv,Li,we,Ha,Rv,Ai,J,Ul,Gl,Wl,Yv,Jv,zl,Te,Vl,Fv,Uv,Kl,je,Ql,Gv,gi,Na,De,Wv,Pi,Oa,xe,zv,Si,qe,Vv,Ci,Ma,Le,Kv,Ii,Ae,Ba,Qv,Hi,Ns,Xl,es,Zl,Xv,Zv,$l,$v,s1,sc,n1,a1,f,os,nc,t1,e1,ac,o1,p1,tc,l1,c1,ps,ec,r1,u1,oc,i1,k1,pc,f1,d1,ls,lc,m1,h1,cc,v1,E1,rc,_1,b1,cs,uc,y1,w1,ic,T1,j1,kc,D1,x1,rs,fc,q1,L1,dc,A1,g1,mc,P1,S1,us,hc,C1,I1,vc,H1,N1,Ec,O1,M1,is,_c,B1,R1,bc,Y1,J1,yc,F1,U1,ks,wc,G1,W1,Tc,z1,V1,jc,K1,Q1,fs,Dc,X1,Z1,xc,$1,s2,qc,n2,a2,ds,Lc,t2,e2,Ac,o2,p2,gc,l2,c2,ms,Pc,r2,u2,Sc,i2,k2,Cc,f2,d2,hs,Ic,m2,h2,Hc,v2,E2,Nc,_2,b2,vs,Oc,y2,w2,Mc,T2,j2,Bc,D2,x2,Es,Rc,q2,L2,Yc,A2,g2,Jc,P2,S2,_s,Fc,C2,I2,Uc,H2,N2,Gc,O2,M2,bs,Wc,B2,R2,zc,Y2,J2,Vc,F2,U2,ys,Kc,G2,W2,Qc,z2,V2,Xc,K2,Q2,ws,Zc,X2,Z2,$c,$2,sE,sr,nE,aE,Ts,nr,tE,eE,ar,oE,pE,tr,lE,Ni,Ra,ge,cE,Oi,Pe,Ya,rE,Mi,Ja,Se,uE,Bi,Ce,iE,Ri,Ie,Fa,kE,Yi,He,Ua,fE,Ji,Ne,Ga,dE;return{c(){as=t("h2"),za=t("a"),ak=p("Programming in JS"),lr=c(),Bs=t("h3"),Va=t("a"),tk=p("First Program : webpage"),cr=c(),Rs=t("pre"),rr=c(),Ys=t("h3"),Ka=t("a"),ek=p("Variables"),ur=c(),Qa=t("p"),ok=p(`JavaScript is Dynamically typed. There is ‘types’ but they are computed on the go, you cannot statically declare the type of a
variable. That’s one of the reasons why JS is not a fast language.`),ir=c(),Xa=t("p"),pk=p("TypeScript has been created to fix this by enabling the declaration of the type, but it’s ony a pre-check, because in the end it’s also compiled in JS."),kr=c(),Js=t("pre"),fr=c(),Fs=t("h3"),Za=t("a"),lk=p("Console Log"),dr=c(),$a=t("p"),ck=p("Console log display the items passed by parameters"),mr=c(),Us=t("pre"),hr=c(),Gs=t("h3"),st=t("a"),rk=p("Tests"),vr=c(),Ws=t("pre"),Er=c(),zs=t("h3"),nt=t("a"),uk=p("Loops"),_r=c(),Vs=t("pre"),br=c(),Ks=t("h3"),at=t("a"),ik=p("Functions"),yr=c(),Qs=t("pre"),wr=c(),Xs=t("h3"),tt=t("a"),kk=p("Selectors"),Tr=c(),Zs=t("pre"),jr=c(),$s=t("h3"),et=t("a"),fk=p("Events"),Dr=c(),sn=t("pre"),xr=c(),nn=t("h2"),ot=t("a"),dk=p("Typescript"),qr=c(),pt=t("blockquote"),oo=t("p"),mk=p("TODO"),Lr=c(),an=t("h2"),lt=t("a"),hk=p("Ajax"),Ar=c(),tn=t("pre"),gr=c(),en=t("h2"),ct=t("a"),vk=p("p5"),Pr=c(),rt=t("blockquote"),po=t("p"),Ek=p("TODO"),Sr=c(),on=t("h2"),ut=t("a"),_k=p("NodeJs"),Cr=c(),it=t("blockquote"),lo=t("p"),bk=p(`“NodeJs is an open source cross-plateform back-end JavaScript
Environment that execute javaScript outside a web browser. It was build
in 2009 in JavaScript and in C/C++ where JavaScript was performing too
slow. Node use V8 to compile JS source code to native machine code at
runtime.`),Ir=c(),pn=t("p"),yk=p("Download Node: "),ln=t("a"),wk=p("https://nodejs.org/en/download/"),Hr=c(),cn=t("pre"),Nr=c(),kt=t("p"),Tk=p("Node Package Manager (npm)"),Or=c(),rn=t("pre"),Mr=c(),ft=t("p"),jk=p("Node Path System (path)"),Br=c(),un=t("pre"),Rr=c(),dt=t("p"),Dk=p("Node File System (fs)"),Yr=c(),kn=t("pre"),Jr=c(),mt=t("p"),xk=p("Server HTTP (http)"),Fr=c(),fn=t("pre"),Ur=c(),dn=t("h2"),ht=t("a"),qk=p("Jest"),Gr=c(),vt=t("p"),Lk=p("Unit Testing"),Wr=c(),mn=t("pre"),zr=c(),hn=t("pre"),Vr=c(),vn=t("pre"),Kr=c(),En=t("pre"),Qr=c(),_n=t("h3"),Et=t("a"),Ak=p("Cypress"),Xr=c(),_t=t("p"),gk=p("Integration Testing"),Zr=c(),bn=t("pre"),$r=c(),yn=t("pre"),su=c(),wn=t("pre"),nu=c(),Tn=t("pre"),au=c(),jn=t("pre"),tu=c(),Dn=t("h1"),bt=t("a"),Pk=p("JS-BUNDLING"),eu=c(),xn=t("h2"),yt=t("a"),Sk=p("Comparison"),ou=c(),qn=t("h3"),wt=t("a"),Ck=p("For CLI tools"),pu=c(),js=t("table"),co=t("thead"),T=t("tr"),ro=t("th"),Ik=p("Name"),Hk=c(),uo=t("th"),Nk=p("Note"),Ok=c(),io=t("th"),Mk=p("Free license"),Bk=c(),ko=t("th"),Rk=p("Mainained"),Yk=c(),fo=t("th"),Jk=p("Binaries"),Fk=c(),j=t("tbody"),D=t("tr"),mo=t("td"),Ln=t("a"),Uk=p("pkg"),Gk=c(),ho=t("td"),Wk=p("Node bundler"),zk=c(),vo=t("td"),Vk=p("✅ MIT"),Kk=c(),Eo=t("td"),Qk=p("✅ Active"),Xk=c(),_o=t("td"),An=t("a"),Zk=p("v18 x64-86"),$k=c(),x=t("tr"),bo=t("td"),gn=t("a"),sf=p("nexe"),nf=c(),yo=t("td"),af=p("Node bundler"),tf=c(),wo=t("td"),ef=p("✅ MIT"),of=c(),To=t("td"),pf=p("✅ Active"),lf=c(),jo=t("td"),Pn=t("a"),cf=p("v16 x64-86"),rf=c(),q=t("tr"),Do=t("td"),Sn=t("a"),uf=p("enclose"),kf=c(),xo=t("td"),ff=p("Node bundler"),df=c(),qo=t("td"),mf=p("❌ EULA"),hf=c(),Lo=t("td"),vf=p("❌   Deprecated"),Ef=c(),Ao=t("td"),Cn=t("a"),_f=p("v6 x64"),bf=c(),L=t("tr"),go=t("td"),In=t("a"),yf=p("node-packer"),wf=c(),Po=t("td"),Tf=p("Node bundler"),jf=c(),So=t("td"),Df=p("✅ MIT"),xf=c(),Co=t("td"),qf=p("❌  No (2y)"),Lf=c(),lu=t("td"),Af=c(),A=t("tr"),Io=t("td"),Hn=t("a"),gf=p("deno-build"),Pf=c(),Ho=t("td"),Sf=p("Deno compiler"),Cf=c(),No=t("td"),If=p("✅ MIT"),Hf=c(),Oo=t("td"),Nf=p("✅ Active"),Of=c(),cu=t("td"),ru=c(),Nn=t("h3"),Tt=t("a"),Mf=p("For GUI tools"),uu=c(),Ds=t("table"),Mo=t("thead"),g=t("tr"),Bo=t("th"),Bf=p("Name"),Rf=c(),Ro=t("th"),Yf=p("Note"),Jf=c(),Yo=t("th"),Ff=p("Free license"),Uf=c(),Jo=t("th"),Gf=p("Mainained"),Wf=c(),Fo=t("th"),zf=p("Binaries"),Vf=c(),B=t("tbody"),P=t("tr"),Uo=t("td"),On=t("a"),Kf=p("nwjs"),Qf=c(),Go=t("td"),Xf=p("Chromium bundler"),Zf=c(),Wo=t("td"),$f=p("✅ MIT"),sd=c(),zo=t("td"),nd=p("✅ Active"),ad=c(),Vo=t("td"),Mn=t("a"),td=p("v18 x64-86"),ed=c(),S=t("tr"),Ko=t("td"),Bn=t("a"),od=p("electron"),pd=c(),Qo=t("td"),ld=p("Chromuim bundler"),cd=c(),Xo=t("td"),rd=p("✅ MIT"),ud=c(),Zo=t("td"),id=p("✅ Active"),kd=c(),iu=t("td"),fd=c(),C=t("tr"),$o=t("td"),Rn=t("a"),dd=p("tauri"),md=c(),sp=t("td"),hd=p("Rust bundler"),vd=c(),np=t("td"),Ed=p("✅ MIT"),_d=c(),ap=t("td"),bd=p("✅  Active"),yd=c(),ku=t("td"),wd=c(),I=t("tr"),tp=t("td"),Yn=t("a"),Td=p("app-image"),jd=c(),ep=t("td"),Dd=p("Packager"),xd=c(),op=t("td"),qd=p("✅ MIT"),Ld=c(),pp=t("td"),Ad=p("✅  Active"),gd=c(),fu=t("td"),du=c(),Jn=t("h2"),jt=t("a"),Pd=p("Pkg"),mu=c(),v=t("ul"),lp=t("li"),cp=t("ol"),rp=t("li"),Sd=p("Bundles the application with a custom v8 script compiler into a snapshot"),Cd=c(),up=t("li"),Dt=t("ol"),ip=t("li"),Id=p("Downloads the node source (or a prebuilt binary)"),Hd=c(),kp=t("li"),xt=t("ol"),fp=t("li"),Nd=p("Applies arbitrary source patches"),Od=c(),dp=t("li"),qt=t("ol"),mp=t("li"),Md=p("Maybe compiles downloaded source"),Bd=c(),hp=t("li"),Lt=t("ol"),vp=t("li"),Rd=p("Appends snapshotted output to the end of the binary"),Yd=c(),Ep=t("li"),At=t("ol"),_p=t("li"),Jd=p("Snapshot (cachedData from v8) is loaded/run when binary executes."),hu=c(),gt=t("p"),Pt=t("em"),Fd=p("from "),Fn=t("a"),Ud=p("https://github.com/vercel/pkg/issues/42"),vu=c(),St=t("blockquote"),bp=t("p"),Gd=p("“Pkg hacked fs.* API’s dynamically in order to access in-package files, whereas Node.js Compiler leaves them alone and instead works on a deeper level via libsquash. Pkg uses JSON to store in-package files while Node.js Compiler uses the more sophisticated and widely used SquashFS as its data structure.”"),Eu=c(),Ct=t("p"),Wd=p("pkg:"),_u=c(),E=t("ul"),Un=t("li"),zd=p("a lot of configuration possible (see "),Gn=t("a"),Vd=p("usage settings"),Kd=p(")"),Qd=c(),yp=t("li"),Xd=p("best support for distributed node binaries"),Zd=c(),wp=t("li"),$d=p("support multiple builds at a time"),sm=c(),Wn=t("li"),nm=p("configuration in json or by command line (see "),zn=t("a"),am=p("config"),tm=p(")"),em=c(),It=t("li"),om=p("option to build the node binaries ourself with "),Tp=t("code"),pm=p("--build"),lm=c(),xs=t("li"),cm=p("don’t work well with ES6 modules (use "),jp=t("code"),rm=p("require"),um=p(") => or see "),Dp=t("code"),im=p("nexe"),bu=c(),Vn=t("h3"),Ht=t("a"),km=p("File System"),yu=c(),b=t("p"),fm=p("“Hence, in order to make use of a file collected at packaging time (require a javascript file or serve an asset) you should take "),xp=t("code"),dm=p("__filename"),mm=p(", "),qp=t("code"),hm=p("__dirname"),vm=p(", "),Lp=t("code"),Em=p("process.pkg.defaultEntrypoint"),_m=p(" or "),Ap=t("code"),bm=p("require.main.filename"),ym=p(" as a base for your path calculations."),wu=c(),R=t("p"),wm=p("For javascript files you can just require or require.resolve because they use current "),gp=t("code"),Tm=p("__dirname"),jm=p(" by default. For assets use "),Pp=t("code"),Dm=p("path.join(__dirname, ``'../path/to/asset')"),xm=p(`”
`),Nt=t("em"),qm=p("from "),Kn=t("a"),Lm=p("https://github.com/vercel/pkg#snapshot-filesystem"),Tu=c(),Qn=t("h3"),Ot=t("a"),Am=p("Node binaries fetcher"),ju=c(),qs=t("ul"),Sp=t("li"),Xn=t("a"),gm=p("Node binaries fetcher (and distrib)"),Pm=c(),Cp=t("li"),Zn=t("a"),Sm=p("Targets and build documentation"),Du=c(),Mt=t("p"),Cm=p("Supported:"),xu=c(),Ls=t("ul"),Ip=t("li"),Hp=t("code"),Im=p("alpine, linux, macox, windows (x32/64)"),Hm=c(),Np=t("li"),Op=t("code"),Nm=p("node <= v18"),qu=c(),$n=t("h3"),Bt=t("a"),Om=p("Details"),Lu=c(),As=t("p"),Mm=p("Building in "),Mp=t("code"),Bm=p("DEBUG"),Rm=p(" mode:"),Au=c(),sa=t("pre"),gu=c(),gs=t("p"),Ym=p("["),Bp=t("strong"),na=t("a"),Jm=p("cernbox build_log.txt"),Fm=p("]"),Pu=c(),aa=t("p"),Rp=t("strong"),Um=p("1.1."),Gm=p(" Navigate dependandancies from the scipt input and add them to the queue"),Su=c(),ta=t("pre"),Cu=c(),ea=t("p"),Yp=t("strong"),Wm=p("1.2."),zm=p("  Resolve ambiguous paths"),Iu=c(),oa=t("pre"),Hu=c(),pa=t("p"),Jp=t("strong"),Vm=p("1.3."),Km=p("  Directories and stats added to the VFS"),Nu=c(),la=t("pre"),Ou=c(),ca=t("p"),Fp=t("strong"),Qm=p("1.4."),Xm=p(" Convert to bytecode and add"),Mu=c(),ra=t("pre"),Bu=c(),ua=t("p"),Zm=p(`“By default, your source code is precompiled to v8 bytecode before being written to the output file”
`),Rt=t("em"),$m=p("from "),ia=t("a"),sh=p("https://github.com/vercel/pkg#bytecode-reproducibility"),Ru=c(),ka=t("p"),Up=t("strong"),nh=p("1.5"),ah=p(" Merge required sources"),Yu=c(),fa=t("pre"),Ju=c(),Yt=t("p"),Gp=t("strong"),th=p("With config"),Fu=c(),da=t("pre"),Uu=c(),Jt=t("p"),Wp=t("strong"),eh=p("Running the binary"),Gu=c(),Ft=t("p"),zp=t("code"),oh=p("DEBUG_PKG=1 ./panorama"),Wu=c(),Ps=t("p"),ph=p("["),Vp=t("strong"),ma=t("a"),lh=p("cernbox run_log.txt"),ch=p("]"),zu=c(),ha=t("pre"),Vu=c(),Ut=t("p"),Kp=t("strong"),rh=p("Building without including sources as bytecode"),Ku=c(),va=t("pre"),Qu=c(),ts=t("p"),uh=p("“Specifying "),Qp=t("code"),ih=p("--no-bytecode"),kh=p(` will fail if there are any packages in your project that aren’t explicitly marked as public by the license in their package.json.”
`),Gt=t("em"),fh=p("from "),Ea=t("a"),dh=p("https://github.com/vercel/pkg#other-considerations"),Xu=c(),_a=t("h4"),Wt=t("a"),mh=p("New simple js project specified as OS (no dependancies)"),Zu=c(),zt=t("p"),Xp=t("em"),hh=p("index.js"),$u=c(),ba=t("pre"),si=c(),Vt=t("p"),Zp=t("em"),vh=p("package.json"),ni=c(),ya=t("pre"),ai=c(),Y=t("p"),Ss=t("strong"),Eh=p("/!\\ MUST ADD BOTH "),$p=t("code"),_h=p("--no-bytecode"),bh=p(" AND "),sl=t("code"),yh=p("--public"),wh=p(`
otherwise `),nl=t("code"),Th=p("Error! --no-bytecode and no source breaks final executable"),jh=c(),Kt=t("em"),Dh=p("see "),wa=t("a"),xh=p("https://github.com/vercel/pkg/issues/1139"),ti=c(),Qt=t("p"),qh=p("… still not working"),ei=c(),Xt=t("p"),Zt=t("img"),oi=c(),Ta=t("h4"),$t=t("a"),Lh=p("Some readable parts"),pi=c(),se=t("p"),ne=t("img"),li=c(),ae=t("p"),Ah=p("from decompiled linux binaries"),ci=c(),Cs=t("ul"),al=t("li"),ja=t("a"),gh=p("headers.js"),Ph=c(),tl=t("li"),Da=t("a"),Sh=p("modules.json"),ri=c(),Is=t("table"),el=t("thead"),_=t("tr"),ol=t("th"),Ch=p("?"),Ih=c(),pl=t("th"),Hh=p("node binaries"),Nh=c(),ll=t("th"),Oh=p("?"),Mh=c(),cl=t("th"),Bh=p("?"),Rh=c(),rl=t("th"),Yh=p("code ?"),Jh=c(),ul=t("th"),Fh=p("modules"),Uh=c(),ui=t("tbody"),ii=c(),xa=t("h2"),te=t("a"),Gh=p("Nexe"),ki=c(),m=t("ul"),il=t("li"),kl=t("ol"),fl=t("li"),Wh=p("Bundles the application if desired using webpack."),zh=c(),dl=t("li"),ee=t("ol"),ml=t("li"),Vh=p("Downloads node source (or a prebuilt binary)"),Kh=c(),hl=t("li"),oe=t("ol"),vl=t("li"),Qh=p("Adds your application bundle as a native module (like fs, http, path etc)"),Xh=c(),El=t("li"),pe=t("ol"),_l=t("li"),Zh=p("Applies arbitrary source patches."),$h=c(),bl=t("li"),le=t("ol"),yl=t("li"),sv=p("Maybe compiles downloaded source"),nv=c(),wl=t("li"),ce=t("ol"),Tl=t("li"),av=p("Inserts bundle into pre-sized binary"),tv=c(),jl=t("li"),re=t("ol"),Dl=t("li"),ev=p("Code is run as main when executable is run (instead of the repl)"),fi=c(),ue=t("p"),ov=p("Nexe does not support dynamic require because of its use of browserify, whereas Node.js Compiler supports all kinds of require including require.resolve."),di=c(),ie=t("p"),qa=t("a"),pv=p("https://github.com/nexe/nexe/issues/529"),mi=c(),ke=t("blockquote"),xl=t("p"),lv=p("Nexe is a tool for compiling node. You can apply arbitrary patches and build plugins for repeatable patterns to that end. ie. You could make a plugin and or patch for nexe that bypasses the nexe application bundler and uses the same approach as pkg."),hi=c(),fe=t("p"),cv=p("Application Bundling (just different approaches):"),vi=c(),Hs=t("ul"),ql=t("li"),rv=p("nexe uses a virtual filesystem (similar to tools like asar for electron) and module analysis to include your applications files and dependencies"),uv=c(),Ll=t("li"),iv=p("pkg uses module analysis, and whitelists to create a V8 snapshot and load (“compile”) your application scripts."),Ei=c(),de=t("p"),kv=p("Why use nexe ?"),_i=c(),h=t("ul"),Al=t("li"),fv=p("You need to have additional customizations to node (eg more builtin or native modules, C++ patches)."),dv=c(),gl=t("li"),mv=p("You want to codesign the executable. By bypassing the built in bundler (with a patch) you can create an application executable that can be signed/verified."),hv=c(),Pl=t("li"),vv=p("You want to add an icon (there are lots of ways to accomplish this, but code is usually the best way)"),Ev=c(),Sl=t("li"),_v=p("You want to extend it (plugin or patch) to provide a repeatable system for creating a specific type of application. Eg. a windows service or linux daemon."),bv=c(),Cl=t("li"),yv=p("Its hosted builds are created with 100% OSS."),wv=c(),Il=t("li"),Tv=p("It allows the JS engine to recompile in the future if it made bad predictions for hot code paths. (since it uses unchanged source, vs a snapshot. (This point is less relevant with the newer interpreter features)"),jv=c(),Hl=t("li"),Dv=p("It provides pre-built versions for any node version."),bi=c(),La=t("h2"),me=t("a"),xv=p("Enclose"),yi=c(),he=t("p"),Aa=t("a"),qv=p("http://enclosejs.com/"),wi=c(),H=t("ul"),Nl=t("li"),Ol=t("p"),Lv=p("JavaScript code is transformed into native code at compile-time using V8 internal compiler. Hence, your sources are not required to execute the binary, and they are not packaged."),Av=c(),Ml=t("li"),Bl=t("p"),gv=p("Optimized native code can be generated only at run-time, using information collected at run-time. Without that information EncloseJS can generate only “unoptimized” code. It runs about 2x slower, than optimized one."),Pv=c(),Rl=t("li"),Yl=t("p"),Sv=p("Also, Node.js code is put inside the executable (along with your code) to support Node.js API for your application at run-time. This increases output file size."),Cv=c(),Jl=t("li"),Fl=t("p"),Iv=p("So, this is not that static compilation we used to know. But nevertheless you get fully functional binary without sources. Also, performance and file size overhead are vectors of future work."),Ti=c(),ga=t("h2"),ve=t("a"),Hv=p("Node-packer"),ji=c(),Ee=t("p"),Pa=t("a"),Nv=p("https://speakerdeck.com/pmq20/node-dot-js-compiler-compiling-your-node-dot-js-application-into-a-single-executable?slide=5"),Di=c(),Sa=t("h2"),_e=t("a"),Ov=p("Nwjs"),xi=c(),be=t("p"),Ca=t("a"),Mv=p("https://github.com/nwjs/nw.js/wiki/How-to-package-and-distribute-your-apps"),qi=c(),ye=t("p"),Ia=t("a"),Bv=p("https://www.sitepoint.com/cross-platform-desktop-app-nw-js/"),Li=c(),we=t("p"),Ha=t("a"),Rv=p("https://stackoverflow.com/questions/8173232/how-to-make-exe-files-from-a-node-js-app"),Ai=c(),J=t("ul"),Ul=t("li"),Gl=t("ol"),Wl=t("li"),Yv=p("Zip up all your files, with a package.json in the root"),Jv=c(),zl=t("li"),Te=t("ol"),Vl=t("li"),Fv=p("Change the extension from .zip to .nw"),Uv=c(),Kl=t("li"),je=t("ol"),Ql=t("li"),Gv=p("copy /b nw.exe+app.nw app.exe"),gi=c(),Na=t("h2"),De=t("a"),Wv=p("Electron"),Pi=c(),Oa=t("h3"),xe=t("a"),zv=p("Asar"),Si=c(),qe=t("p"),Vv=p("Asar uses JSON to store files information while Node.js Compiler uses SquashFS. Asar keeps the code archive and the executable separate while Node.js Compiler links all JavaScript source code together with the Node.js virtual machine and generates a single executable as the final product."),Ci=c(),Ma=t("h2"),Le=t("a"),Kv=p("Tauri"),Ii=c(),Ae=t("p"),Ba=t("a"),Qv=p("https://github.com/tauri-apps/tauri"),Hi=c(),Ns=t("table"),Xl=t("thead"),es=t("tr"),Zl=t("th"),Xv=p("Detail"),Zv=c(),$l=t("th"),$v=p("Tauri"),s1=c(),sc=t("th"),n1=p("Electron"),a1=c(),f=t("tbody"),os=t("tr"),nc=t("td"),t1=p("Installer Size Linux"),e1=c(),ac=t("td"),o1=p("3.1 MB"),p1=c(),tc=t("td"),l1=p("52.1 MB"),c1=c(),ps=t("tr"),ec=t("td"),r1=p("Memory Consumption Linux"),u1=c(),oc=t("td"),i1=p("180 MB"),k1=c(),pc=t("td"),f1=p("462 MB"),d1=c(),ls=t("tr"),lc=t("td"),m1=p("Launch Time Linux"),h1=c(),cc=t("td"),v1=p("0.39s"),E1=c(),rc=t("td"),_1=p("0.80s"),b1=c(),cs=t("tr"),uc=t("td"),y1=p("Interface Service Provider"),w1=c(),ic=t("td"),T1=p("WRY"),j1=c(),kc=t("td"),D1=p("Chromium"),x1=c(),rs=t("tr"),fc=t("td"),q1=p("Backend Binding"),L1=c(),dc=t("td"),A1=p("Rust"),g1=c(),mc=t("td"),P1=p("Node.js (ECMAScript)"),S1=c(),us=t("tr"),hc=t("td"),C1=p("Underlying Engine"),I1=c(),vc=t("td"),H1=p("Rust"),N1=c(),Ec=t("td"),O1=p("V8 (C/C++)"),M1=c(),is=t("tr"),_c=t("td"),B1=p("FLOSS"),R1=c(),bc=t("td"),Y1=p("Yes"),J1=c(),yc=t("td"),F1=p("No"),U1=c(),ks=t("tr"),wc=t("td"),G1=p("Multithreading"),W1=c(),Tc=t("td"),z1=p("Yes"),V1=c(),jc=t("td"),K1=p("Yes"),Q1=c(),fs=t("tr"),Dc=t("td"),X1=p("Bytecode Delivery"),Z1=c(),xc=t("td"),$1=p("Yes"),s2=c(),qc=t("td"),n2=p("No"),a2=c(),ds=t("tr"),Lc=t("td"),t2=p("Multiple Windows"),e2=c(),Ac=t("td"),o2=p("Yes"),p2=c(),gc=t("td"),l2=p("Yes"),c2=c(),ms=t("tr"),Pc=t("td"),r2=p("Auto Updater"),u2=c(),Sc=t("td"),i2=p("Yes"),k2=c(),Cc=t("td"),f2=p("Yes1"),d2=c(),hs=t("tr"),Ic=t("td"),m2=p("Custom App Icon"),h2=c(),Hc=t("td"),v2=p("Yes"),E2=c(),Nc=t("td"),_2=p("Yes"),b2=c(),vs=t("tr"),Oc=t("td"),y2=p("Windows Binary"),w2=c(),Mc=t("td"),T2=p("Yes"),j2=c(),Bc=t("td"),D2=p("Yes"),x2=c(),Es=t("tr"),Rc=t("td"),q2=p("macOS Binary"),L2=c(),Yc=t("td"),A2=p("Yes"),g2=c(),Jc=t("td"),P2=p("Yes"),S2=c(),_s=t("tr"),Fc=t("td"),C2=p("Linux Binary"),I2=c(),Uc=t("td"),H2=p("Yes"),N2=c(),Gc=t("td"),O2=p("Yes"),M2=c(),bs=t("tr"),Wc=t("td"),B2=p("iOS Binary"),R2=c(),zc=t("td"),Y2=p("Soon"),J2=c(),Vc=t("td"),F2=p("No"),U2=c(),ys=t("tr"),Kc=t("td"),G2=p("Android Binary"),W2=c(),Qc=t("td"),z2=p("Soon"),V2=c(),Xc=t("td"),K2=p("No"),Q2=c(),ws=t("tr"),Zc=t("td"),X2=p("Desktop Tray"),Z2=c(),$c=t("td"),$2=p("Yes"),sE=c(),sr=t("td"),nE=p("Yes"),aE=c(),Ts=t("tr"),nr=t("td"),tE=p("Sidecar Binaries"),eE=c(),ar=t("td"),oE=p("Yes"),pE=c(),tr=t("td"),lE=p("No"),Ni=c(),Ra=t("h2"),ge=t("a"),cE=p("Deno-build"),Oi=c(),Pe=t("p"),Ya=t("a"),rE=p("https://deno.land/manual/tools/compiler"),Mi=c(),Ja=t("h2"),Se=t("a"),uE=p("AppImage"),Bi=c(),Ce=t("p"),iE=p("AppImage supports only Linux with a kernel that supports SquashFS, while Node.js Compiler supports all three platforms of Linux, macOS and Windows, meanwhile without any special feature requirements from the kernel."),Ri=c(),Ie=t("p"),Fa=t("a"),kE=p("https://appimage.org/"),Yi=c(),He=t("p"),Ua=t("a"),fE=p("https://docs.appimage.org/introduction/motivation.html"),Ji=c(),Ne=t("p"),Ga=t("a"),dE=p("https://docs.appimage.org/introduction/software-overview.html#ref-appimagekit"),this.h()},l(s){as=e(s,"H2",{id:!0});var u=o(as);za=e(u,"A",{href:!0});var PE=o(za);ak=l(PE,"Programming in JS"),PE.forEach(a),u.forEach(a),lr=r(s),Bs=e(s,"H3",{id:!0});var SE=o(Bs);Va=e(SE,"A",{href:!0});var CE=o(Va);tk=l(CE,"First Program : webpage"),CE.forEach(a),SE.forEach(a),cr=r(s),Rs=e(s,"PRE",{class:!0});var u0=o(Rs);u0.forEach(a),rr=r(s),Ys=e(s,"H3",{id:!0});var IE=o(Ys);Ka=e(IE,"A",{href:!0});var HE=o(Ka);ek=l(HE,"Variables"),HE.forEach(a),IE.forEach(a),ur=r(s),Qa=e(s,"P",{});var NE=o(Qa);ok=l(NE,`JavaScript is Dynamically typed. There is ‘types’ but they are computed on the go, you cannot statically declare the type of a
variable. That’s one of the reasons why JS is not a fast language.`),NE.forEach(a),ir=r(s),Xa=e(s,"P",{});var OE=o(Xa);pk=l(OE,"TypeScript has been created to fix this by enabling the declaration of the type, but it’s ony a pre-check, because in the end it’s also compiled in JS."),OE.forEach(a),kr=r(s),Js=e(s,"PRE",{class:!0});var i0=o(Js);i0.forEach(a),fr=r(s),Fs=e(s,"H3",{id:!0});var ME=o(Fs);Za=e(ME,"A",{href:!0});var BE=o(Za);lk=l(BE,"Console Log"),BE.forEach(a),ME.forEach(a),dr=r(s),$a=e(s,"P",{});var RE=o($a);ck=l(RE,"Console log display the items passed by parameters"),RE.forEach(a),mr=r(s),Us=e(s,"PRE",{class:!0});var k0=o(Us);k0.forEach(a),hr=r(s),Gs=e(s,"H3",{id:!0});var YE=o(Gs);st=e(YE,"A",{href:!0});var JE=o(st);rk=l(JE,"Tests"),JE.forEach(a),YE.forEach(a),vr=r(s),Ws=e(s,"PRE",{class:!0});var f0=o(Ws);f0.forEach(a),Er=r(s),zs=e(s,"H3",{id:!0});var FE=o(zs);nt=e(FE,"A",{href:!0});var UE=o(nt);uk=l(UE,"Loops"),UE.forEach(a),FE.forEach(a),_r=r(s),Vs=e(s,"PRE",{class:!0});var d0=o(Vs);d0.forEach(a),br=r(s),Ks=e(s,"H3",{id:!0});var GE=o(Ks);at=e(GE,"A",{href:!0});var WE=o(at);ik=l(WE,"Functions"),WE.forEach(a),GE.forEach(a),yr=r(s),Qs=e(s,"PRE",{class:!0});var m0=o(Qs);m0.forEach(a),wr=r(s),Xs=e(s,"H3",{id:!0});var zE=o(Xs);tt=e(zE,"A",{href:!0});var VE=o(tt);kk=l(VE,"Selectors"),VE.forEach(a),zE.forEach(a),Tr=r(s),Zs=e(s,"PRE",{class:!0});var h0=o(Zs);h0.forEach(a),jr=r(s),$s=e(s,"H3",{id:!0});var KE=o($s);et=e(KE,"A",{href:!0});var QE=o(et);fk=l(QE,"Events"),QE.forEach(a),KE.forEach(a),Dr=r(s),sn=e(s,"PRE",{class:!0});var v0=o(sn);v0.forEach(a),xr=r(s),nn=e(s,"H2",{id:!0});var XE=o(nn);ot=e(XE,"A",{href:!0});var ZE=o(ot);dk=l(ZE,"Typescript"),ZE.forEach(a),XE.forEach(a),qr=r(s),pt=e(s,"BLOCKQUOTE",{});var $E=o(pt);oo=e($E,"P",{});var s3=o(oo);mk=l(s3,"TODO"),s3.forEach(a),$E.forEach(a),Lr=r(s),an=e(s,"H2",{id:!0});var n3=o(an);lt=e(n3,"A",{href:!0});var a3=o(lt);hk=l(a3,"Ajax"),a3.forEach(a),n3.forEach(a),Ar=r(s),tn=e(s,"PRE",{class:!0});var E0=o(tn);E0.forEach(a),gr=r(s),en=e(s,"H2",{id:!0});var t3=o(en);ct=e(t3,"A",{href:!0});var e3=o(ct);vk=l(e3,"p5"),e3.forEach(a),t3.forEach(a),Pr=r(s),rt=e(s,"BLOCKQUOTE",{});var o3=o(rt);po=e(o3,"P",{});var p3=o(po);Ek=l(p3,"TODO"),p3.forEach(a),o3.forEach(a),Sr=r(s),on=e(s,"H2",{id:!0});var l3=o(on);ut=e(l3,"A",{href:!0});var c3=o(ut);_k=l(c3,"NodeJs"),c3.forEach(a),l3.forEach(a),Cr=r(s),it=e(s,"BLOCKQUOTE",{});var r3=o(it);lo=e(r3,"P",{});var u3=o(lo);bk=l(u3,`“NodeJs is an open source cross-plateform back-end JavaScript
Environment that execute javaScript outside a web browser. It was build
in 2009 in JavaScript and in C/C++ where JavaScript was performing too
slow. Node use V8 to compile JS source code to native machine code at
runtime.`),u3.forEach(a),r3.forEach(a),Ir=r(s),pn=e(s,"P",{});var mE=o(pn);yk=l(mE,"Download Node: "),ln=e(mE,"A",{href:!0,rel:!0});var i3=o(ln);wk=l(i3,"https://nodejs.org/en/download/"),i3.forEach(a),mE.forEach(a),Hr=r(s),cn=e(s,"PRE",{class:!0});var _0=o(cn);_0.forEach(a),Nr=r(s),kt=e(s,"P",{});var k3=o(kt);Tk=l(k3,"Node Package Manager (npm)"),k3.forEach(a),Or=r(s),rn=e(s,"PRE",{class:!0});var b0=o(rn);b0.forEach(a),Mr=r(s),ft=e(s,"P",{});var f3=o(ft);jk=l(f3,"Node Path System (path)"),f3.forEach(a),Br=r(s),un=e(s,"PRE",{class:!0});var y0=o(un);y0.forEach(a),Rr=r(s),dt=e(s,"P",{});var d3=o(dt);Dk=l(d3,"Node File System (fs)"),d3.forEach(a),Yr=r(s),kn=e(s,"PRE",{class:!0});var w0=o(kn);w0.forEach(a),Jr=r(s),mt=e(s,"P",{});var m3=o(mt);xk=l(m3,"Server HTTP (http)"),m3.forEach(a),Fr=r(s),fn=e(s,"PRE",{class:!0});var T0=o(fn);T0.forEach(a),Ur=r(s),dn=e(s,"H2",{id:!0});var h3=o(dn);ht=e(h3,"A",{href:!0});var v3=o(ht);qk=l(v3,"Jest"),v3.forEach(a),h3.forEach(a),Gr=r(s),vt=e(s,"P",{});var E3=o(vt);Lk=l(E3,"Unit Testing"),E3.forEach(a),Wr=r(s),mn=e(s,"PRE",{class:!0});var j0=o(mn);j0.forEach(a),zr=r(s),hn=e(s,"PRE",{class:!0});var D0=o(hn);D0.forEach(a),Vr=r(s),vn=e(s,"PRE",{class:!0});var x0=o(vn);x0.forEach(a),Kr=r(s),En=e(s,"PRE",{class:!0});var q0=o(En);q0.forEach(a),Qr=r(s),_n=e(s,"H3",{id:!0});var _3=o(_n);Et=e(_3,"A",{href:!0});var b3=o(Et);Ak=l(b3,"Cypress"),b3.forEach(a),_3.forEach(a),Xr=r(s),_t=e(s,"P",{});var y3=o(_t);gk=l(y3,"Integration Testing"),y3.forEach(a),Zr=r(s),bn=e(s,"PRE",{class:!0});var L0=o(bn);L0.forEach(a),$r=r(s),yn=e(s,"PRE",{class:!0});var A0=o(yn);A0.forEach(a),su=r(s),wn=e(s,"PRE",{class:!0});var g0=o(wn);g0.forEach(a),nu=r(s),Tn=e(s,"PRE",{class:!0});var P0=o(Tn);P0.forEach(a),au=r(s),jn=e(s,"PRE",{class:!0});var S0=o(jn);S0.forEach(a),tu=r(s),Dn=e(s,"H1",{id:!0});var w3=o(Dn);bt=e(w3,"A",{href:!0});var T3=o(bt);Pk=l(T3,"JS-BUNDLING"),T3.forEach(a),w3.forEach(a),eu=r(s),xn=e(s,"H2",{id:!0});var j3=o(xn);yt=e(j3,"A",{href:!0});var D3=o(yt);Sk=l(D3,"Comparison"),D3.forEach(a),j3.forEach(a),ou=r(s),qn=e(s,"H3",{id:!0});var x3=o(qn);wt=e(x3,"A",{href:!0});var q3=o(wt);Ck=l(q3,"For CLI tools"),q3.forEach(a),x3.forEach(a),pu=r(s),js=e(s,"TABLE",{});var Fi=o(js);co=e(Fi,"THEAD",{});var L3=o(co);T=e(L3,"TR",{});var F=o(T);ro=e(F,"TH",{});var A3=o(ro);Ik=l(A3,"Name"),A3.forEach(a),Hk=r(F),uo=e(F,"TH",{});var g3=o(uo);Nk=l(g3,"Note"),g3.forEach(a),Ok=r(F),io=e(F,"TH",{});var P3=o(io);Mk=l(P3,"Free license"),P3.forEach(a),Bk=r(F),ko=e(F,"TH",{});var S3=o(ko);Rk=l(S3,"Mainained"),S3.forEach(a),Yk=r(F),fo=e(F,"TH",{});var C3=o(fo);Jk=l(C3,"Binaries"),C3.forEach(a),F.forEach(a),L3.forEach(a),Fk=r(Fi),j=e(Fi,"TBODY",{});var U=o(j);D=e(U,"TR",{});var G=o(D);mo=e(G,"TD",{});var I3=o(mo);Ln=e(I3,"A",{href:!0,rel:!0});var H3=o(Ln);Uk=l(H3,"pkg"),H3.forEach(a),I3.forEach(a),Gk=r(G),ho=e(G,"TD",{});var N3=o(ho);Wk=l(N3,"Node bundler"),N3.forEach(a),zk=r(G),vo=e(G,"TD",{});var O3=o(vo);Vk=l(O3,"✅ MIT"),O3.forEach(a),Kk=r(G),Eo=e(G,"TD",{});var M3=o(Eo);Qk=l(M3,"✅ Active"),M3.forEach(a),Xk=r(G),_o=e(G,"TD",{});var B3=o(_o);An=e(B3,"A",{href:!0,rel:!0});var R3=o(An);Zk=l(R3,"v18 x64-86"),R3.forEach(a),B3.forEach(a),G.forEach(a),$k=r(U),x=e(U,"TR",{});var W=o(x);bo=e(W,"TD",{});var Y3=o(bo);gn=e(Y3,"A",{href:!0,rel:!0});var J3=o(gn);sf=l(J3,"nexe"),J3.forEach(a),Y3.forEach(a),nf=r(W),yo=e(W,"TD",{});var F3=o(yo);af=l(F3,"Node bundler"),F3.forEach(a),tf=r(W),wo=e(W,"TD",{});var U3=o(wo);ef=l(U3,"✅ MIT"),U3.forEach(a),of=r(W),To=e(W,"TD",{});var G3=o(To);pf=l(G3,"✅ Active"),G3.forEach(a),lf=r(W),jo=e(W,"TD",{});var W3=o(jo);Pn=e(W3,"A",{href:!0,rel:!0});var z3=o(Pn);cf=l(z3,"v16 x64-86"),z3.forEach(a),W3.forEach(a),W.forEach(a),rf=r(U),q=e(U,"TR",{});var z=o(q);Do=e(z,"TD",{});var V3=o(Do);Sn=e(V3,"A",{href:!0,rel:!0});var K3=o(Sn);uf=l(K3,"enclose"),K3.forEach(a),V3.forEach(a),kf=r(z),xo=e(z,"TD",{});var Q3=o(xo);ff=l(Q3,"Node bundler"),Q3.forEach(a),df=r(z),qo=e(z,"TD",{});var X3=o(qo);mf=l(X3,"❌ EULA"),X3.forEach(a),hf=r(z),Lo=e(z,"TD",{});var Z3=o(Lo);vf=l(Z3,"❌   Deprecated"),Z3.forEach(a),Ef=r(z),Ao=e(z,"TD",{});var $3=o(Ao);Cn=e($3,"A",{href:!0,rel:!0});var s_=o(Cn);_f=l(s_,"v6 x64"),s_.forEach(a),$3.forEach(a),z.forEach(a),bf=r(U),L=e(U,"TR",{});var V=o(L);go=e(V,"TD",{});var n_=o(go);In=e(n_,"A",{href:!0,rel:!0});var a_=o(In);yf=l(a_,"node-packer"),a_.forEach(a),n_.forEach(a),wf=r(V),Po=e(V,"TD",{});var t_=o(Po);Tf=l(t_,"Node bundler"),t_.forEach(a),jf=r(V),So=e(V,"TD",{});var e_=o(So);Df=l(e_,"✅ MIT"),e_.forEach(a),xf=r(V),Co=e(V,"TD",{});var o_=o(Co);qf=l(o_,"❌  No (2y)"),o_.forEach(a),Lf=r(V),lu=e(V,"TD",{}),o(lu).forEach(a),V.forEach(a),Af=r(U),A=e(U,"TR",{});var K=o(A);Io=e(K,"TD",{});var p_=o(Io);Hn=e(p_,"A",{href:!0,rel:!0});var l_=o(Hn);gf=l(l_,"deno-build"),l_.forEach(a),p_.forEach(a),Pf=r(K),Ho=e(K,"TD",{});var c_=o(Ho);Sf=l(c_,"Deno compiler"),c_.forEach(a),Cf=r(K),No=e(K,"TD",{});var r_=o(No);If=l(r_,"✅ MIT"),r_.forEach(a),Hf=r(K),Oo=e(K,"TD",{});var u_=o(Oo);Nf=l(u_,"✅ Active"),u_.forEach(a),Of=r(K),cu=e(K,"TD",{}),o(cu).forEach(a),K.forEach(a),U.forEach(a),Fi.forEach(a),ru=r(s),Nn=e(s,"H3",{id:!0});var i_=o(Nn);Tt=e(i_,"A",{href:!0});var k_=o(Tt);Mf=l(k_,"For GUI tools"),k_.forEach(a),i_.forEach(a),uu=r(s),Ds=e(s,"TABLE",{});var Ui=o(Ds);Mo=e(Ui,"THEAD",{});var f_=o(Mo);g=e(f_,"TR",{});var Q=o(g);Bo=e(Q,"TH",{});var d_=o(Bo);Bf=l(d_,"Name"),d_.forEach(a),Rf=r(Q),Ro=e(Q,"TH",{});var m_=o(Ro);Yf=l(m_,"Note"),m_.forEach(a),Jf=r(Q),Yo=e(Q,"TH",{});var h_=o(Yo);Ff=l(h_,"Free license"),h_.forEach(a),Uf=r(Q),Jo=e(Q,"TH",{});var v_=o(Jo);Gf=l(v_,"Mainained"),v_.forEach(a),Wf=r(Q),Fo=e(Q,"TH",{});var E_=o(Fo);zf=l(E_,"Binaries"),E_.forEach(a),Q.forEach(a),f_.forEach(a),Vf=r(Ui),B=e(Ui,"TBODY",{});var Os=o(B);P=e(Os,"TR",{});var X=o(P);Uo=e(X,"TD",{});var __=o(Uo);On=e(__,"A",{href:!0,rel:!0});var b_=o(On);Kf=l(b_,"nwjs"),b_.forEach(a),__.forEach(a),Qf=r(X),Go=e(X,"TD",{});var y_=o(Go);Xf=l(y_,"Chromium bundler"),y_.forEach(a),Zf=r(X),Wo=e(X,"TD",{});var w_=o(Wo);$f=l(w_,"✅ MIT"),w_.forEach(a),sd=r(X),zo=e(X,"TD",{});var T_=o(zo);nd=l(T_,"✅ Active"),T_.forEach(a),ad=r(X),Vo=e(X,"TD",{});var j_=o(Vo);Mn=e(j_,"A",{href:!0,rel:!0});var D_=o(Mn);td=l(D_,"v18 x64-86"),D_.forEach(a),j_.forEach(a),X.forEach(a),ed=r(Os),S=e(Os,"TR",{});var Z=o(S);Ko=e(Z,"TD",{});var x_=o(Ko);Bn=e(x_,"A",{href:!0,rel:!0});var q_=o(Bn);od=l(q_,"electron"),q_.forEach(a),x_.forEach(a),pd=r(Z),Qo=e(Z,"TD",{});var L_=o(Qo);ld=l(L_,"Chromuim bundler"),L_.forEach(a),cd=r(Z),Xo=e(Z,"TD",{});var A_=o(Xo);rd=l(A_,"✅ MIT"),A_.forEach(a),ud=r(Z),Zo=e(Z,"TD",{});var g_=o(Zo);id=l(g_,"✅ Active"),g_.forEach(a),kd=r(Z),iu=e(Z,"TD",{}),o(iu).forEach(a),Z.forEach(a),fd=r(Os),C=e(Os,"TR",{});var $=o(C);$o=e($,"TD",{});var P_=o($o);Rn=e(P_,"A",{href:!0,rel:!0});var S_=o(Rn);dd=l(S_,"tauri"),S_.forEach(a),P_.forEach(a),md=r($),sp=e($,"TD",{});var C_=o(sp);hd=l(C_,"Rust bundler"),C_.forEach(a),vd=r($),np=e($,"TD",{});var I_=o(np);Ed=l(I_,"✅ MIT"),I_.forEach(a),_d=r($),ap=e($,"TD",{});var H_=o(ap);bd=l(H_,"✅  Active"),H_.forEach(a),yd=r($),ku=e($,"TD",{}),o(ku).forEach(a),$.forEach(a),wd=r(Os),I=e(Os,"TR",{});var ss=o(I);tp=e(ss,"TD",{});var N_=o(tp);Yn=e(N_,"A",{href:!0,rel:!0});var O_=o(Yn);Td=l(O_,"app-image"),O_.forEach(a),N_.forEach(a),jd=r(ss),ep=e(ss,"TD",{});var M_=o(ep);Dd=l(M_,"Packager"),M_.forEach(a),xd=r(ss),op=e(ss,"TD",{});var B_=o(op);qd=l(B_,"✅ MIT"),B_.forEach(a),Ld=r(ss),pp=e(ss,"TD",{});var R_=o(pp);Ad=l(R_,"✅  Active"),R_.forEach(a),gd=r(ss),fu=e(ss,"TD",{}),o(fu).forEach(a),ss.forEach(a),Os.forEach(a),Ui.forEach(a),du=r(s),Jn=e(s,"H2",{id:!0});var Y_=o(Jn);jt=e(Y_,"A",{href:!0});var J_=o(jt);Pd=l(J_,"Pkg"),J_.forEach(a),Y_.forEach(a),mu=r(s),v=e(s,"UL",{});var N=o(v);lp=e(N,"LI",{});var F_=o(lp);cp=e(F_,"OL",{});var U_=o(cp);rp=e(U_,"LI",{});var G_=o(rp);Sd=l(G_,"Bundles the application with a custom v8 script compiler into a snapshot"),G_.forEach(a),U_.forEach(a),F_.forEach(a),Cd=r(N),up=e(N,"LI",{});var W_=o(up);Dt=e(W_,"OL",{start:!0});var z_=o(Dt);ip=e(z_,"LI",{});var V_=o(ip);Id=l(V_,"Downloads the node source (or a prebuilt binary)"),V_.forEach(a),z_.forEach(a),W_.forEach(a),Hd=r(N),kp=e(N,"LI",{});var K_=o(kp);xt=e(K_,"OL",{start:!0});var Q_=o(xt);fp=e(Q_,"LI",{});var X_=o(fp);Nd=l(X_,"Applies arbitrary source patches"),X_.forEach(a),Q_.forEach(a),K_.forEach(a),Od=r(N),dp=e(N,"LI",{});var Z_=o(dp);qt=e(Z_,"OL",{start:!0});var $_=o(qt);mp=e($_,"LI",{});var sb=o(mp);Md=l(sb,"Maybe compiles downloaded source"),sb.forEach(a),$_.forEach(a),Z_.forEach(a),Bd=r(N),hp=e(N,"LI",{});var nb=o(hp);Lt=e(nb,"OL",{start:!0});var ab=o(Lt);vp=e(ab,"LI",{});var tb=o(vp);Rd=l(tb,"Appends snapshotted output to the end of the binary"),tb.forEach(a),ab.forEach(a),nb.forEach(a),Yd=r(N),Ep=e(N,"LI",{});var eb=o(Ep);At=e(eb,"OL",{start:!0});var ob=o(At);_p=e(ob,"LI",{});var pb=o(_p);Jd=l(pb,"Snapshot (cachedData from v8) is loaded/run when binary executes."),pb.forEach(a),ob.forEach(a),eb.forEach(a),N.forEach(a),hu=r(s),gt=e(s,"P",{});var lb=o(gt);Pt=e(lb,"EM",{});var hE=o(Pt);Fd=l(hE,"from "),Fn=e(hE,"A",{href:!0,rel:!0});var cb=o(Fn);Ud=l(cb,"https://github.com/vercel/pkg/issues/42"),cb.forEach(a),hE.forEach(a),lb.forEach(a),vu=r(s),St=e(s,"BLOCKQUOTE",{});var rb=o(St);bp=e(rb,"P",{});var ub=o(bp);Gd=l(ub,"“Pkg hacked fs.* API’s dynamically in order to access in-package files, whereas Node.js Compiler leaves them alone and instead works on a deeper level via libsquash. Pkg uses JSON to store in-package files while Node.js Compiler uses the more sophisticated and widely used SquashFS as its data structure.”"),ub.forEach(a),rb.forEach(a),Eu=r(s),Ct=e(s,"P",{});var ib=o(Ct);Wd=l(ib,"pkg:"),ib.forEach(a),_u=r(s),E=e(s,"UL",{});var O=o(E);Un=e(O,"LI",{});var Gi=o(Un);zd=l(Gi,"a lot of configuration possible (see "),Gn=e(Gi,"A",{href:!0,rel:!0});var kb=o(Gn);Vd=l(kb,"usage settings"),kb.forEach(a),Kd=l(Gi,")"),Gi.forEach(a),Qd=r(O),yp=e(O,"LI",{});var fb=o(yp);Xd=l(fb,"best support for distributed node binaries"),fb.forEach(a),Zd=r(O),wp=e(O,"LI",{});var db=o(wp);$d=l(db,"support multiple builds at a time"),db.forEach(a),sm=r(O),Wn=e(O,"LI",{});var Wi=o(Wn);nm=l(Wi,"configuration in json or by command line (see "),zn=e(Wi,"A",{href:!0,rel:!0});var mb=o(zn);am=l(mb,"config"),mb.forEach(a),tm=l(Wi,")"),Wi.forEach(a),em=r(O),It=e(O,"LI",{});var vE=o(It);om=l(vE,"option to build the node binaries ourself with "),Tp=e(vE,"CODE",{});var hb=o(Tp);pm=l(hb,"--build"),hb.forEach(a),vE.forEach(a),lm=r(O),xs=e(O,"LI",{});var er=o(xs);cm=l(er,"don’t work well with ES6 modules (use "),jp=e(er,"CODE",{});var vb=o(jp);rm=l(vb,"require"),vb.forEach(a),um=l(er,") => or see "),Dp=e(er,"CODE",{});var Eb=o(Dp);im=l(Eb,"nexe"),Eb.forEach(a),er.forEach(a),O.forEach(a),bu=r(s),Vn=e(s,"H3",{id:!0});var _b=o(Vn);Ht=e(_b,"A",{href:!0});var bb=o(Ht);km=l(bb,"File System"),bb.forEach(a),_b.forEach(a),yu=r(s),b=e(s,"P",{});var ns=o(b);fm=l(ns,"“Hence, in order to make use of a file collected at packaging time (require a javascript file or serve an asset) you should take "),xp=e(ns,"CODE",{});var yb=o(xp);dm=l(yb,"__filename"),yb.forEach(a),mm=l(ns,", "),qp=e(ns,"CODE",{});var wb=o(qp);hm=l(wb,"__dirname"),wb.forEach(a),vm=l(ns,", "),Lp=e(ns,"CODE",{});var Tb=o(Lp);Em=l(Tb,"process.pkg.defaultEntrypoint"),Tb.forEach(a),_m=l(ns," or "),Ap=e(ns,"CODE",{});var jb=o(Ap);bm=l(jb,"require.main.filename"),jb.forEach(a),ym=l(ns," as a base for your path calculations."),ns.forEach(a),wu=r(s),R=e(s,"P",{});var Wa=o(R);wm=l(Wa,"For javascript files you can just require or require.resolve because they use current "),gp=e(Wa,"CODE",{});var Db=o(gp);Tm=l(Db,"__dirname"),Db.forEach(a),jm=l(Wa," by default. For assets use "),Pp=e(Wa,"CODE",{});var xb=o(Pp);Dm=l(xb,"path.join(__dirname, ``'../path/to/asset')"),xb.forEach(a),xm=l(Wa,`”
`),Nt=e(Wa,"EM",{});var EE=o(Nt);qm=l(EE,"from "),Kn=e(EE,"A",{href:!0,rel:!0});var qb=o(Kn);Lm=l(qb,"https://github.com/vercel/pkg#snapshot-filesystem"),qb.forEach(a),EE.forEach(a),Wa.forEach(a),Tu=r(s),Qn=e(s,"H3",{id:!0});var Lb=o(Qn);Ot=e(Lb,"A",{href:!0});var Ab=o(Ot);Am=l(Ab,"Node binaries fetcher"),Ab.forEach(a),Lb.forEach(a),ju=r(s),qs=e(s,"UL",{});var zi=o(qs);Sp=e(zi,"LI",{});var gb=o(Sp);Xn=e(gb,"A",{href:!0,rel:!0});var Pb=o(Xn);gm=l(Pb,"Node binaries fetcher (and distrib)"),Pb.forEach(a),gb.forEach(a),Pm=r(zi),Cp=e(zi,"LI",{});var Sb=o(Cp);Zn=e(Sb,"A",{href:!0,rel:!0});var Cb=o(Zn);Sm=l(Cb,"Targets and build documentation"),Cb.forEach(a),Sb.forEach(a),zi.forEach(a),Du=r(s),Mt=e(s,"P",{});var Ib=o(Mt);Cm=l(Ib,"Supported:"),Ib.forEach(a),xu=r(s),Ls=e(s,"UL",{});var Vi=o(Ls);Ip=e(Vi,"LI",{});var Hb=o(Ip);Hp=e(Hb,"CODE",{});var Nb=o(Hp);Im=l(Nb,"alpine, linux, macox, windows (x32/64)"),Nb.forEach(a),Hb.forEach(a),Hm=r(Vi),Np=e(Vi,"LI",{});var Ob=o(Np);Op=e(Ob,"CODE",{});var Mb=o(Op);Nm=l(Mb,"node <= v18"),Mb.forEach(a),Ob.forEach(a),Vi.forEach(a),qu=r(s),$n=e(s,"H3",{id:!0});var Bb=o($n);Bt=e(Bb,"A",{href:!0});var Rb=o(Bt);Om=l(Rb,"Details"),Rb.forEach(a),Bb.forEach(a),Lu=r(s),As=e(s,"P",{});var Ki=o(As);Mm=l(Ki,"Building in "),Mp=e(Ki,"CODE",{});var Yb=o(Mp);Bm=l(Yb,"DEBUG"),Yb.forEach(a),Rm=l(Ki," mode:"),Ki.forEach(a),Au=r(s),sa=e(s,"PRE",{class:!0});var C0=o(sa);C0.forEach(a),gu=r(s),gs=e(s,"P",{});var Qi=o(gs);Ym=l(Qi,"["),Bp=e(Qi,"STRONG",{});var Jb=o(Bp);na=e(Jb,"A",{href:!0,rel:!0});var Fb=o(na);Jm=l(Fb,"cernbox build_log.txt"),Fb.forEach(a),Jb.forEach(a),Fm=l(Qi,"]"),Qi.forEach(a),Pu=r(s),aa=e(s,"P",{});var _E=o(aa);Rp=e(_E,"STRONG",{});var Ub=o(Rp);Um=l(Ub,"1.1."),Ub.forEach(a),Gm=l(_E," Navigate dependandancies from the scipt input and add them to the queue"),_E.forEach(a),Su=r(s),ta=e(s,"PRE",{class:!0});var I0=o(ta);I0.forEach(a),Cu=r(s),ea=e(s,"P",{});var bE=o(ea);Yp=e(bE,"STRONG",{});var Gb=o(Yp);Wm=l(Gb,"1.2."),Gb.forEach(a),zm=l(bE,"  Resolve ambiguous paths"),bE.forEach(a),Iu=r(s),oa=e(s,"PRE",{class:!0});var H0=o(oa);H0.forEach(a),Hu=r(s),pa=e(s,"P",{});var yE=o(pa);Jp=e(yE,"STRONG",{});var Wb=o(Jp);Vm=l(Wb,"1.3."),Wb.forEach(a),Km=l(yE,"  Directories and stats added to the VFS"),yE.forEach(a),Nu=r(s),la=e(s,"PRE",{class:!0});var N0=o(la);N0.forEach(a),Ou=r(s),ca=e(s,"P",{});var wE=o(ca);Fp=e(wE,"STRONG",{});var zb=o(Fp);Qm=l(zb,"1.4."),zb.forEach(a),Xm=l(wE," Convert to bytecode and add"),wE.forEach(a),Mu=r(s),ra=e(s,"PRE",{class:!0});var O0=o(ra);O0.forEach(a),Bu=r(s),ua=e(s,"P",{});var TE=o(ua);Zm=l(TE,`“By default, your source code is precompiled to v8 bytecode before being written to the output file”
`),Rt=e(TE,"EM",{});var jE=o(Rt);$m=l(jE,"from "),ia=e(jE,"A",{href:!0,rel:!0});var Vb=o(ia);sh=l(Vb,"https://github.com/vercel/pkg#bytecode-reproducibility"),Vb.forEach(a),jE.forEach(a),TE.forEach(a),Ru=r(s),ka=e(s,"P",{});var DE=o(ka);Up=e(DE,"STRONG",{});var Kb=o(Up);nh=l(Kb,"1.5"),Kb.forEach(a),ah=l(DE," Merge required sources"),DE.forEach(a),Yu=r(s),fa=e(s,"PRE",{class:!0});var M0=o(fa);M0.forEach(a),Ju=r(s),Yt=e(s,"P",{});var Qb=o(Yt);Gp=e(Qb,"STRONG",{});var Xb=o(Gp);th=l(Xb,"With config"),Xb.forEach(a),Qb.forEach(a),Fu=r(s),da=e(s,"PRE",{class:!0});var B0=o(da);B0.forEach(a),Uu=r(s),Jt=e(s,"P",{});var Zb=o(Jt);Wp=e(Zb,"STRONG",{});var $b=o(Wp);eh=l($b,"Running the binary"),$b.forEach(a),Zb.forEach(a),Gu=r(s),Ft=e(s,"P",{});var sy=o(Ft);zp=e(sy,"CODE",{});var ny=o(zp);oh=l(ny,"DEBUG_PKG=1 ./panorama"),ny.forEach(a),sy.forEach(a),Wu=r(s),Ps=e(s,"P",{});var Xi=o(Ps);ph=l(Xi,"["),Vp=e(Xi,"STRONG",{});var ay=o(Vp);ma=e(ay,"A",{href:!0,rel:!0});var ty=o(ma);lh=l(ty,"cernbox run_log.txt"),ty.forEach(a),ay.forEach(a),ch=l(Xi,"]"),Xi.forEach(a),zu=r(s),ha=e(s,"PRE",{class:!0});var R0=o(ha);R0.forEach(a),Vu=r(s),Ut=e(s,"P",{});var ey=o(Ut);Kp=e(ey,"STRONG",{});var oy=o(Kp);rh=l(oy,"Building without including sources as bytecode"),oy.forEach(a),ey.forEach(a),Ku=r(s),va=e(s,"PRE",{class:!0});var Y0=o(va);Y0.forEach(a),Qu=r(s),ts=e(s,"P",{});var or=o(ts);uh=l(or,"“Specifying "),Qp=e(or,"CODE",{});var py=o(Qp);ih=l(py,"--no-bytecode"),py.forEach(a),kh=l(or,` will fail if there are any packages in your project that aren’t explicitly marked as public by the license in their package.json.”
`),Gt=e(or,"EM",{});var xE=o(Gt);fh=l(xE,"from "),Ea=e(xE,"A",{href:!0,rel:!0});var ly=o(Ea);dh=l(ly,"https://github.com/vercel/pkg#other-considerations"),ly.forEach(a),xE.forEach(a),or.forEach(a),Xu=r(s),_a=e(s,"H4",{id:!0});var cy=o(_a);Wt=e(cy,"A",{href:!0});var ry=o(Wt);mh=l(ry,"New simple js project specified as OS (no dependancies)"),ry.forEach(a),cy.forEach(a),Zu=r(s),zt=e(s,"P",{});var uy=o(zt);Xp=e(uy,"EM",{});var iy=o(Xp);hh=l(iy,"index.js"),iy.forEach(a),uy.forEach(a),$u=r(s),ba=e(s,"PRE",{class:!0});var J0=o(ba);J0.forEach(a),si=r(s),Vt=e(s,"P",{});var ky=o(Vt);Zp=e(ky,"EM",{});var fy=o(Zp);vh=l(fy,"package.json"),fy.forEach(a),ky.forEach(a),ni=r(s),ya=e(s,"PRE",{class:!0});var F0=o(ya);F0.forEach(a),ai=r(s),Y=e(s,"P",{});var Oe=o(Y);Ss=e(Oe,"STRONG",{});var pr=o(Ss);Eh=l(pr,"/!\\ MUST ADD BOTH "),$p=e(pr,"CODE",{});var dy=o($p);_h=l(dy,"--no-bytecode"),dy.forEach(a),bh=l(pr," AND "),sl=e(pr,"CODE",{});var my=o(sl);yh=l(my,"--public"),my.forEach(a),pr.forEach(a),wh=l(Oe,`
otherwise `),nl=e(Oe,"CODE",{});var hy=o(nl);Th=l(hy,"Error! --no-bytecode and no source breaks final executable"),hy.forEach(a),jh=r(Oe),Kt=e(Oe,"EM",{});var qE=o(Kt);Dh=l(qE,"see "),wa=e(qE,"A",{href:!0,rel:!0});var vy=o(wa);xh=l(vy,"https://github.com/vercel/pkg/issues/1139"),vy.forEach(a),qE.forEach(a),Oe.forEach(a),ti=r(s),Qt=e(s,"P",{});var Ey=o(Qt);qh=l(Ey,"… still not working"),Ey.forEach(a),ei=r(s),Xt=e(s,"P",{});var _y=o(Xt);Zt=e(_y,"IMG",{src:!0,alt:!0}),_y.forEach(a),oi=r(s),Ta=e(s,"H4",{id:!0});var by=o(Ta);$t=e(by,"A",{href:!0});var yy=o($t);Lh=l(yy,"Some readable parts"),yy.forEach(a),by.forEach(a),pi=r(s),se=e(s,"P",{});var wy=o(se);ne=e(wy,"IMG",{src:!0,alt:!0}),wy.forEach(a),li=r(s),ae=e(s,"P",{});var Ty=o(ae);Ah=l(Ty,"from decompiled linux binaries"),Ty.forEach(a),ci=r(s),Cs=e(s,"UL",{});var Zi=o(Cs);al=e(Zi,"LI",{});var jy=o(al);ja=e(jy,"A",{href:!0,rel:!0});var Dy=o(ja);gh=l(Dy,"headers.js"),Dy.forEach(a),jy.forEach(a),Ph=r(Zi),tl=e(Zi,"LI",{});var xy=o(tl);Da=e(xy,"A",{href:!0,rel:!0});var qy=o(Da);Sh=l(qy,"modules.json"),qy.forEach(a),xy.forEach(a),Zi.forEach(a),ri=r(s),Is=e(s,"TABLE",{});var $i=o(Is);el=e($i,"THEAD",{});var Ly=o(el);_=e(Ly,"TR",{});var M=o(_);ol=e(M,"TH",{});var Ay=o(ol);Ch=l(Ay,"?"),Ay.forEach(a),Ih=r(M),pl=e(M,"TH",{});var gy=o(pl);Hh=l(gy,"node binaries"),gy.forEach(a),Nh=r(M),ll=e(M,"TH",{});var Py=o(ll);Oh=l(Py,"?"),Py.forEach(a),Mh=r(M),cl=e(M,"TH",{});var Sy=o(cl);Bh=l(Sy,"?"),Sy.forEach(a),Rh=r(M),rl=e(M,"TH",{});var Cy=o(rl);Yh=l(Cy,"code ?"),Cy.forEach(a),Jh=r(M),ul=e(M,"TH",{});var Iy=o(ul);Fh=l(Iy,"modules"),Iy.forEach(a),M.forEach(a),Ly.forEach(a),Uh=r($i),ui=e($i,"TBODY",{});var U0=o(ui);U0.forEach(a),$i.forEach(a),ii=r(s),xa=e(s,"H2",{id:!0});var Hy=o(xa);te=e(Hy,"A",{href:!0});var Ny=o(te);Gh=l(Ny,"Nexe"),Ny.forEach(a),Hy.forEach(a),ki=r(s),m=e(s,"UL",{});var y=o(m);il=e(y,"LI",{});var Oy=o(il);kl=e(Oy,"OL",{});var My=o(kl);fl=e(My,"LI",{});var By=o(fl);Wh=l(By,"Bundles the application if desired using webpack."),By.forEach(a),My.forEach(a),Oy.forEach(a),zh=r(y),dl=e(y,"LI",{});var Ry=o(dl);ee=e(Ry,"OL",{start:!0});var Yy=o(ee);ml=e(Yy,"LI",{});var Jy=o(ml);Vh=l(Jy,"Downloads node source (or a prebuilt binary)"),Jy.forEach(a),Yy.forEach(a),Ry.forEach(a),Kh=r(y),hl=e(y,"LI",{});var Fy=o(hl);oe=e(Fy,"OL",{start:!0});var Uy=o(oe);vl=e(Uy,"LI",{});var Gy=o(vl);Qh=l(Gy,"Adds your application bundle as a native module (like fs, http, path etc)"),Gy.forEach(a),Uy.forEach(a),Fy.forEach(a),Xh=r(y),El=e(y,"LI",{});var Wy=o(El);pe=e(Wy,"OL",{start:!0});var zy=o(pe);_l=e(zy,"LI",{});var Vy=o(_l);Zh=l(Vy,"Applies arbitrary source patches."),Vy.forEach(a),zy.forEach(a),Wy.forEach(a),$h=r(y),bl=e(y,"LI",{});var Ky=o(bl);le=e(Ky,"OL",{start:!0});var Qy=o(le);yl=e(Qy,"LI",{});var Xy=o(yl);sv=l(Xy,"Maybe compiles downloaded source"),Xy.forEach(a),Qy.forEach(a),Ky.forEach(a),nv=r(y),wl=e(y,"LI",{});var Zy=o(wl);ce=e(Zy,"OL",{start:!0});var $y=o(ce);Tl=e($y,"LI",{});var s5=o(Tl);av=l(s5,"Inserts bundle into pre-sized binary"),s5.forEach(a),$y.forEach(a),Zy.forEach(a),tv=r(y),jl=e(y,"LI",{});var n5=o(jl);re=e(n5,"OL",{start:!0});var a5=o(re);Dl=e(a5,"LI",{});var t5=o(Dl);ev=l(t5,"Code is run as main when executable is run (instead of the repl)"),t5.forEach(a),a5.forEach(a),n5.forEach(a),y.forEach(a),fi=r(s),ue=e(s,"P",{});var e5=o(ue);ov=l(e5,"Nexe does not support dynamic require because of its use of browserify, whereas Node.js Compiler supports all kinds of require including require.resolve."),e5.forEach(a),di=r(s),ie=e(s,"P",{});var o5=o(ie);qa=e(o5,"A",{href:!0,rel:!0});var p5=o(qa);pv=l(p5,"https://github.com/nexe/nexe/issues/529"),p5.forEach(a),o5.forEach(a),mi=r(s),ke=e(s,"BLOCKQUOTE",{});var l5=o(ke);xl=e(l5,"P",{});var c5=o(xl);lv=l(c5,"Nexe is a tool for compiling node. You can apply arbitrary patches and build plugins for repeatable patterns to that end. ie. You could make a plugin and or patch for nexe that bypasses the nexe application bundler and uses the same approach as pkg."),c5.forEach(a),l5.forEach(a),hi=r(s),fe=e(s,"P",{});var r5=o(fe);cv=l(r5,"Application Bundling (just different approaches):"),r5.forEach(a),vi=r(s),Hs=e(s,"UL",{});var sk=o(Hs);ql=e(sk,"LI",{});var u5=o(ql);rv=l(u5,"nexe uses a virtual filesystem (similar to tools like asar for electron) and module analysis to include your applications files and dependencies"),u5.forEach(a),uv=r(sk),Ll=e(sk,"LI",{});var i5=o(Ll);iv=l(i5,"pkg uses module analysis, and whitelists to create a V8 snapshot and load (“compile”) your application scripts."),i5.forEach(a),sk.forEach(a),Ei=r(s),de=e(s,"P",{});var k5=o(de);kv=l(k5,"Why use nexe ?"),k5.forEach(a),_i=r(s),h=e(s,"UL",{});var w=o(h);Al=e(w,"LI",{});var f5=o(Al);fv=l(f5,"You need to have additional customizations to node (eg more builtin or native modules, C++ patches)."),f5.forEach(a),dv=r(w),gl=e(w,"LI",{});var d5=o(gl);mv=l(d5,"You want to codesign the executable. By bypassing the built in bundler (with a patch) you can create an application executable that can be signed/verified."),d5.forEach(a),hv=r(w),Pl=e(w,"LI",{});var m5=o(Pl);vv=l(m5,"You want to add an icon (there are lots of ways to accomplish this, but code is usually the best way)"),m5.forEach(a),Ev=r(w),Sl=e(w,"LI",{});var h5=o(Sl);_v=l(h5,"You want to extend it (plugin or patch) to provide a repeatable system for creating a specific type of application. Eg. a windows service or linux daemon."),h5.forEach(a),bv=r(w),Cl=e(w,"LI",{});var v5=o(Cl);yv=l(v5,"Its hosted builds are created with 100% OSS."),v5.forEach(a),wv=r(w),Il=e(w,"LI",{});var E5=o(Il);Tv=l(E5,"It allows the JS engine to recompile in the future if it made bad predictions for hot code paths. (since it uses unchanged source, vs a snapshot. (This point is less relevant with the newer interpreter features)"),E5.forEach(a),jv=r(w),Hl=e(w,"LI",{});var _5=o(Hl);Dv=l(_5,"It provides pre-built versions for any node version."),_5.forEach(a),w.forEach(a),bi=r(s),La=e(s,"H2",{id:!0});var b5=o(La);me=e(b5,"A",{href:!0});var y5=o(me);xv=l(y5,"Enclose"),y5.forEach(a),b5.forEach(a),yi=r(s),he=e(s,"P",{});var w5=o(he);Aa=e(w5,"A",{href:!0,rel:!0});var T5=o(Aa);qv=l(T5,"http://enclosejs.com/"),T5.forEach(a),w5.forEach(a),wi=r(s),H=e(s,"UL",{});var Ms=o(H);Nl=e(Ms,"LI",{});var j5=o(Nl);Ol=e(j5,"P",{});var D5=o(Ol);Lv=l(D5,"JavaScript code is transformed into native code at compile-time using V8 internal compiler. Hence, your sources are not required to execute the binary, and they are not packaged."),D5.forEach(a),j5.forEach(a),Av=r(Ms),Ml=e(Ms,"LI",{});var x5=o(Ml);Bl=e(x5,"P",{});var q5=o(Bl);gv=l(q5,"Optimized native code can be generated only at run-time, using information collected at run-time. Without that information EncloseJS can generate only “unoptimized” code. It runs about 2x slower, than optimized one."),q5.forEach(a),x5.forEach(a),Pv=r(Ms),Rl=e(Ms,"LI",{});var L5=o(Rl);Yl=e(L5,"P",{});var A5=o(Yl);Sv=l(A5,"Also, Node.js code is put inside the executable (along with your code) to support Node.js API for your application at run-time. This increases output file size."),A5.forEach(a),L5.forEach(a),Cv=r(Ms),Jl=e(Ms,"LI",{});var g5=o(Jl);Fl=e(g5,"P",{});var P5=o(Fl);Iv=l(P5,"So, this is not that static compilation we used to know. But nevertheless you get fully functional binary without sources. Also, performance and file size overhead are vectors of future work."),P5.forEach(a),g5.forEach(a),Ms.forEach(a),Ti=r(s),ga=e(s,"H2",{id:!0});var S5=o(ga);ve=e(S5,"A",{href:!0});var C5=o(ve);Hv=l(C5,"Node-packer"),C5.forEach(a),S5.forEach(a),ji=r(s),Ee=e(s,"P",{});var I5=o(Ee);Pa=e(I5,"A",{href:!0,rel:!0});var H5=o(Pa);Nv=l(H5,"https://speakerdeck.com/pmq20/node-dot-js-compiler-compiling-your-node-dot-js-application-into-a-single-executable?slide=5"),H5.forEach(a),I5.forEach(a),Di=r(s),Sa=e(s,"H2",{id:!0});var N5=o(Sa);_e=e(N5,"A",{href:!0});var O5=o(_e);Ov=l(O5,"Nwjs"),O5.forEach(a),N5.forEach(a),xi=r(s),be=e(s,"P",{});var M5=o(be);Ca=e(M5,"A",{href:!0,rel:!0});var B5=o(Ca);Mv=l(B5,"https://github.com/nwjs/nw.js/wiki/How-to-package-and-distribute-your-apps"),B5.forEach(a),M5.forEach(a),qi=r(s),ye=e(s,"P",{});var R5=o(ye);Ia=e(R5,"A",{href:!0,rel:!0});var Y5=o(Ia);Bv=l(Y5,"https://www.sitepoint.com/cross-platform-desktop-app-nw-js/"),Y5.forEach(a),R5.forEach(a),Li=r(s),we=e(s,"P",{});var J5=o(we);Ha=e(J5,"A",{href:!0,rel:!0});var F5=o(Ha);Rv=l(F5,"https://stackoverflow.com/questions/8173232/how-to-make-exe-files-from-a-node-js-app"),F5.forEach(a),J5.forEach(a),Ai=r(s),J=e(s,"UL",{});var Me=o(J);Ul=e(Me,"LI",{});var U5=o(Ul);Gl=e(U5,"OL",{});var G5=o(Gl);Wl=e(G5,"LI",{});var W5=o(Wl);Yv=l(W5,"Zip up all your files, with a package.json in the root"),W5.forEach(a),G5.forEach(a),U5.forEach(a),Jv=r(Me),zl=e(Me,"LI",{});var z5=o(zl);Te=e(z5,"OL",{start:!0});var V5=o(Te);Vl=e(V5,"LI",{});var K5=o(Vl);Fv=l(K5,"Change the extension from .zip to .nw"),K5.forEach(a),V5.forEach(a),z5.forEach(a),Uv=r(Me),Kl=e(Me,"LI",{});var Q5=o(Kl);je=e(Q5,"OL",{start:!0});var X5=o(je);Ql=e(X5,"LI",{});var Z5=o(Ql);Gv=l(Z5,"copy /b nw.exe+app.nw app.exe"),Z5.forEach(a),X5.forEach(a),Q5.forEach(a),Me.forEach(a),gi=r(s),Na=e(s,"H2",{id:!0});var $5=o(Na);De=e($5,"A",{href:!0});var s4=o(De);Wv=l(s4,"Electron"),s4.forEach(a),$5.forEach(a),Pi=r(s),Oa=e(s,"H3",{id:!0});var n4=o(Oa);xe=e(n4,"A",{href:!0});var a4=o(xe);zv=l(a4,"Asar"),a4.forEach(a),n4.forEach(a),Si=r(s),qe=e(s,"P",{});var t4=o(qe);Vv=l(t4,"Asar uses JSON to store files information while Node.js Compiler uses SquashFS. Asar keeps the code archive and the executable separate while Node.js Compiler links all JavaScript source code together with the Node.js virtual machine and generates a single executable as the final product."),t4.forEach(a),Ci=r(s),Ma=e(s,"H2",{id:!0});var e4=o(Ma);Le=e(e4,"A",{href:!0});var o4=o(Le);Kv=l(o4,"Tauri"),o4.forEach(a),e4.forEach(a),Ii=r(s),Ae=e(s,"P",{});var p4=o(Ae);Ba=e(p4,"A",{href:!0,rel:!0});var l4=o(Ba);Qv=l(l4,"https://github.com/tauri-apps/tauri"),l4.forEach(a),p4.forEach(a),Hi=r(s),Ns=e(s,"TABLE",{});var nk=o(Ns);Xl=e(nk,"THEAD",{});var c4=o(Xl);es=e(c4,"TR",{});var Be=o(es);Zl=e(Be,"TH",{});var r4=o(Zl);Xv=l(r4,"Detail"),r4.forEach(a),Zv=r(Be),$l=e(Be,"TH",{});var u4=o($l);$v=l(u4,"Tauri"),u4.forEach(a),s1=r(Be),sc=e(Be,"TH",{});var i4=o(sc);n1=l(i4,"Electron"),i4.forEach(a),Be.forEach(a),c4.forEach(a),a1=r(nk),f=e(nk,"TBODY",{});var d=o(f);os=e(d,"TR",{});var Re=o(os);nc=e(Re,"TD",{});var k4=o(nc);t1=l(k4,"Installer Size Linux"),k4.forEach(a),e1=r(Re),ac=e(Re,"TD",{});var f4=o(ac);o1=l(f4,"3.1 MB"),f4.forEach(a),p1=r(Re),tc=e(Re,"TD",{});var d4=o(tc);l1=l(d4,"52.1 MB"),d4.forEach(a),Re.forEach(a),c1=r(d),ps=e(d,"TR",{});var Ye=o(ps);ec=e(Ye,"TD",{});var m4=o(ec);r1=l(m4,"Memory Consumption Linux"),m4.forEach(a),u1=r(Ye),oc=e(Ye,"TD",{});var h4=o(oc);i1=l(h4,"180 MB"),h4.forEach(a),k1=r(Ye),pc=e(Ye,"TD",{});var v4=o(pc);f1=l(v4,"462 MB"),v4.forEach(a),Ye.forEach(a),d1=r(d),ls=e(d,"TR",{});var Je=o(ls);lc=e(Je,"TD",{});var E4=o(lc);m1=l(E4,"Launch Time Linux"),E4.forEach(a),h1=r(Je),cc=e(Je,"TD",{});var _4=o(cc);v1=l(_4,"0.39s"),_4.forEach(a),E1=r(Je),rc=e(Je,"TD",{});var b4=o(rc);_1=l(b4,"0.80s"),b4.forEach(a),Je.forEach(a),b1=r(d),cs=e(d,"TR",{});var Fe=o(cs);uc=e(Fe,"TD",{});var y4=o(uc);y1=l(y4,"Interface Service Provider"),y4.forEach(a),w1=r(Fe),ic=e(Fe,"TD",{});var w4=o(ic);T1=l(w4,"WRY"),w4.forEach(a),j1=r(Fe),kc=e(Fe,"TD",{});var T4=o(kc);D1=l(T4,"Chromium"),T4.forEach(a),Fe.forEach(a),x1=r(d),rs=e(d,"TR",{});var Ue=o(rs);fc=e(Ue,"TD",{});var j4=o(fc);q1=l(j4,"Backend Binding"),j4.forEach(a),L1=r(Ue),dc=e(Ue,"TD",{});var D4=o(dc);A1=l(D4,"Rust"),D4.forEach(a),g1=r(Ue),mc=e(Ue,"TD",{});var x4=o(mc);P1=l(x4,"Node.js (ECMAScript)"),x4.forEach(a),Ue.forEach(a),S1=r(d),us=e(d,"TR",{});var Ge=o(us);hc=e(Ge,"TD",{});var q4=o(hc);C1=l(q4,"Underlying Engine"),q4.forEach(a),I1=r(Ge),vc=e(Ge,"TD",{});var L4=o(vc);H1=l(L4,"Rust"),L4.forEach(a),N1=r(Ge),Ec=e(Ge,"TD",{});var A4=o(Ec);O1=l(A4,"V8 (C/C++)"),A4.forEach(a),Ge.forEach(a),M1=r(d),is=e(d,"TR",{});var We=o(is);_c=e(We,"TD",{});var g4=o(_c);B1=l(g4,"FLOSS"),g4.forEach(a),R1=r(We),bc=e(We,"TD",{});var P4=o(bc);Y1=l(P4,"Yes"),P4.forEach(a),J1=r(We),yc=e(We,"TD",{});var S4=o(yc);F1=l(S4,"No"),S4.forEach(a),We.forEach(a),U1=r(d),ks=e(d,"TR",{});var ze=o(ks);wc=e(ze,"TD",{});var C4=o(wc);G1=l(C4,"Multithreading"),C4.forEach(a),W1=r(ze),Tc=e(ze,"TD",{});var I4=o(Tc);z1=l(I4,"Yes"),I4.forEach(a),V1=r(ze),jc=e(ze,"TD",{});var H4=o(jc);K1=l(H4,"Yes"),H4.forEach(a),ze.forEach(a),Q1=r(d),fs=e(d,"TR",{});var Ve=o(fs);Dc=e(Ve,"TD",{});var N4=o(Dc);X1=l(N4,"Bytecode Delivery"),N4.forEach(a),Z1=r(Ve),xc=e(Ve,"TD",{});var O4=o(xc);$1=l(O4,"Yes"),O4.forEach(a),s2=r(Ve),qc=e(Ve,"TD",{});var M4=o(qc);n2=l(M4,"No"),M4.forEach(a),Ve.forEach(a),a2=r(d),ds=e(d,"TR",{});var Ke=o(ds);Lc=e(Ke,"TD",{});var B4=o(Lc);t2=l(B4,"Multiple Windows"),B4.forEach(a),e2=r(Ke),Ac=e(Ke,"TD",{});var R4=o(Ac);o2=l(R4,"Yes"),R4.forEach(a),p2=r(Ke),gc=e(Ke,"TD",{});var Y4=o(gc);l2=l(Y4,"Yes"),Y4.forEach(a),Ke.forEach(a),c2=r(d),ms=e(d,"TR",{});var Qe=o(ms);Pc=e(Qe,"TD",{});var J4=o(Pc);r2=l(J4,"Auto Updater"),J4.forEach(a),u2=r(Qe),Sc=e(Qe,"TD",{});var F4=o(Sc);i2=l(F4,"Yes"),F4.forEach(a),k2=r(Qe),Cc=e(Qe,"TD",{});var U4=o(Cc);f2=l(U4,"Yes1"),U4.forEach(a),Qe.forEach(a),d2=r(d),hs=e(d,"TR",{});var Xe=o(hs);Ic=e(Xe,"TD",{});var G4=o(Ic);m2=l(G4,"Custom App Icon"),G4.forEach(a),h2=r(Xe),Hc=e(Xe,"TD",{});var W4=o(Hc);v2=l(W4,"Yes"),W4.forEach(a),E2=r(Xe),Nc=e(Xe,"TD",{});var z4=o(Nc);_2=l(z4,"Yes"),z4.forEach(a),Xe.forEach(a),b2=r(d),vs=e(d,"TR",{});var Ze=o(vs);Oc=e(Ze,"TD",{});var V4=o(Oc);y2=l(V4,"Windows Binary"),V4.forEach(a),w2=r(Ze),Mc=e(Ze,"TD",{});var K4=o(Mc);T2=l(K4,"Yes"),K4.forEach(a),j2=r(Ze),Bc=e(Ze,"TD",{});var Q4=o(Bc);D2=l(Q4,"Yes"),Q4.forEach(a),Ze.forEach(a),x2=r(d),Es=e(d,"TR",{});var $e=o(Es);Rc=e($e,"TD",{});var X4=o(Rc);q2=l(X4,"macOS Binary"),X4.forEach(a),L2=r($e),Yc=e($e,"TD",{});var Z4=o(Yc);A2=l(Z4,"Yes"),Z4.forEach(a),g2=r($e),Jc=e($e,"TD",{});var $4=o(Jc);P2=l($4,"Yes"),$4.forEach(a),$e.forEach(a),S2=r(d),_s=e(d,"TR",{});var so=o(_s);Fc=e(so,"TD",{});var sw=o(Fc);C2=l(sw,"Linux Binary"),sw.forEach(a),I2=r(so),Uc=e(so,"TD",{});var nw=o(Uc);H2=l(nw,"Yes"),nw.forEach(a),N2=r(so),Gc=e(so,"TD",{});var aw=o(Gc);O2=l(aw,"Yes"),aw.forEach(a),so.forEach(a),M2=r(d),bs=e(d,"TR",{});var no=o(bs);Wc=e(no,"TD",{});var tw=o(Wc);B2=l(tw,"iOS Binary"),tw.forEach(a),R2=r(no),zc=e(no,"TD",{});var ew=o(zc);Y2=l(ew,"Soon"),ew.forEach(a),J2=r(no),Vc=e(no,"TD",{});var ow=o(Vc);F2=l(ow,"No"),ow.forEach(a),no.forEach(a),U2=r(d),ys=e(d,"TR",{});var ao=o(ys);Kc=e(ao,"TD",{});var pw=o(Kc);G2=l(pw,"Android Binary"),pw.forEach(a),W2=r(ao),Qc=e(ao,"TD",{});var lw=o(Qc);z2=l(lw,"Soon"),lw.forEach(a),V2=r(ao),Xc=e(ao,"TD",{});var cw=o(Xc);K2=l(cw,"No"),cw.forEach(a),ao.forEach(a),Q2=r(d),ws=e(d,"TR",{});var to=o(ws);Zc=e(to,"TD",{});var rw=o(Zc);X2=l(rw,"Desktop Tray"),rw.forEach(a),Z2=r(to),$c=e(to,"TD",{});var uw=o($c);$2=l(uw,"Yes"),uw.forEach(a),sE=r(to),sr=e(to,"TD",{});var iw=o(sr);nE=l(iw,"Yes"),iw.forEach(a),to.forEach(a),aE=r(d),Ts=e(d,"TR",{});var eo=o(Ts);nr=e(eo,"TD",{});var kw=o(nr);tE=l(kw,"Sidecar Binaries"),kw.forEach(a),eE=r(eo),ar=e(eo,"TD",{});var fw=o(ar);oE=l(fw,"Yes"),fw.forEach(a),pE=r(eo),tr=e(eo,"TD",{});var dw=o(tr);lE=l(dw,"No"),dw.forEach(a),eo.forEach(a),d.forEach(a),nk.forEach(a),Ni=r(s),Ra=e(s,"H2",{id:!0});var mw=o(Ra);ge=e(mw,"A",{href:!0});var hw=o(ge);cE=l(hw,"Deno-build"),hw.forEach(a),mw.forEach(a),Oi=r(s),Pe=e(s,"P",{});var vw=o(Pe);Ya=e(vw,"A",{href:!0,rel:!0});var Ew=o(Ya);rE=l(Ew,"https://deno.land/manual/tools/compiler"),Ew.forEach(a),vw.forEach(a),Mi=r(s),Ja=e(s,"H2",{id:!0});var _w=o(Ja);Se=e(_w,"A",{href:!0});var bw=o(Se);uE=l(bw,"AppImage"),bw.forEach(a),_w.forEach(a),Bi=r(s),Ce=e(s,"P",{});var yw=o(Ce);iE=l(yw,"AppImage supports only Linux with a kernel that supports SquashFS, while Node.js Compiler supports all three platforms of Linux, macOS and Windows, meanwhile without any special feature requirements from the kernel."),yw.forEach(a),Ri=r(s),Ie=e(s,"P",{});var ww=o(Ie);Fa=e(ww,"A",{href:!0,rel:!0});var Tw=o(Fa);kE=l(Tw,"https://appimage.org/"),Tw.forEach(a),ww.forEach(a),Yi=r(s),He=e(s,"P",{});var jw=o(He);Ua=e(jw,"A",{href:!0,rel:!0});var Dw=o(Ua);fE=l(Dw,"https://docs.appimage.org/introduction/motivation.html"),Dw.forEach(a),jw.forEach(a),Ji=r(s),Ne=e(s,"P",{});var xw=o(Ne);Ga=e(xw,"A",{href:!0,rel:!0});var qw=o(Ga);dE=l(qw,"https://docs.appimage.org/introduction/software-overview.html#ref-appimagekit"),qw.forEach(a),xw.forEach(a),this.h()},h(){k(za,"href","#programming-in-js"),k(as,"id","programming-in-js"),k(Va,"href","#first-program--webpage"),k(Bs,"id","first-program--webpage"),k(Rs,"class","language-html"),k(Ka,"href","#variables"),k(Ys,"id","variables"),k(Js,"class","language-js"),k(Za,"href","#console-log"),k(Fs,"id","console-log"),k(Us,"class","language-js"),k(st,"href","#tests"),k(Gs,"id","tests"),k(Ws,"class","language-js"),k(nt,"href","#loops"),k(zs,"id","loops"),k(Vs,"class","language-js"),k(at,"href","#functions"),k(Ks,"id","functions"),k(Qs,"class","language-js"),k(tt,"href","#selectors"),k(Xs,"id","selectors"),k(Zs,"class","language-js"),k(et,"href","#events"),k($s,"id","events"),k(sn,"class","language-js"),k(ot,"href","#typescript"),k(nn,"id","typescript"),k(lt,"href","#ajax"),k(an,"id","ajax"),k(tn,"class","language-js"),k(ct,"href","#p5"),k(en,"id","p5"),k(ut,"href","#nodejs"),k(on,"id","nodejs"),k(ln,"href","https://nodejs.org/en/download/"),k(ln,"rel","nofollow"),k(cn,"class","language-sh"),k(rn,"class","language-sh"),k(un,"class","language-js"),k(kn,"class","language-js"),k(fn,"class","language-js"),k(ht,"href","#jest"),k(dn,"id","jest"),k(mn,"class","language-sh"),k(hn,"class","language-sh"),k(vn,"class","language-sh"),k(En,"class","language-js"),k(Et,"href","#cypress"),k(_n,"id","cypress"),k(bn,"class","language-js"),k(yn,"class","language-sh"),k(wn,"class","language-js"),k(Tn,"class","language-js"),k(jn,"class","language-js"),k(bt,"href","#js-bundling"),k(Dn,"id","js-bundling"),k(yt,"href","#comparison"),k(xn,"id","comparison"),k(wt,"href","#for-cli-tools"),k(qn,"id","for-cli-tools"),k(Ln,"href","https://github.com/vercel/pkg"),k(Ln,"rel","nofollow"),k(An,"href","https://github.com/vercel/pkg-fetch#binary-compatibility"),k(An,"rel","nofollow"),k(gn,"href","https://github.com/nexe/nexe"),k(gn,"rel","nofollow"),k(Pn,"href","https://github.com/nexe/nexe/releases/tag/v3.3.3"),k(Pn,"rel","nofollow"),k(Sn,"href","https://github.com/igorklopov/enclose"),k(Sn,"rel","nofollow"),k(Cn,"href","https://github.com/igorklopov/enclose#versions-of-nodejs"),k(Cn,"rel","nofollow"),k(In,"href","https://github.com/pmq20/node-packer"),k(In,"rel","nofollow"),k(Hn,"href","https://github.com/denoland/deno"),k(Hn,"rel","nofollow"),k(Tt,"href","#for-gui-tools"),k(Nn,"id","for-gui-tools"),k(On,"href","https://github.com/nwjs/nw.js"),k(On,"rel","nofollow"),k(Mn,"href","https://github.com/nwjs/nw.js#downloads"),k(Mn,"rel","nofollow"),k(Bn,"href","https://github.com/electron/electron"),k(Bn,"rel","nofollow"),k(Rn,"href","https://github.com/tauri-apps/tauri"),k(Rn,"rel","nofollow"),k(Yn,"href","https://github.com/AppImage/appimagekit"),k(Yn,"rel","nofollow"),k(jt,"href","#pkg"),k(Jn,"id","pkg"),k(Dt,"start","2"),k(xt,"start","3"),k(qt,"start","4"),k(Lt,"start","5"),k(At,"start","6"),k(Fn,"href","https://github.com/vercel/pkg/issues/42"),k(Fn,"rel","nofollow"),k(Gn,"href","https://github.com/vercel/pkg#usage"),k(Gn,"rel","nofollow"),k(zn,"href","https://github.com/vercel/pkg#config"),k(zn,"rel","nofollow"),k(Ht,"href","#file-system"),k(Vn,"id","file-system"),k(Kn,"href","https://github.com/vercel/pkg#snapshot-filesystem"),k(Kn,"rel","nofollow"),k(Ot,"href","#node-binaries-fetcher"),k(Qn,"id","node-binaries-fetcher"),k(Xn,"href","https://github.com/vercel/pkg-fetch"),k(Xn,"rel","nofollow"),k(Zn,"href","https://github.com/vercel/pkg#targets"),k(Zn,"rel","nofollow"),k(Bt,"href","#details"),k($n,"id","details"),k(sa,"class","language-undefined"),k(na,"href","https://cernbox.cern.ch/index.php/s/edFZJijSs1aV2Ic"),k(na,"rel","nofollow"),k(ta,"class","language-undefined"),k(oa,"class","language-undefined"),k(la,"class","language-undefined"),k(ra,"class","language-undefined"),k(ia,"href","https://github.com/vercel/pkg#bytecode-reproducibility"),k(ia,"rel","nofollow"),k(fa,"class","language-undefined"),k(da,"class","language-undefined"),k(ma,"href","https://cernbox.cern.ch/index.php/s/4B7PMFGAR9qjCJk"),k(ma,"rel","nofollow"),k(ha,"class","language-undefined"),k(va,"class","language-undefined"),k(Ea,"href","https://github.com/vercel/pkg#other-considerations"),k(Ea,"rel","nofollow"),k(Wt,"href","#new-simple-js-project-specified-as-os-no-dependancies"),k(_a,"id","new-simple-js-project-specified-as-os-no-dependancies"),k(ba,"class","language-undefined"),k(ya,"class","language-undefined"),k(wa,"href","https://github.com/vercel/pkg/issues/1139"),k(wa,"rel","nofollow"),Lw(Zt.src,AE="https://codimd.web.cern.ch/uploads/upload_5df2ef2a5ebde634ba2a0ecfb1331f2a.png")||k(Zt,"src",AE),k(Zt,"alt","screenshot"),k($t,"href","#some-readable-parts"),k(Ta,"id","some-readable-parts"),Lw(ne.src,gE="https://codimd.web.cern.ch/uploads/upload_3f686fde8d43f62b1e8fe7baaff084d7.png")||k(ne,"src",gE),k(ne,"alt","screenshot"),k(ja,"href","https://cernbox.cern.ch/index.php/s/NMDb4wb8spG45VI"),k(ja,"rel","nofollow"),k(Da,"href","https://cernbox.cern.ch/index.php/s/ivsyWmB0X22mAZ1"),k(Da,"rel","nofollow"),k(te,"href","#nexe"),k(xa,"id","nexe"),k(ee,"start","2"),k(oe,"start","3"),k(pe,"start","4"),k(le,"start","5"),k(ce,"start","6"),k(re,"start","7"),k(qa,"href","https://github.com/nexe/nexe/issues/529"),k(qa,"rel","nofollow"),k(me,"href","#enclose"),k(La,"id","enclose"),k(Aa,"href","http://enclosejs.com/"),k(Aa,"rel","nofollow"),k(ve,"href","#node-packer"),k(ga,"id","node-packer"),k(Pa,"href","https://speakerdeck.com/pmq20/node-dot-js-compiler-compiling-your-node-dot-js-application-into-a-single-executable?slide=5"),k(Pa,"rel","nofollow"),k(_e,"href","#nwjs"),k(Sa,"id","nwjs"),k(Ca,"href","https://github.com/nwjs/nw.js/wiki/How-to-package-and-distribute-your-apps"),k(Ca,"rel","nofollow"),k(Ia,"href","https://www.sitepoint.com/cross-platform-desktop-app-nw-js/"),k(Ia,"rel","nofollow"),k(Ha,"href","https://stackoverflow.com/questions/8173232/how-to-make-exe-files-from-a-node-js-app"),k(Ha,"rel","nofollow"),k(Te,"start","2"),k(je,"start","3"),k(De,"href","#electron"),k(Na,"id","electron"),k(xe,"href","#asar"),k(Oa,"id","asar"),k(Le,"href","#tauri"),k(Ma,"id","tauri"),k(Ba,"href","https://github.com/tauri-apps/tauri"),k(Ba,"rel","nofollow"),k(ge,"href","#deno-build"),k(Ra,"id","deno-build"),k(Ya,"href","https://deno.land/manual/tools/compiler"),k(Ya,"rel","nofollow"),k(Se,"href","#appimage"),k(Ja,"id","appimage"),k(Fa,"href","https://appimage.org/"),k(Fa,"rel","nofollow"),k(Ua,"href","https://docs.appimage.org/introduction/motivation.html"),k(Ua,"rel","nofollow"),k(Ga,"href","https://docs.appimage.org/introduction/software-overview.html#ref-appimagekit"),k(Ga,"rel","nofollow")},m(s,u){i(s,as,u),n(as,za),n(za,ak),i(s,lr,u),i(s,Bs,u),n(Bs,Va),n(Va,tk),i(s,cr,u),i(s,Rs,u),Rs.innerHTML=gw,i(s,rr,u),i(s,Ys,u),n(Ys,Ka),n(Ka,ek),i(s,ur,u),i(s,Qa,u),n(Qa,ok),i(s,ir,u),i(s,Xa,u),n(Xa,pk),i(s,kr,u),i(s,Js,u),Js.innerHTML=Pw,i(s,fr,u),i(s,Fs,u),n(Fs,Za),n(Za,lk),i(s,dr,u),i(s,$a,u),n($a,ck),i(s,mr,u),i(s,Us,u),Us.innerHTML=Sw,i(s,hr,u),i(s,Gs,u),n(Gs,st),n(st,rk),i(s,vr,u),i(s,Ws,u),Ws.innerHTML=Cw,i(s,Er,u),i(s,zs,u),n(zs,nt),n(nt,uk),i(s,_r,u),i(s,Vs,u),Vs.innerHTML=Iw,i(s,br,u),i(s,Ks,u),n(Ks,at),n(at,ik),i(s,yr,u),i(s,Qs,u),Qs.innerHTML=Hw,i(s,wr,u),i(s,Xs,u),n(Xs,tt),n(tt,kk),i(s,Tr,u),i(s,Zs,u),Zs.innerHTML=Nw,i(s,jr,u),i(s,$s,u),n($s,et),n(et,fk),i(s,Dr,u),i(s,sn,u),sn.innerHTML=Ow,i(s,xr,u),i(s,nn,u),n(nn,ot),n(ot,dk),i(s,qr,u),i(s,pt,u),n(pt,oo),n(oo,mk),i(s,Lr,u),i(s,an,u),n(an,lt),n(lt,hk),i(s,Ar,u),i(s,tn,u),tn.innerHTML=Mw,i(s,gr,u),i(s,en,u),n(en,ct),n(ct,vk),i(s,Pr,u),i(s,rt,u),n(rt,po),n(po,Ek),i(s,Sr,u),i(s,on,u),n(on,ut),n(ut,_k),i(s,Cr,u),i(s,it,u),n(it,lo),n(lo,bk),i(s,Ir,u),i(s,pn,u),n(pn,yk),n(pn,ln),n(ln,wk),i(s,Hr,u),i(s,cn,u),cn.innerHTML=Bw,i(s,Nr,u),i(s,kt,u),n(kt,Tk),i(s,Or,u),i(s,rn,u),rn.innerHTML=Rw,i(s,Mr,u),i(s,ft,u),n(ft,jk),i(s,Br,u),i(s,un,u),un.innerHTML=Yw,i(s,Rr,u),i(s,dt,u),n(dt,Dk),i(s,Yr,u),i(s,kn,u),kn.innerHTML=Jw,i(s,Jr,u),i(s,mt,u),n(mt,xk),i(s,Fr,u),i(s,fn,u),fn.innerHTML=Fw,i(s,Ur,u),i(s,dn,u),n(dn,ht),n(ht,qk),i(s,Gr,u),i(s,vt,u),n(vt,Lk),i(s,Wr,u),i(s,mn,u),mn.innerHTML=Uw,i(s,zr,u),i(s,hn,u),hn.innerHTML=Gw,i(s,Vr,u),i(s,vn,u),vn.innerHTML=Ww,i(s,Kr,u),i(s,En,u),En.innerHTML=zw,i(s,Qr,u),i(s,_n,u),n(_n,Et),n(Et,Ak),i(s,Xr,u),i(s,_t,u),n(_t,gk),i(s,Zr,u),i(s,bn,u),bn.innerHTML=Vw,i(s,$r,u),i(s,yn,u),yn.innerHTML=Kw,i(s,su,u),i(s,wn,u),wn.innerHTML=Qw,i(s,nu,u),i(s,Tn,u),Tn.innerHTML=Xw,i(s,au,u),i(s,jn,u),jn.innerHTML=Zw,i(s,tu,u),i(s,Dn,u),n(Dn,bt),n(bt,Pk),i(s,eu,u),i(s,xn,u),n(xn,yt),n(yt,Sk),i(s,ou,u),i(s,qn,u),n(qn,wt),n(wt,Ck),i(s,pu,u),i(s,js,u),n(js,co),n(co,T),n(T,ro),n(ro,Ik),n(T,Hk),n(T,uo),n(uo,Nk),n(T,Ok),n(T,io),n(io,Mk),n(T,Bk),n(T,ko),n(ko,Rk),n(T,Yk),n(T,fo),n(fo,Jk),n(js,Fk),n(js,j),n(j,D),n(D,mo),n(mo,Ln),n(Ln,Uk),n(D,Gk),n(D,ho),n(ho,Wk),n(D,zk),n(D,vo),n(vo,Vk),n(D,Kk),n(D,Eo),n(Eo,Qk),n(D,Xk),n(D,_o),n(_o,An),n(An,Zk),n(j,$k),n(j,x),n(x,bo),n(bo,gn),n(gn,sf),n(x,nf),n(x,yo),n(yo,af),n(x,tf),n(x,wo),n(wo,ef),n(x,of),n(x,To),n(To,pf),n(x,lf),n(x,jo),n(jo,Pn),n(Pn,cf),n(j,rf),n(j,q),n(q,Do),n(Do,Sn),n(Sn,uf),n(q,kf),n(q,xo),n(xo,ff),n(q,df),n(q,qo),n(qo,mf),n(q,hf),n(q,Lo),n(Lo,vf),n(q,Ef),n(q,Ao),n(Ao,Cn),n(Cn,_f),n(j,bf),n(j,L),n(L,go),n(go,In),n(In,yf),n(L,wf),n(L,Po),n(Po,Tf),n(L,jf),n(L,So),n(So,Df),n(L,xf),n(L,Co),n(Co,qf),n(L,Lf),n(L,lu),n(j,Af),n(j,A),n(A,Io),n(Io,Hn),n(Hn,gf),n(A,Pf),n(A,Ho),n(Ho,Sf),n(A,Cf),n(A,No),n(No,If),n(A,Hf),n(A,Oo),n(Oo,Nf),n(A,Of),n(A,cu),i(s,ru,u),i(s,Nn,u),n(Nn,Tt),n(Tt,Mf),i(s,uu,u),i(s,Ds,u),n(Ds,Mo),n(Mo,g),n(g,Bo),n(Bo,Bf),n(g,Rf),n(g,Ro),n(Ro,Yf),n(g,Jf),n(g,Yo),n(Yo,Ff),n(g,Uf),n(g,Jo),n(Jo,Gf),n(g,Wf),n(g,Fo),n(Fo,zf),n(Ds,Vf),n(Ds,B),n(B,P),n(P,Uo),n(Uo,On),n(On,Kf),n(P,Qf),n(P,Go),n(Go,Xf),n(P,Zf),n(P,Wo),n(Wo,$f),n(P,sd),n(P,zo),n(zo,nd),n(P,ad),n(P,Vo),n(Vo,Mn),n(Mn,td),n(B,ed),n(B,S),n(S,Ko),n(Ko,Bn),n(Bn,od),n(S,pd),n(S,Qo),n(Qo,ld),n(S,cd),n(S,Xo),n(Xo,rd),n(S,ud),n(S,Zo),n(Zo,id),n(S,kd),n(S,iu),n(B,fd),n(B,C),n(C,$o),n($o,Rn),n(Rn,dd),n(C,md),n(C,sp),n(sp,hd),n(C,vd),n(C,np),n(np,Ed),n(C,_d),n(C,ap),n(ap,bd),n(C,yd),n(C,ku),n(B,wd),n(B,I),n(I,tp),n(tp,Yn),n(Yn,Td),n(I,jd),n(I,ep),n(ep,Dd),n(I,xd),n(I,op),n(op,qd),n(I,Ld),n(I,pp),n(pp,Ad),n(I,gd),n(I,fu),i(s,du,u),i(s,Jn,u),n(Jn,jt),n(jt,Pd),i(s,mu,u),i(s,v,u),n(v,lp),n(lp,cp),n(cp,rp),n(rp,Sd),n(v,Cd),n(v,up),n(up,Dt),n(Dt,ip),n(ip,Id),n(v,Hd),n(v,kp),n(kp,xt),n(xt,fp),n(fp,Nd),n(v,Od),n(v,dp),n(dp,qt),n(qt,mp),n(mp,Md),n(v,Bd),n(v,hp),n(hp,Lt),n(Lt,vp),n(vp,Rd),n(v,Yd),n(v,Ep),n(Ep,At),n(At,_p),n(_p,Jd),i(s,hu,u),i(s,gt,u),n(gt,Pt),n(Pt,Fd),n(Pt,Fn),n(Fn,Ud),i(s,vu,u),i(s,St,u),n(St,bp),n(bp,Gd),i(s,Eu,u),i(s,Ct,u),n(Ct,Wd),i(s,_u,u),i(s,E,u),n(E,Un),n(Un,zd),n(Un,Gn),n(Gn,Vd),n(Un,Kd),n(E,Qd),n(E,yp),n(yp,Xd),n(E,Zd),n(E,wp),n(wp,$d),n(E,sm),n(E,Wn),n(Wn,nm),n(Wn,zn),n(zn,am),n(Wn,tm),n(E,em),n(E,It),n(It,om),n(It,Tp),n(Tp,pm),n(E,lm),n(E,xs),n(xs,cm),n(xs,jp),n(jp,rm),n(xs,um),n(xs,Dp),n(Dp,im),i(s,bu,u),i(s,Vn,u),n(Vn,Ht),n(Ht,km),i(s,yu,u),i(s,b,u),n(b,fm),n(b,xp),n(xp,dm),n(b,mm),n(b,qp),n(qp,hm),n(b,vm),n(b,Lp),n(Lp,Em),n(b,_m),n(b,Ap),n(Ap,bm),n(b,ym),i(s,wu,u),i(s,R,u),n(R,wm),n(R,gp),n(gp,Tm),n(R,jm),n(R,Pp),n(Pp,Dm),n(R,xm),n(R,Nt),n(Nt,qm),n(Nt,Kn),n(Kn,Lm),i(s,Tu,u),i(s,Qn,u),n(Qn,Ot),n(Ot,Am),i(s,ju,u),i(s,qs,u),n(qs,Sp),n(Sp,Xn),n(Xn,gm),n(qs,Pm),n(qs,Cp),n(Cp,Zn),n(Zn,Sm),i(s,Du,u),i(s,Mt,u),n(Mt,Cm),i(s,xu,u),i(s,Ls,u),n(Ls,Ip),n(Ip,Hp),n(Hp,Im),n(Ls,Hm),n(Ls,Np),n(Np,Op),n(Op,Nm),i(s,qu,u),i(s,$n,u),n($n,Bt),n(Bt,Om),i(s,Lu,u),i(s,As,u),n(As,Mm),n(As,Mp),n(Mp,Bm),n(As,Rm),i(s,Au,u),i(s,sa,u),sa.innerHTML=$w,i(s,gu,u),i(s,gs,u),n(gs,Ym),n(gs,Bp),n(Bp,na),n(na,Jm),n(gs,Fm),i(s,Pu,u),i(s,aa,u),n(aa,Rp),n(Rp,Um),n(aa,Gm),i(s,Su,u),i(s,ta,u),ta.innerHTML=s0,i(s,Cu,u),i(s,ea,u),n(ea,Yp),n(Yp,Wm),n(ea,zm),i(s,Iu,u),i(s,oa,u),oa.innerHTML=n0,i(s,Hu,u),i(s,pa,u),n(pa,Jp),n(Jp,Vm),n(pa,Km),i(s,Nu,u),i(s,la,u),la.innerHTML=a0,i(s,Ou,u),i(s,ca,u),n(ca,Fp),n(Fp,Qm),n(ca,Xm),i(s,Mu,u),i(s,ra,u),ra.innerHTML=t0,i(s,Bu,u),i(s,ua,u),n(ua,Zm),n(ua,Rt),n(Rt,$m),n(Rt,ia),n(ia,sh),i(s,Ru,u),i(s,ka,u),n(ka,Up),n(Up,nh),n(ka,ah),i(s,Yu,u),i(s,fa,u),fa.innerHTML=e0,i(s,Ju,u),i(s,Yt,u),n(Yt,Gp),n(Gp,th),i(s,Fu,u),i(s,da,u),da.innerHTML=o0,i(s,Uu,u),i(s,Jt,u),n(Jt,Wp),n(Wp,eh),i(s,Gu,u),i(s,Ft,u),n(Ft,zp),n(zp,oh),i(s,Wu,u),i(s,Ps,u),n(Ps,ph),n(Ps,Vp),n(Vp,ma),n(ma,lh),n(Ps,ch),i(s,zu,u),i(s,ha,u),ha.innerHTML=p0,i(s,Vu,u),i(s,Ut,u),n(Ut,Kp),n(Kp,rh),i(s,Ku,u),i(s,va,u),va.innerHTML=l0,i(s,Qu,u),i(s,ts,u),n(ts,uh),n(ts,Qp),n(Qp,ih),n(ts,kh),n(ts,Gt),n(Gt,fh),n(Gt,Ea),n(Ea,dh),i(s,Xu,u),i(s,_a,u),n(_a,Wt),n(Wt,mh),i(s,Zu,u),i(s,zt,u),n(zt,Xp),n(Xp,hh),i(s,$u,u),i(s,ba,u),ba.innerHTML=c0,i(s,si,u),i(s,Vt,u),n(Vt,Zp),n(Zp,vh),i(s,ni,u),i(s,ya,u),ya.innerHTML=r0,i(s,ai,u),i(s,Y,u),n(Y,Ss),n(Ss,Eh),n(Ss,$p),n($p,_h),n(Ss,bh),n(Ss,sl),n(sl,yh),n(Y,wh),n(Y,nl),n(nl,Th),n(Y,jh),n(Y,Kt),n(Kt,Dh),n(Kt,wa),n(wa,xh),i(s,ti,u),i(s,Qt,u),n(Qt,qh),i(s,ei,u),i(s,Xt,u),n(Xt,Zt),i(s,oi,u),i(s,Ta,u),n(Ta,$t),n($t,Lh),i(s,pi,u),i(s,se,u),n(se,ne),i(s,li,u),i(s,ae,u),n(ae,Ah),i(s,ci,u),i(s,Cs,u),n(Cs,al),n(al,ja),n(ja,gh),n(Cs,Ph),n(Cs,tl),n(tl,Da),n(Da,Sh),i(s,ri,u),i(s,Is,u),n(Is,el),n(el,_),n(_,ol),n(ol,Ch),n(_,Ih),n(_,pl),n(pl,Hh),n(_,Nh),n(_,ll),n(ll,Oh),n(_,Mh),n(_,cl),n(cl,Bh),n(_,Rh),n(_,rl),n(rl,Yh),n(_,Jh),n(_,ul),n(ul,Fh),n(Is,Uh),n(Is,ui),i(s,ii,u),i(s,xa,u),n(xa,te),n(te,Gh),i(s,ki,u),i(s,m,u),n(m,il),n(il,kl),n(kl,fl),n(fl,Wh),n(m,zh),n(m,dl),n(dl,ee),n(ee,ml),n(ml,Vh),n(m,Kh),n(m,hl),n(hl,oe),n(oe,vl),n(vl,Qh),n(m,Xh),n(m,El),n(El,pe),n(pe,_l),n(_l,Zh),n(m,$h),n(m,bl),n(bl,le),n(le,yl),n(yl,sv),n(m,nv),n(m,wl),n(wl,ce),n(ce,Tl),n(Tl,av),n(m,tv),n(m,jl),n(jl,re),n(re,Dl),n(Dl,ev),i(s,fi,u),i(s,ue,u),n(ue,ov),i(s,di,u),i(s,ie,u),n(ie,qa),n(qa,pv),i(s,mi,u),i(s,ke,u),n(ke,xl),n(xl,lv),i(s,hi,u),i(s,fe,u),n(fe,cv),i(s,vi,u),i(s,Hs,u),n(Hs,ql),n(ql,rv),n(Hs,uv),n(Hs,Ll),n(Ll,iv),i(s,Ei,u),i(s,de,u),n(de,kv),i(s,_i,u),i(s,h,u),n(h,Al),n(Al,fv),n(h,dv),n(h,gl),n(gl,mv),n(h,hv),n(h,Pl),n(Pl,vv),n(h,Ev),n(h,Sl),n(Sl,_v),n(h,bv),n(h,Cl),n(Cl,yv),n(h,wv),n(h,Il),n(Il,Tv),n(h,jv),n(h,Hl),n(Hl,Dv),i(s,bi,u),i(s,La,u),n(La,me),n(me,xv),i(s,yi,u),i(s,he,u),n(he,Aa),n(Aa,qv),i(s,wi,u),i(s,H,u),n(H,Nl),n(Nl,Ol),n(Ol,Lv),n(H,Av),n(H,Ml),n(Ml,Bl),n(Bl,gv),n(H,Pv),n(H,Rl),n(Rl,Yl),n(Yl,Sv),n(H,Cv),n(H,Jl),n(Jl,Fl),n(Fl,Iv),i(s,Ti,u),i(s,ga,u),n(ga,ve),n(ve,Hv),i(s,ji,u),i(s,Ee,u),n(Ee,Pa),n(Pa,Nv),i(s,Di,u),i(s,Sa,u),n(Sa,_e),n(_e,Ov),i(s,xi,u),i(s,be,u),n(be,Ca),n(Ca,Mv),i(s,qi,u),i(s,ye,u),n(ye,Ia),n(Ia,Bv),i(s,Li,u),i(s,we,u),n(we,Ha),n(Ha,Rv),i(s,Ai,u),i(s,J,u),n(J,Ul),n(Ul,Gl),n(Gl,Wl),n(Wl,Yv),n(J,Jv),n(J,zl),n(zl,Te),n(Te,Vl),n(Vl,Fv),n(J,Uv),n(J,Kl),n(Kl,je),n(je,Ql),n(Ql,Gv),i(s,gi,u),i(s,Na,u),n(Na,De),n(De,Wv),i(s,Pi,u),i(s,Oa,u),n(Oa,xe),n(xe,zv),i(s,Si,u),i(s,qe,u),n(qe,Vv),i(s,Ci,u),i(s,Ma,u),n(Ma,Le),n(Le,Kv),i(s,Ii,u),i(s,Ae,u),n(Ae,Ba),n(Ba,Qv),i(s,Hi,u),i(s,Ns,u),n(Ns,Xl),n(Xl,es),n(es,Zl),n(Zl,Xv),n(es,Zv),n(es,$l),n($l,$v),n(es,s1),n(es,sc),n(sc,n1),n(Ns,a1),n(Ns,f),n(f,os),n(os,nc),n(nc,t1),n(os,e1),n(os,ac),n(ac,o1),n(os,p1),n(os,tc),n(tc,l1),n(f,c1),n(f,ps),n(ps,ec),n(ec,r1),n(ps,u1),n(ps,oc),n(oc,i1),n(ps,k1),n(ps,pc),n(pc,f1),n(f,d1),n(f,ls),n(ls,lc),n(lc,m1),n(ls,h1),n(ls,cc),n(cc,v1),n(ls,E1),n(ls,rc),n(rc,_1),n(f,b1),n(f,cs),n(cs,uc),n(uc,y1),n(cs,w1),n(cs,ic),n(ic,T1),n(cs,j1),n(cs,kc),n(kc,D1),n(f,x1),n(f,rs),n(rs,fc),n(fc,q1),n(rs,L1),n(rs,dc),n(dc,A1),n(rs,g1),n(rs,mc),n(mc,P1),n(f,S1),n(f,us),n(us,hc),n(hc,C1),n(us,I1),n(us,vc),n(vc,H1),n(us,N1),n(us,Ec),n(Ec,O1),n(f,M1),n(f,is),n(is,_c),n(_c,B1),n(is,R1),n(is,bc),n(bc,Y1),n(is,J1),n(is,yc),n(yc,F1),n(f,U1),n(f,ks),n(ks,wc),n(wc,G1),n(ks,W1),n(ks,Tc),n(Tc,z1),n(ks,V1),n(ks,jc),n(jc,K1),n(f,Q1),n(f,fs),n(fs,Dc),n(Dc,X1),n(fs,Z1),n(fs,xc),n(xc,$1),n(fs,s2),n(fs,qc),n(qc,n2),n(f,a2),n(f,ds),n(ds,Lc),n(Lc,t2),n(ds,e2),n(ds,Ac),n(Ac,o2),n(ds,p2),n(ds,gc),n(gc,l2),n(f,c2),n(f,ms),n(ms,Pc),n(Pc,r2),n(ms,u2),n(ms,Sc),n(Sc,i2),n(ms,k2),n(ms,Cc),n(Cc,f2),n(f,d2),n(f,hs),n(hs,Ic),n(Ic,m2),n(hs,h2),n(hs,Hc),n(Hc,v2),n(hs,E2),n(hs,Nc),n(Nc,_2),n(f,b2),n(f,vs),n(vs,Oc),n(Oc,y2),n(vs,w2),n(vs,Mc),n(Mc,T2),n(vs,j2),n(vs,Bc),n(Bc,D2),n(f,x2),n(f,Es),n(Es,Rc),n(Rc,q2),n(Es,L2),n(Es,Yc),n(Yc,A2),n(Es,g2),n(Es,Jc),n(Jc,P2),n(f,S2),n(f,_s),n(_s,Fc),n(Fc,C2),n(_s,I2),n(_s,Uc),n(Uc,H2),n(_s,N2),n(_s,Gc),n(Gc,O2),n(f,M2),n(f,bs),n(bs,Wc),n(Wc,B2),n(bs,R2),n(bs,zc),n(zc,Y2),n(bs,J2),n(bs,Vc),n(Vc,F2),n(f,U2),n(f,ys),n(ys,Kc),n(Kc,G2),n(ys,W2),n(ys,Qc),n(Qc,z2),n(ys,V2),n(ys,Xc),n(Xc,K2),n(f,Q2),n(f,ws),n(ws,Zc),n(Zc,X2),n(ws,Z2),n(ws,$c),n($c,$2),n(ws,sE),n(ws,sr),n(sr,nE),n(f,aE),n(f,Ts),n(Ts,nr),n(nr,tE),n(Ts,eE),n(Ts,ar),n(ar,oE),n(Ts,pE),n(Ts,tr),n(tr,lE),i(s,Ni,u),i(s,Ra,u),n(Ra,ge),n(ge,cE),i(s,Oi,u),i(s,Pe,u),n(Pe,Ya),n(Ya,rE),i(s,Mi,u),i(s,Ja,u),n(Ja,Se),n(Se,uE),i(s,Bi,u),i(s,Ce,u),n(Ce,iE),i(s,Ri,u),i(s,Ie,u),n(Ie,Fa),n(Fa,kE),i(s,Yi,u),i(s,He,u),n(He,Ua),n(Ua,fE),i(s,Ji,u),i(s,Ne,u),n(Ne,Ga),n(Ga,dE)},p:LE,i:LE,o:LE,d(s){s&&a(as),s&&a(lr),s&&a(Bs),s&&a(cr),s&&a(Rs),s&&a(rr),s&&a(Ys),s&&a(ur),s&&a(Qa),s&&a(ir),s&&a(Xa),s&&a(kr),s&&a(Js),s&&a(fr),s&&a(Fs),s&&a(dr),s&&a($a),s&&a(mr),s&&a(Us),s&&a(hr),s&&a(Gs),s&&a(vr),s&&a(Ws),s&&a(Er),s&&a(zs),s&&a(_r),s&&a(Vs),s&&a(br),s&&a(Ks),s&&a(yr),s&&a(Qs),s&&a(wr),s&&a(Xs),s&&a(Tr),s&&a(Zs),s&&a(jr),s&&a($s),s&&a(Dr),s&&a(sn),s&&a(xr),s&&a(nn),s&&a(qr),s&&a(pt),s&&a(Lr),s&&a(an),s&&a(Ar),s&&a(tn),s&&a(gr),s&&a(en),s&&a(Pr),s&&a(rt),s&&a(Sr),s&&a(on),s&&a(Cr),s&&a(it),s&&a(Ir),s&&a(pn),s&&a(Hr),s&&a(cn),s&&a(Nr),s&&a(kt),s&&a(Or),s&&a(rn),s&&a(Mr),s&&a(ft),s&&a(Br),s&&a(un),s&&a(Rr),s&&a(dt),s&&a(Yr),s&&a(kn),s&&a(Jr),s&&a(mt),s&&a(Fr),s&&a(fn),s&&a(Ur),s&&a(dn),s&&a(Gr),s&&a(vt),s&&a(Wr),s&&a(mn),s&&a(zr),s&&a(hn),s&&a(Vr),s&&a(vn),s&&a(Kr),s&&a(En),s&&a(Qr),s&&a(_n),s&&a(Xr),s&&a(_t),s&&a(Zr),s&&a(bn),s&&a($r),s&&a(yn),s&&a(su),s&&a(wn),s&&a(nu),s&&a(Tn),s&&a(au),s&&a(jn),s&&a(tu),s&&a(Dn),s&&a(eu),s&&a(xn),s&&a(ou),s&&a(qn),s&&a(pu),s&&a(js),s&&a(ru),s&&a(Nn),s&&a(uu),s&&a(Ds),s&&a(du),s&&a(Jn),s&&a(mu),s&&a(v),s&&a(hu),s&&a(gt),s&&a(vu),s&&a(St),s&&a(Eu),s&&a(Ct),s&&a(_u),s&&a(E),s&&a(bu),s&&a(Vn),s&&a(yu),s&&a(b),s&&a(wu),s&&a(R),s&&a(Tu),s&&a(Qn),s&&a(ju),s&&a(qs),s&&a(Du),s&&a(Mt),s&&a(xu),s&&a(Ls),s&&a(qu),s&&a($n),s&&a(Lu),s&&a(As),s&&a(Au),s&&a(sa),s&&a(gu),s&&a(gs),s&&a(Pu),s&&a(aa),s&&a(Su),s&&a(ta),s&&a(Cu),s&&a(ea),s&&a(Iu),s&&a(oa),s&&a(Hu),s&&a(pa),s&&a(Nu),s&&a(la),s&&a(Ou),s&&a(ca),s&&a(Mu),s&&a(ra),s&&a(Bu),s&&a(ua),s&&a(Ru),s&&a(ka),s&&a(Yu),s&&a(fa),s&&a(Ju),s&&a(Yt),s&&a(Fu),s&&a(da),s&&a(Uu),s&&a(Jt),s&&a(Gu),s&&a(Ft),s&&a(Wu),s&&a(Ps),s&&a(zu),s&&a(ha),s&&a(Vu),s&&a(Ut),s&&a(Ku),s&&a(va),s&&a(Qu),s&&a(ts),s&&a(Xu),s&&a(_a),s&&a(Zu),s&&a(zt),s&&a($u),s&&a(ba),s&&a(si),s&&a(Vt),s&&a(ni),s&&a(ya),s&&a(ai),s&&a(Y),s&&a(ti),s&&a(Qt),s&&a(ei),s&&a(Xt),s&&a(oi),s&&a(Ta),s&&a(pi),s&&a(se),s&&a(li),s&&a(ae),s&&a(ci),s&&a(Cs),s&&a(ri),s&&a(Is),s&&a(ii),s&&a(xa),s&&a(ki),s&&a(m),s&&a(fi),s&&a(ue),s&&a(di),s&&a(ie),s&&a(mi),s&&a(ke),s&&a(hi),s&&a(fe),s&&a(vi),s&&a(Hs),s&&a(Ei),s&&a(de),s&&a(_i),s&&a(h),s&&a(bi),s&&a(La),s&&a(yi),s&&a(he),s&&a(wi),s&&a(H),s&&a(Ti),s&&a(ga),s&&a(ji),s&&a(Ee),s&&a(Di),s&&a(Sa),s&&a(xi),s&&a(be),s&&a(qi),s&&a(ye),s&&a(Li),s&&a(we),s&&a(Ai),s&&a(J),s&&a(gi),s&&a(Na),s&&a(Pi),s&&a(Oa),s&&a(Si),s&&a(qe),s&&a(Ci),s&&a(Ma),s&&a(Ii),s&&a(Ae),s&&a(Hi),s&&a(Ns),s&&a(Ni),s&&a(Ra),s&&a(Oi),s&&a(Pe),s&&a(Mi),s&&a(Ja),s&&a(Bi),s&&a(Ce),s&&a(Ri),s&&a(Ie),s&&a(Yi),s&&a(He),s&&a(Ji),s&&a(Ne)}}}const Q0={title:"JavaScript",short:"High-level, dynamically-typed language, easy of use and flexible",topic:"programming-language web"};class X0 extends G0{constructor(as){super(),W0(this,as,null,V0,z0,{})}}export{X0 as default,Q0 as metadata};
